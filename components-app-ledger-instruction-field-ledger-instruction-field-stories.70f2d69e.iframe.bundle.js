"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[2137],{"./ui/components/app/ledger-instruction-field/ledger-instruction-field.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _DefaultStory$paramet,_DefaultStory$paramet2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/components/app/ledger-instruction-field/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/App/LedgerInstructionField",argTypes:{showDataInstruction:{control:{type:"boolean"}}}},DefaultStory=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.Z,args);DefaultStory.storyName="Default",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => <LedgerInstructionField {...args} />",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet2=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet2?void 0:_DefaultStory$paramet2.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}},"./ui/components/app/ledger-instruction-field/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>LedgerInstructionField});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),util=__webpack_require__("./app/scripts/lib/util.ts"),app=__webpack_require__("./shared/constants/app.ts"),hardware_wallets=__webpack_require__("./shared/constants/hardware-wallets.ts"),app_app=__webpack_require__("./ui/ducks/app/app.ts"),metamask=__webpack_require__("./ui/ducks/metamask/metamask.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),actions=__webpack_require__("./ui/store/actions.ts"),component_library=__webpack_require__("./ui/components/component-library/index.ts");const renderInstructionStep=(text,show=!0,color=design_system.d9.textDefault)=>show&&react.createElement(component_library.xv,{color,as:"h6"},text);function LedgerInstructionField({showDataInstruction}){const t=(0,useI18nContext.C)(),dispatch=(0,es.I0)(),webHidConnectedStatus=(0,es.v9)(app_app.Tv),ledgerTransportType=(0,es.v9)(metamask.Bp),transportStatus=(0,es.v9)(app_app.$0),environmentTypeIsFullScreen=(0,util.kD)()===app.BK;(0,react.useEffect)((()=>{(async()=>{if(ledgerTransportType===hardware_wallets.fR.webhid&&webHidConnectedStatus===hardware_wallets.Jc.connected&&transportStatus===hardware_wallets.h$.none)try{const transportedCreated=await(0,actions.Szy)();dispatch((0,app_app.yG)(transportedCreated?hardware_wallets.h$.verified:hardware_wallets.h$.unknownFailure))}catch(e){e.message.match("Failed to open the device")?dispatch((0,app_app.yG)(hardware_wallets.h$.deviceOpenFailure)):e.message.match("the device is already open")?dispatch((0,app_app.yG)(hardware_wallets.h$.verified)):dispatch((0,app_app.yG)(hardware_wallets.h$.unknownFailure))}})(),(async()=>{if(ledgerTransportType===hardware_wallets.fR.webhid&&webHidConnectedStatus!==hardware_wallets.Jc.connected){var _window$navigator;const devices=await(null===(_window$navigator=window.navigator)||void 0===_window$navigator||null===(_window$navigator=_window$navigator.hid)||void 0===_window$navigator?void 0:_window$navigator.getDevices()),webHidIsConnected=null==devices?void 0:devices.some((device=>device.vendorId===Number(hardware_wallets.YS)));dispatch((0,app_app.Wm)(webHidIsConnected?hardware_wallets.Jc.connected:hardware_wallets.Jc.notConnected))}})()}),[dispatch,ledgerTransportType,webHidConnectedStatus,transportStatus]),(0,react.useEffect)((()=>()=>{dispatch((0,app_app.yG)(hardware_wallets.h$.none))}),[dispatch]);const usingWebHID=ledgerTransportType===hardware_wallets.fR.webhid;return react.createElement("div",null,react.createElement("div",{className:"confirm-detail-row"},react.createElement(component_library.wB,{severity:design_system.t3.INFO},react.createElement("div",{className:"ledger-live-dialog"},renderInstructionStep(t("ledgerConnectionInstructionHeader")),renderInstructionStep(`• ${t("ledgerConnectionInstructionStepThree")}`),renderInstructionStep(`• ${t("ledgerConnectionInstructionStepFour")}`,showDataInstruction),renderInstructionStep(react.createElement("span",null,react.createElement(component_library.ZP,{textAlign:design_system.PH.Left,onClick:async()=>{environmentTypeIsFullScreen?window.location.reload():__webpack_require__.g.platform.openExtensionInBrowser(null,null,!0)}},t("ledgerConnectionInstructionCloseOtherApps"))),transportStatus===hardware_wallets.h$.deviceOpenFailure),renderInstructionStep(react.createElement("span",null,react.createElement(component_library.ZP,{textAlign:design_system.PH.Left,onClick:async()=>{if(environmentTypeIsFullScreen){const webHidIsConnected=(await window.navigator.hid.requestDevice({filters:[{vendorId:hardware_wallets.YS}]})).some((device=>device.vendorId===Number(hardware_wallets.YS)));dispatch((0,app_app.Wm)({webHidConnectedStatus:webHidIsConnected?hardware_wallets.Jc.connected:hardware_wallets.Jc.notConnected}))}else __webpack_require__.g.platform.openExtensionInBrowser(null,null,!0)}},t(environmentTypeIsFullScreen?"clickToConnectLedgerViaWebHID":"openFullScreenForLedgerWebHid"))),usingWebHID&&webHidConnectedStatus===hardware_wallets.Jc.notConnected,design_system.d9.warningDefault)))))}LedgerInstructionField.propTypes={showDataInstruction:prop_types_default().bool},LedgerInstructionField.__docgenInfo={description:"",methods:[],displayName:"LedgerInstructionField",props:{showDataInstruction:{description:"",type:{name:"bool"},required:!1}}}}}]);