"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[3229],{"./ui/components/institutional/wrong-network-notification/wrong-network-notification.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>wrong_network_notification_stories});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),dist=__webpack_require__("./node_modules/@metamask/controller-utils/dist/index.js"),store=__webpack_require__("./ui/store/store.ts"),test_data=__webpack_require__("./.storybook/test-data.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),selectors=__webpack_require__("./ui/selectors/index.js"),institutional_selectors=__webpack_require__("./ui/selectors/institutional/selectors.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),metamask=__webpack_require__("./ui/ducks/metamask/metamask.js"),component_library=__webpack_require__("./ui/components/component-library/index.js"),box=__webpack_require__("./ui/components/ui/box/index.js");const WrongNetworkNotification=()=>{const t=(0,useI18nContext.C)(),providerConfig=(0,es.v9)(metamask.Vu),balance=(0,es.v9)(selectors._ot),isCustodianSupportedChain=(0,es.v9)(institutional_selectors.xL),network=providerConfig.nickname||providerConfig.type;return!isCustodianSupportedChain&&balance?react.createElement(box.ZP,{className:"wrong-network-notification","data-testid":"wrong-network-notification",display:design_system.bA.FLEX,justifyContent:design_system.E0.center,alignItems:design_system.g1.center,padding:[1,6],backgroundColor:design_system.lP.errorMuted,width:design_system.D8.FULL},react.createElement(component_library.JO,{name:component_library.uH.Danger,size:component_library.Jh.Sm,color:design_system.EY.errorDefault}),react.createElement(component_library.xv,{marginLeft:2},t("custodyWrongChain",[network?network.charAt(0).toUpperCase()+network.slice(1):""]))):null};WrongNetworkNotification.__docgenInfo={description:"",methods:[],displayName:"WrongNetworkNotification"};const wrong_network_notification=WrongNetworkNotification;var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3;const customData={...test_data.default,metamask:{...test_data.default.metamask,providerConfig:{type:"test",chainId:(0,dist.toHex)(3)},cachedBalances:{[(0,dist.toHex)(3)]:{"0x5Ab19e7091dD208F352F8E727B6DCC6F8aBB6275":"0x0"}},selectedAddress:"0x5Ab19e7091dD208F352F8E727B6DCC6F8aBB6275",custodianSupportedChains:{"0x5Ab19e7091dD208F352F8E727B6DCC6F8aBB6275":{supportedChains:["1","2"],custodianName:"saturn"}},identities:{"0x5Ab19e7091dD208F352F8E727B6DCC6F8aBB6275":{name:"Custody Account A",address:"0x5Ab19e7091dD208F352F8E727B6DCC6F8aBB6275"}},keyrings:[{type:"Custody",accounts:["0x5Ab19e7091dD208F352F8E727B6DCC6F8aBB6275"]}]}},wrong_network_notification_stories_store=(0,store.Z)(customData),wrong_network_notification_stories={title:"Components/Institutional/WrongNetworkNotification",decorators:[story=>react.createElement(es.zt,{store:wrong_network_notification_stories_store},story())],component:wrong_network_notification},DefaultStory=()=>react.createElement(wrong_network_notification,null);DefaultStory.storyName="WrongNetworkNotification",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"() => {\n  return <WrongNetworkNotification />;\n}",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}},"./ui/selectors/institutional/selectors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{G:()=>getCustodianIconForAddress,GZ:()=>getIsNoteToTraderSupported,Hg:()=>getMMIConfiguration,L8:()=>getTransactionStatusMap,LL:()=>getMmiPortfolioEnabled,kl:()=>getMmiPortfolioUrl,q9:()=>getCustodyAccountDetails,rE:()=>getMMIAddressFromModalOrAddress,vG:()=>getInteractiveReplacementToken,xL:()=>getIsCustodianSupportedChain});var ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ethereumjs-util/dist.browser/index.js"),_selectors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/selectors/selectors.js"),_ducks_metamask_metamask__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/ducks/metamask/metamask.js"),_shared_modules_conversion_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./shared/modules/conversion.utils.ts");function getTransactionStatusMap(state){return state.metamask.custodyStatusMaps}function getCustodyAccountDetails(state){return state.metamask.custodyAccountDetails}function getMmiPortfolioEnabled(state){var _state$metamask$mmiCo,_state$metamask$mmiCo2;return null===(_state$metamask$mmiCo=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo||null===(_state$metamask$mmiCo2=_state$metamask$mmiCo.portfolio)||void 0===_state$metamask$mmiCo2?void 0:_state$metamask$mmiCo2.enabled}function getMmiPortfolioUrl(state){var _state$metamask$mmiCo3,_state$metamask$mmiCo4;return null===(_state$metamask$mmiCo3=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo3||null===(_state$metamask$mmiCo4=_state$metamask$mmiCo3.portfolio)||void 0===_state$metamask$mmiCo4?void 0:_state$metamask$mmiCo4.url}function getCustodianIconForAddress(state,address){var _state$metamask$custo;let custodianIcon;const checksummedAddress=address&&(0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(address);if(checksummedAddress&&null!==(_state$metamask$custo=state.metamask.custodyAccountDetails)&&void 0!==_state$metamask$custo&&_state$metamask$custo[checksummedAddress]){var _state$metamask$mmiCo6,_state$metamask$mmiCo7,_state$metamask$mmiCo8;const{custodianName}=state.metamask.custodyAccountDetails[checksummedAddress];custodianIcon=null===(_state$metamask$mmiCo6=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo6||null===(_state$metamask$mmiCo7=_state$metamask$mmiCo6.custodians)||void 0===_state$metamask$mmiCo7||null===(_state$metamask$mmiCo8=_state$metamask$mmiCo7.find((custodian=>custodian.name===custodianName)))||void 0===_state$metamask$mmiCo8?void 0:_state$metamask$mmiCo8.iconUrl}return custodianIcon}function getIsCustodianSupportedChain(state){const selectedIdentity=(0,_selectors__WEBPACK_IMPORTED_MODULE_1__.Sv)(state),accountType=(0,_selectors__WEBPACK_IMPORTED_MODULE_1__.lx)(state),providerConfig=(0,_ducks_metamask_metamask__WEBPACK_IMPORTED_MODULE_2__.Vu)(state),supportedChains="custody"===accountType?function getCustodyAccountSupportedChains(state,address){return state.metamask.custodianSupportedChains?state.metamask.custodianSupportedChains[(0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(address)]:[]}(state,selectedIdentity.address):null;return null==supportedChains||!supportedChains.supportedChains||supportedChains.supportedChains.includes((0,_shared_modules_conversion_utils__WEBPACK_IMPORTED_MODULE_3__.Z8)(providerConfig.chainId))}function getMMIAddressFromModalOrAddress(state){return state.appState.modal.modalState.props.address||state.metamask.selectedAddress}function getMMIConfiguration(state){return state.metamask.mmiConfiguration||[]}function getInteractiveReplacementToken(state){return state.metamask.interactiveReplacementToken||{}}function getIsNoteToTraderSupported(state,fromChecksumHexAddress){var _state$metamask$custo2;let isNoteToTraderSupported=!1;if(null!==(_state$metamask$custo2=state.metamask.custodyAccountDetails)&&void 0!==_state$metamask$custo2&&_state$metamask$custo2[fromChecksumHexAddress]){var _state$metamask$mmiCo9,_state$metamask$mmiCo10,_state$metamask$mmiCo11;const{custodianName}=state.metamask.custodyAccountDetails[fromChecksumHexAddress];isNoteToTraderSupported=null===(_state$metamask$mmiCo9=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo9||null===(_state$metamask$mmiCo10=_state$metamask$mmiCo9.custodians)||void 0===_state$metamask$mmiCo10||null===(_state$metamask$mmiCo11=_state$metamask$mmiCo10.find((custodian=>custodian.name===custodianName)))||void 0===_state$metamask$mmiCo11?void 0:_state$metamask$mmiCo11.isNoteToTraderSupported}return isNoteToTraderSupported}}}]);