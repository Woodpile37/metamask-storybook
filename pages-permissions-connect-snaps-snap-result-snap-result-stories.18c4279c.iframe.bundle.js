"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[7720],{"./ui/pages/permissions-connect/snaps/snap-result/snap-result.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,ErrorStory:()=>ErrorStory,LoadingStory:()=>LoadingStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>snap_result_stories});var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3,_LoadingStory$paramet,_LoadingStory$paramet2,_LoadingStory$paramet3,_ErrorStory$parameter,_ErrorStory$parameter2,_ErrorStory$parameter3,react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),page_container=__webpack_require__("./ui/components/ui/page-container/index.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),box=__webpack_require__("./ui/components/ui/box/box.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.js"),pulse_loader=__webpack_require__("./ui/components/ui/pulse-loader/pulse-loader.js"),install_error=__webpack_require__("./ui/components/app/snaps/install-error/install-error.js"),snap_authorship_header=__webpack_require__("./ui/components/app/snaps/snap-authorship-header/index.js"),util=__webpack_require__("./ui/helpers/utils/util.js");function SnapResult({request,requestState,approveSnapResult,targetSubjectMetadata}){const t=(0,useI18nContext.C)(),onSubmit=(0,react.useCallback)((()=>approveSnapResult(request.metadata.id)),[request,approveSnapResult]),hasError=!requestState.loading&&requestState.error,isLoading=requestState.loading,snapName=(0,util.NZ)(targetSubjectMetadata.origin,targetSubjectMetadata);return react.createElement(box.ZP,{className:"page-container snap-result",justifyContent:design_system.E0.spaceBetween,height:design_system.D8.FULL,borderStyle:design_system.N4.none,flexDirection:design_system.uM.COLUMN},react.createElement(snap_authorship_header.Z,{snapId:targetSubjectMetadata.origin}),react.createElement(box.ZP,{className:"snap-result__content",paddingLeft:4,paddingRight:4,alignItems:design_system.g1.center,flexDirection:design_system.uM.COLUMN,style:{overflowY:"auto"}},isLoading&&react.createElement(box.ZP,{className:"snap-result__content__loader-container",flexDirection:design_system.uM.COLUMN,alignItems:design_system.g1.center,justifyContent:design_system.E0.center},react.createElement(pulse_loader.Z,null)),!isLoading&&!hasError&&function getSuccessScreen(requestType,snapNameToRender){let successScreenTitle;switch(requestType){case"wallet_installSnap":successScreenTitle=t("snapInstallSuccess");break;case"wallet_updateSnap":successScreenTitle=t("snapUpdateSuccess");break;default:successScreenTitle=t("snapResultSuccess")}return react.createElement(box.ZP,{flexDirection:design_system.uM.COLUMN,alignItems:design_system.g1.center,justifyContent:design_system.E0.center,height:design_system.D8.FULL,paddingTop:2,paddingBottom:2},react.createElement(component_library.fM,{className:"snap-result__header__icon",iconName:component_library.uH.Confirmation,size:component_library.Jh.Xl,iconProps:{size:component_library.Jh.Xl},color:design_system.EY.successDefault,backgroundColor:design_system.lP.successMuted}),react.createElement(component_library.xv,{fontWeight:design_system.m5.BOLD,variant:design_system.rK.headingLg,paddingBottom:2,marginTop:4},successScreenTitle),react.createElement(component_library.xv,{textAlign:design_system.PH.Center},t("snapResultSuccessDescription",[react.createElement(component_library.xv,{as:component_library.Tc.Span,key:"1",fontWeight:design_system.U9.Medium},snapNameToRender)])))}(requestState.type,snapName),hasError&&function getFailedScreen(requestType,snapNameToRender){let failedScreenTitle,failedScreenDescription;switch(requestType){case"wallet_installSnap":failedScreenTitle=t("snapInstallationErrorTitle"),failedScreenDescription=t("snapInstallationErrorDescription",[react.createElement(component_library.xv,{as:component_library.Tc.Span,key:"1",fontWeight:design_system.U9.Medium},snapNameToRender)]);break;case"wallet_updateSnap":failedScreenTitle=t("snapUpdateErrorTitle"),failedScreenDescription=t("snapUpdateErrorDescription",[react.createElement(component_library.xv,{as:component_library.Tc.Span,key:"1",fontWeight:design_system.U9.Medium},snapNameToRender)]);break;default:failedScreenTitle=t("snapResultError")}return react.createElement(install_error.Z,{error:requestState.error,title:failedScreenTitle,description:failedScreenDescription,iconName:component_library.uH.Warning})}(requestState.type,snapName)),react.createElement(box.ZP,{className:"snap-result__footer",alignItems:design_system.g1.center,flexDirection:design_system.uM.COLUMN,style:{boxShadow:"var(--shadow-size-lg) var(--color-shadow-default)"}},react.createElement(page_container.g$,{hideCancel:!0,disabled:isLoading,onSubmit,submitText:t("ok").toUpperCase()})))}SnapResult.propTypes={request:prop_types_default().object.isRequired,requestState:prop_types_default().object.isRequired,approveSnapResult:prop_types_default().func.isRequired,targetSubjectMetadata:prop_types_default().shape({iconUrl:prop_types_default().string,name:prop_types_default().string,origin:prop_types_default().string.isRequired,sourceCode:prop_types_default().string,version:prop_types_default().string}).isRequired},SnapResult.__docgenInfo={description:"",methods:[],displayName:"SnapResult",props:{request:{description:"",type:{name:"object"},required:!0},requestState:{description:"",type:{name:"object"},required:!0},approveSnapResult:{description:"",type:{name:"func"},required:!0},targetSubjectMetadata:{description:"",type:{name:"shape",value:{iconUrl:{name:"string",required:!1},name:{name:"string",required:!1},origin:{name:"string",required:!0},sourceCode:{name:"string",required:!1},version:{name:"string",required:!1}}},required:!0}}};const snap_result_stories={title:"Pages/Snaps/SnapResult",component:SnapResult,argTypes:{}},DefaultStory=args=>react.createElement(SnapResult,args);DefaultStory.storyName="Default",DefaultStory.args={request:{metadata:{id:"foo"}},requestState:{loading:!1},targetSubjectMetadata:{origin:"npm:@metamask/test-snap-bip44"}};const LoadingStory=args=>react.createElement(SnapResult,args);LoadingStory.storyName="Loading",LoadingStory.args={request:{metadata:{id:"foo"}},requestState:{loading:!0},targetSubjectMetadata:{origin:"npm:@metamask/test-snap-bip44"}};const ErrorStory=args=>react.createElement(SnapResult,args);ErrorStory.storyName="Error",ErrorStory.args={request:{metadata:{id:"foo"}},requestState:{loading:!1,error:"foo"},targetSubjectMetadata:{origin:"npm:@metamask/test-snap-bip44"}},DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => <SnapResult {...args} />",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}},LoadingStory.parameters={...LoadingStory.parameters,docs:{...null===(_LoadingStory$paramet=LoadingStory.parameters)||void 0===_LoadingStory$paramet?void 0:_LoadingStory$paramet.docs,source:{originalSource:"args => <SnapResult {...args} />",...null===(_LoadingStory$paramet2=LoadingStory.parameters)||void 0===_LoadingStory$paramet2||null===(_LoadingStory$paramet3=_LoadingStory$paramet2.docs)||void 0===_LoadingStory$paramet3?void 0:_LoadingStory$paramet3.source}}},ErrorStory.parameters={...ErrorStory.parameters,docs:{...null===(_ErrorStory$parameter=ErrorStory.parameters)||void 0===_ErrorStory$parameter?void 0:_ErrorStory$parameter.docs,source:{originalSource:"args => <SnapResult {...args} />",...null===(_ErrorStory$parameter2=ErrorStory.parameters)||void 0===_ErrorStory$parameter2||null===(_ErrorStory$parameter3=_ErrorStory$parameter2.docs)||void 0===_ErrorStory$parameter3?void 0:_ErrorStory$parameter3.source}}};const __namedExportsOrder=["DefaultStory","LoadingStory","ErrorStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"},LoadingStory.__docgenInfo={description:"",methods:[],displayName:"LoadingStory"},ErrorStory.__docgenInfo={description:"",methods:[],displayName:"ErrorStory"}}}]);