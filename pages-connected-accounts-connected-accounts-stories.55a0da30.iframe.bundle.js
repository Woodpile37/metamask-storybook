"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[246],{"./ui/pages/connected-accounts/connected-accounts.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>connected_accounts_stories});var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3,react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),popover=__webpack_require__("./ui/components/ui/popover/index.js"),connected_accounts_list=__webpack_require__("./ui/components/app/connected-accounts-list/index.js"),connected_accounts_permissions=__webpack_require__("./ui/components/app/connected-accounts-permissions/connected-accounts-permissions.js"),util=__webpack_require__("./ui/helpers/utils/util.js");function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class ConnectedAccounts extends react.PureComponent{render(){const{accountToConnect,activeTabOrigin,isActiveTabExtension,connectAccount,connectedAccounts,history,mostRecentOverviewPage,permissions,selectedAddress,removePermittedAccount,setSelectedAddress}=this.props,{t}=this.context,connectedAccountsDescription=connectedAccounts.length>1?t("connectedAccountsDescriptionPlural",[connectedAccounts.length]):t("connectedAccountsDescriptionSingular");return react.createElement(popover.Z,{title:isActiveTabExtension?t("currentExtension"):(0,util.nr)(activeTabOrigin),subtitle:connectedAccounts.length?connectedAccountsDescription:t("connectedAccountsEmptyDescription"),onClose:()=>history.push(mostRecentOverviewPage),footerClassName:"connected-accounts__footer",footer:react.createElement(connected_accounts_permissions.Z,{permissions})},react.createElement(connected_accounts_list.Z,{accountToConnect,connectAccount,connectedAccounts,selectedAddress,removePermittedAccount,setSelectedAddress,shouldRenderListOptions:!0}))}}_defineProperty(ConnectedAccounts,"contextTypes",{t:prop_types_default().func.isRequired}),_defineProperty(ConnectedAccounts,"defaultProps",{accountToConnect:null,permissions:void 0}),_defineProperty(ConnectedAccounts,"propTypes",{accountToConnect:prop_types_default().object,activeTabOrigin:prop_types_default().string.isRequired,connectAccount:prop_types_default().func.isRequired,connectedAccounts:prop_types_default().array.isRequired,mostRecentOverviewPage:prop_types_default().string.isRequired,permissions:prop_types_default().array,isActiveTabExtension:prop_types_default().bool.isRequired,selectedAddress:prop_types_default().string.isRequired,removePermittedAccount:prop_types_default().func.isRequired,setSelectedAddress:prop_types_default().func.isRequired,history:prop_types_default().object.isRequired}),ConnectedAccounts.__docgenInfo={description:"",methods:[],displayName:"ConnectedAccounts",props:{accountToConnect:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"object"},required:!1},permissions:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"array"},required:!1},activeTabOrigin:{description:"",type:{name:"string"},required:!0},connectAccount:{description:"",type:{name:"func"},required:!0},connectedAccounts:{description:"",type:{name:"array"},required:!0},mostRecentOverviewPage:{description:"",type:{name:"string"},required:!0},isActiveTabExtension:{description:"",type:{name:"bool"},required:!0},selectedAddress:{description:"",type:{name:"string"},required:!0},removePermittedAccount:{description:"",type:{name:"func"},required:!0},setSelectedAddress:{description:"",type:{name:"func"},required:!0},history:{description:"",type:{name:"object"},required:!0}},context:{t:{type:{name:"func"},required:!0}}};const connected_accounts_stories={title:"Pages/ConnectedAccounts"},account=[{name:"Account 1",address:"0x983211ce699ea5ab57cc528086154b6db1ad8e55"}],identities={name:"Account 1",address:"0x64a845a5b02460acf8a3d84503b0d68d028b4bb4"},DefaultStory=()=>react.createElement(ConnectedAccounts,{connectedAccounts:account,activeTabOrigin:"https://metamask.github.io",accountToConnect:identities,connectAccount:(0,dist.aD)("Account Connected"),removePermittedAccount:(0,dist.aD)("Account Removed"),setSelectedAddress:(0,dist.aD)("Selected Address Changed")});DefaultStory.storyName="Default",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"() => {\n  return <ConnectedAccounts connectedAccounts={account} activeTabOrigin=\"https://metamask.github.io\" accountToConnect={identities} connectAccount={action('Account Connected')} removePermittedAccount={action('Account Removed')} setSelectedAddress={action('Selected Address Changed')} />;\n}",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}}}]);