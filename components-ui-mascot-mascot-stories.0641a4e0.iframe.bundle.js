"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[4538],{"./ui/components/ui/mascot/mascot.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3,events__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/events/events.js"),events__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/components/ui/button/index.js"),_button_group__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/components/ui/button-group/index.js"),_mascot_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/components/ui/mascot/mascot.component.js");const animationEventEmitter=new(events__WEBPACK_IMPORTED_MODULE_0___default()),containerStyle={height:"600px",width:"357px",border:"1px solid black",display:"flex",flexFlow:"column",justifyContent:"center",alignItems:"center"},buttonStyle={marginTop:"16px"},__WEBPACK_DEFAULT_EXPORT__={title:"Components/UI/Mascot"},DefaultStory=()=>{const[lookAtDirection,setLookAtDirection]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[followMouseMode,setFollowMouseMode]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[clickToLookMode,setClickToLookMode]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[clickedTarget,setClickedTarget]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),createDirectionOnClick=direction=>()=>{setFollowMouseMode(!1),setClickToLookMode(!1),setLookAtDirection(direction)};return react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{style:containerStyle,onClick:event=>{const isButtonClick=event.target.classList.contains("button-group__button");clickToLookMode&&!isButtonClick&&(setLookAtDirection(null),setClickedTarget({x:event.clientX,y:event.clientY}))}},react__WEBPACK_IMPORTED_MODULE_1__.createElement(_mascot_component__WEBPACK_IMPORTED_MODULE_4__.Z,{animationEventEmitter,width:"120",height:"120",followMouse:followMouseMode,lookAtTarget:clickedTarget,lookAtDirection}),react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{style:buttonStyle},react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button_group__WEBPACK_IMPORTED_MODULE_3__.Z,{style:{width:"300px",flexFlow:"column"},defaultActiveButtonIndex:4},react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{onClick:createDirectionOnClick("up")},"Up"),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{onClick:createDirectionOnClick("down")},"Down"),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{onClick:createDirectionOnClick("left")},"Left"),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{onClick:createDirectionOnClick("right")},"Right"),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{onClick:createDirectionOnClick("middle")},"Middle"),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{onClick:()=>{setFollowMouseMode(!0),setClickToLookMode(!1)}},"Follow Mouse mode"),react__WEBPACK_IMPORTED_MODULE_1__.createElement(_button__WEBPACK_IMPORTED_MODULE_2__.Z,{onClick:()=>{setFollowMouseMode(!1),setClickToLookMode(!0)}},"Look a clicked location mode"))))};DefaultStory.storyName="Default",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"() => {\n  const [lookAtDirection, setLookAtDirection] = useState(null);\n  const [followMouseMode, setFollowMouseMode] = useState(false);\n  const [clickToLookMode, setClickToLookMode] = useState(false);\n  const [clickedTarget, setClickedTarget] = useState(null);\n  const createDirectionOnClick = direction => () => {\n    setFollowMouseMode(false);\n    setClickToLookMode(false);\n    setLookAtDirection(direction);\n  };\n  return <div style={containerStyle} onClick={event => {\n    const isButtonClick = event.target.classList.contains('button-group__button');\n    if (clickToLookMode && !isButtonClick) {\n      setLookAtDirection(null);\n      setClickedTarget({\n        x: event.clientX,\n        y: event.clientY\n      });\n    }\n  }}>\n      <Mascot animationEventEmitter={animationEventEmitter} width=\"120\" height=\"120\" followMouse={followMouseMode} lookAtTarget={clickedTarget} lookAtDirection={lookAtDirection} />\n      <div style={buttonStyle}>\n        <ButtonGroup style={{\n        width: '300px',\n        flexFlow: 'column'\n      }} defaultActiveButtonIndex={4}>\n          <Button onClick={createDirectionOnClick('up')}>Up</Button>\n          <Button onClick={createDirectionOnClick('down')}>Down</Button>\n          <Button onClick={createDirectionOnClick('left')}>Left</Button>\n          <Button onClick={createDirectionOnClick('right')}>Right</Button>\n          <Button onClick={createDirectionOnClick('middle')}>Middle</Button>\n          <Button onClick={() => {\n          setFollowMouseMode(true);\n          setClickToLookMode(false);\n        }}>\n            Follow Mouse mode\n          </Button>\n          <Button onClick={() => {\n          setFollowMouseMode(false);\n          setClickToLookMode(true);\n        }}>\n            Look a clicked location mode\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>;\n}",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}},"./ui/components/ui/button-group/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>ButtonGroup});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class ButtonGroup extends react.PureComponent{constructor(...args){super(...args),_defineProperty(this,"state",{activeButtonIndex:this.props.noButtonActiveByDefault?null:this.props.defaultActiveButtonIndex})}componentDidUpdate(_,prevState){"number"==typeof this.props.newActiveButtonIndex&&prevState.activeButtonIndex!==this.props.newActiveButtonIndex&&this.setState({activeButtonIndex:this.props.newActiveButtonIndex})}handleButtonClick(activeButtonIndex){this.setState({activeButtonIndex})}renderButtons(){const{children,disabled,variant}=this.props;return react.Children.map(children,((child,index)=>child&&react.createElement("button",{role:"radiogroup"===variant?"radio":void 0,"aria-checked":index===this.state.activeButtonIndex,className:classnames_default()("button-group__button",child.props.className,{"radio-button":"radiogroup"===variant,"button-group__button--active":index===this.state.activeButtonIndex,"radio-button--active":"radiogroup"===variant&&index===this.state.activeButtonIndex}),"data-testid":`button-group__button${index}`,onClick:()=>{var _child$props$onClick,_child$props;this.handleButtonClick(index),null===(_child$props$onClick=(_child$props=child.props).onClick)||void 0===_child$props$onClick||_child$props$onClick.call(_child$props)},disabled:disabled||child.props.disabled,key:index},child.props.children)))}render(){const{className,style,variant}=this.props;return react.createElement("div",{className:classnames_default()(className,{"radio-button-group":"radiogroup"===variant}),role:"radiogroup"===variant?"radiogroup":void 0,style},this.renderButtons())}}_defineProperty(ButtonGroup,"propTypes",{defaultActiveButtonIndex:prop_types_default().number,noButtonActiveByDefault:prop_types_default().bool,disabled:prop_types_default().bool,children:prop_types_default().array,className:prop_types_default().string,style:prop_types_default().object,newActiveButtonIndex:prop_types_default().number,variant:prop_types_default().oneOf(["radiogroup","default"])}),_defineProperty(ButtonGroup,"defaultProps",{className:"button-group",defaultActiveButtonIndex:0,variant:"default"}),ButtonGroup.__docgenInfo={description:"",methods:[{name:"handleButtonClick",docblock:null,modifiers:[],params:[{name:"activeButtonIndex",type:null}],returns:null},{name:"renderButtons",docblock:null,modifiers:[],params:[],returns:null}],displayName:"ButtonGroup",props:{className:{defaultValue:{value:"'button-group'",computed:!1},description:"Adds a className to the root div of the of the ButtonGroup component",type:{name:"string"},required:!1},defaultActiveButtonIndex:{defaultValue:{value:"0",computed:!1},description:"change button active order",type:{name:"number"},required:!1},variant:{defaultValue:{value:"'default'",computed:!1},description:"options for rendering type of button, consist of 'default' and 'radiogroup'",type:{name:"enum",value:[{value:"'radiogroup'",computed:!1},{value:"'default'",computed:!1}]},required:!1},noButtonActiveByDefault:{description:"no button are active before clicked by the user",type:{name:"bool"},required:!1},disabled:{description:"disabling every button inside button group",type:{name:"bool"},required:!1},children:{description:"Children must be an array of button components",type:{name:"array"},required:!1},style:{description:"adding style for button group component",type:{name:"object"},required:!1},newActiveButtonIndex:{description:"updating value of active button in button group component",type:{name:"number"},required:!1}}}}}]);