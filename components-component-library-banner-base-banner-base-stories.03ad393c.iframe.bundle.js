/*! For license information please see components-component-library-banner-base-banner-base-stories.03ad393c.iframe.bundle.js.LICENSE.txt */
"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[7777],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./ui/components/component-library/banner-base/banner-base.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActionButton:()=>ActionButton,Children:()=>Children,DefaultStory:()=>DefaultStory,Description:()=>Description,OnClose:()=>OnClose,StartAccessory:()=>StartAccessory,Title:()=>Title,__namedExportsOrder:()=>__namedExportsOrder,default:()=>banner_base_stories});var react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_ADDONS_=__webpack_require__("@storybook/addons"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),banner_base=__webpack_require__("./ui/components/component-library/banner-base/banner-base.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({h3:"h3",h1:"h1",p:"p",code:"code",a:"a",h2:"h2",pre:"pre"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h3,{id:"this-is-a-base-component-it-should-not-be-used-in-your-feature-code-directly-but-as-a-base-for-other-ui-components",children:'This is a base component. It should not be used in your feature code directly but as a "base" for other UI components'}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"bannerbase",children:"BannerBase"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"BannerBase"})," serves as a base for all banner variants. It contains standard props such as information and related actions."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.a,{href:"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940",target:"_blank",rel:"nofollow noopener noreferrer",children:"MetaMask Design System Guides"})}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-bannerbase--default-story"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:banner_base.i}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"title",children:"Title"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"title"})," prop to pass a string that is sentence case no period. Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"titleProps"})," prop to pass additional props to the ",(0,jsx_runtime.jsx)(_components.code,{children:"Text"})," component."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-bannerbase--title"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { BannerBase } from '../../component-library';\n\n<BannerBase title=\"Title is sentence case no period\">\n  Pass only a string through the title prop\n</BannerBase>;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"description",children:"Description"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"description"})," is the content area of the ",(0,jsx_runtime.jsx)(_components.code,{children:"BannerBase"})," that must be a string. Description shouldn't repeat title and only 1-3 lines."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["If content requires more than a string, see ",(0,jsx_runtime.jsx)(_components.code,{children:"children"})," prop below."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-bannerbase--description"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import { BannerBase } from \'../../component-library\';\n\n<BannerBase\n  title="Description vs children"\n  description="Pass only a string through the description prop or you can use children if the contents require more"\n/>;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"children",children:"Children"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"children"})," prop is an alternative to ",(0,jsx_runtime.jsx)(_components.code,{children:"description"})," for ",(0,jsx_runtime.jsx)(_components.code,{children:"BannerBase"})," when more than a string is needed. Children content shouldn't repeat title and only 1-3 lines."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-bannerbase--children"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { Size } from '../../../helpers/constants/design-system';\nimport { BannerBase } from '../../component-library';\n\n<BannerBase>\n  {`Description shouldn't repeat title. 1-3 lines. Can contain a `}\n  <ButtonLink size={Size.inherit} href=\"https://metamask.io/\" target=\"_blank\">\n    hyperlink.\n  </ButtonLink>\n</BannerBase>;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"action-button-label-onclick--props",children:"Action Button Label, onClick, & Props"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"actionButtonLabel"})," prop to pass text, ",(0,jsx_runtime.jsx)(_components.code,{children:"actionButtonOnClick"})," prop to pass an onClick handler, and ",(0,jsx_runtime.jsx)(_components.code,{children:"actionButtonProps"})," prop to pass an object of ",(0,jsx_runtime.jsx)(_components.a,{href:"/docs/components-componentlibrary-buttonlink--default-story",children:"ButtonLink props"})," for the action"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-bannerbase--action-button"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { BannerBase, IconName } from '../../component-library';\n\n<BannerBase\n  title=\"Action prop demo\"\n  actionButtonLabel=\"Action\"\n  actionButtonProps={{\n    endIconName: IconName.Arrow2Right,\n  }}\n  actionButtonOnClick={() => console.log('ButtonLink actionButtonOnClick demo')}\n>\n  Use actionButtonLabel for action text, actionButtonOnClick for the onClick\n  handler, and actionButtonProps to pass any ButtonLink prop types such as\n  iconName\n</BannerBase>;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"on-close",children:"On Close"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"onClose"})," prop to pass a function to the close button. The close button will appear when this prop is used."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Additional props can be passed to the close button with ",(0,jsx_runtime.jsx)(_components.code,{children:"closeButtonProps"})]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-bannerbase--on-close"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { BannerBase } from '../../component-library';\n\n<BannerBase\n  title=\"onClose demo\"\n  onClose={() => console.log('close button clicked')}\n>\n  Click the close button icon to hide this notifcation\n</BannerBase>;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"start-accessory",children:"Start Accessory"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"startAccessory"})," prop to add components such as icons or fox image to the start (default: left) of the ",(0,jsx_runtime.jsx)(_components.code,{children:"BannerBase"})," content"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-bannerbase--start-accessory"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { Size } from '../../../helpers/constants/design-system';\nimport { BannerBase } from '../../component-library';\nimport { Icon, IconName } from '../../component-library';\n\n<BannerBase\n  title=\"Start accessory demo\"\n  startAccessory={<Icon name={IconName.Info} size={IconSize.Lg} />}\n>\n  The info icon on the left is passed through the startAccessory prop\n</BannerBase>;\n"})})]})}const README=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};var _DefaultStory$paramet,_DefaultStory$paramet2,_Title$parameters,_Title$parameters2,_Description$paramete,_Description$paramete2,_Children$parameters,_Children$parameters2,_ActionButton$paramet,_ActionButton$paramet2,_OnClose$parameters,_OnClose$parameters2,_StartAccessory$param,_StartAccessory$param2;function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const banner_base_stories={title:"Components/ComponentLibrary/BannerBase",component:banner_base.i,parameters:{docs:{page:README},backgrounds:{default:"alternative"}},argTypes:{className:{control:"text"},title:{control:"text"},titleProps:{control:"object"},description:{control:"text"},descriptionProps:{control:"object"},children:{control:"text"},childrenProps:{control:"object"},actionButtonLabel:{control:"text"},actionButtonOnClick:{action:"actionButtonOnClick"},actionButtonProps:{control:"object"},startAccessory:{control:"text"},onClose:{action:"onClose"}}},Template=args=>react.createElement(banner_base.i,args),DefaultStory=Template.bind({});DefaultStory.args={title:"Title is sentence case no period",children:"Description shouldn't repeat title. 1-3 lines.",actionButtonLabel:"Action",startAccessory:react.createElement(component_library.JO,{name:component_library.uH.Info,size:component_library.Jh.Lg})},DefaultStory.storyName="Default";const Title=Template.bind({});Title.args={title:"Title is sentence case no period",children:"Pass only a string through the title prop"};const Description=Template.bind({});Description.args={title:"Description vs children",description:"Pass only a string through the description prop or you can use children if the contents require more"};const Children=args=>react.createElement(banner_base.i,args,"Description shouldn't repeat title. 1-3 lines. Can contain a"," ",react.createElement(component_library.ZP,{size:component_library.o3.Inherit,href:"https://metamask.io/",externalLink:!0},"hyperlink"),"."),ActionButton=Template.bind({});ActionButton.args={title:"Action prop demo",actionButtonLabel:"Action",actionButtonProps:{endIconName:component_library.uH.Arrow2Right},children:"Use actionButtonLabel for action text, actionButtonOnClick for the onClick handler, and actionButtonProps to pass any ButtonLink prop types such as iconName"};const OnClose=args=>{const[isShown,setShown]=(0,external_STORYBOOK_MODULE_ADDONS_.useState)(!0),bannerToggle=()=>setShown(!isShown);return react.createElement(react.Fragment,null,isShown?react.createElement(banner_base.i,_extends({},args,{onClose:bannerToggle})):react.createElement(component_library.DF,{onClick:bannerToggle},"View BannerBase"))};OnClose.args={title:"onClose demo",children:"Click the close button icon to hide this notifcation"};const StartAccessory=Template.bind({});StartAccessory.args={title:"Start accessory demo",children:"The info icon on the left is passed through the startAccessory prop",startAccessory:react.createElement(component_library.JO,{name:component_library.uH.Info,size:component_library.Jh.Lg})},DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => <BannerBase {...args} />",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet2=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet2?void 0:_DefaultStory$paramet2.source}}},Title.parameters={...Title.parameters,docs:{...null===(_Title$parameters=Title.parameters)||void 0===_Title$parameters?void 0:_Title$parameters.docs,source:{originalSource:"args => <BannerBase {...args} />",...null===(_Title$parameters2=Title.parameters)||void 0===_Title$parameters2||null===(_Title$parameters2=_Title$parameters2.docs)||void 0===_Title$parameters2?void 0:_Title$parameters2.source}}},Description.parameters={...Description.parameters,docs:{...null===(_Description$paramete=Description.parameters)||void 0===_Description$paramete?void 0:_Description$paramete.docs,source:{originalSource:"args => <BannerBase {...args} />",...null===(_Description$paramete2=Description.parameters)||void 0===_Description$paramete2||null===(_Description$paramete2=_Description$paramete2.docs)||void 0===_Description$paramete2?void 0:_Description$paramete2.source}}},Children.parameters={...Children.parameters,docs:{...null===(_Children$parameters=Children.parameters)||void 0===_Children$parameters?void 0:_Children$parameters.docs,source:{originalSource:"args => {\n  return <BannerBase {...args}>\n      Description shouldn't repeat title. 1-3 lines. Can contain a{' '}\n      <ButtonLink size={ButtonLinkSize.Inherit} href=\"https://metamask.io/\" externalLink>\n        hyperlink\n      </ButtonLink>\n      .\n    </BannerBase>;\n}",...null===(_Children$parameters2=Children.parameters)||void 0===_Children$parameters2||null===(_Children$parameters2=_Children$parameters2.docs)||void 0===_Children$parameters2?void 0:_Children$parameters2.source}}},ActionButton.parameters={...ActionButton.parameters,docs:{...null===(_ActionButton$paramet=ActionButton.parameters)||void 0===_ActionButton$paramet?void 0:_ActionButton$paramet.docs,source:{originalSource:"args => <BannerBase {...args} />",...null===(_ActionButton$paramet2=ActionButton.parameters)||void 0===_ActionButton$paramet2||null===(_ActionButton$paramet2=_ActionButton$paramet2.docs)||void 0===_ActionButton$paramet2?void 0:_ActionButton$paramet2.source}}},OnClose.parameters={...OnClose.parameters,docs:{...null===(_OnClose$parameters=OnClose.parameters)||void 0===_OnClose$parameters?void 0:_OnClose$parameters.docs,source:{originalSource:"args => {\n  const [isShown, setShown] = useState(true);\n  const bannerToggle = () => setShown(!isShown);\n  return <>\n      {isShown ? <BannerBase {...args} onClose={bannerToggle} /> : <ButtonPrimary onClick={bannerToggle}>View BannerBase</ButtonPrimary>}\n    </>;\n}",...null===(_OnClose$parameters2=OnClose.parameters)||void 0===_OnClose$parameters2||null===(_OnClose$parameters2=_OnClose$parameters2.docs)||void 0===_OnClose$parameters2?void 0:_OnClose$parameters2.source}}},StartAccessory.parameters={...StartAccessory.parameters,docs:{...null===(_StartAccessory$param=StartAccessory.parameters)||void 0===_StartAccessory$param?void 0:_StartAccessory$param.docs,source:{originalSource:"args => <BannerBase {...args} />",...null===(_StartAccessory$param2=StartAccessory.parameters)||void 0===_StartAccessory$param2||null===(_StartAccessory$param2=_StartAccessory$param2.docs)||void 0===_StartAccessory$param2?void 0:_StartAccessory$param2.source}}};const __namedExportsOrder=["DefaultStory","Title","Description","Children","ActionButton","OnClose","StartAccessory"]},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);