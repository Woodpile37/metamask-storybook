(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[816],{"./ui/pages/confirm-send-ether/confirm-send-ether.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>confirm_send_ether_stories});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),mock_state=__webpack_require__("./test/data/mock-state.json"),store=__webpack_require__("./ui/store/store.ts"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),constants_transaction=__webpack_require__("./shared/constants/transaction.ts"),confirm_transaction_duck=__webpack_require__("./ui/ducks/confirm-transaction/confirm-transaction.duck.js"),send=__webpack_require__("./ui/ducks/send/index.js"),routes=__webpack_require__("./ui/helpers/constants/routes.ts"),redux=__webpack_require__("./node_modules/redux/es/redux.js"),dist=__webpack_require__("./node_modules/@metamask-institutional/extension/dist/index.js"),institution_background=__webpack_require__("./ui/store/institutional/institution-background.ts"),actions=__webpack_require__("./ui/store/actions.ts"),send_utils=__webpack_require__("./ui/pages/send/send.utils.js"),util=__webpack_require__("./ui/helpers/utils/util.js"),selectors=__webpack_require__("./ui/selectors/index.js"),history_history=__webpack_require__("./ui/ducks/history/history.js"),metamask_metamask=__webpack_require__("./ui/ducks/metamask/metamask.js"),lib_util=__webpack_require__("./app/scripts/lib/util.ts"),transaction_utils=__webpack_require__("./shared/modules/transaction.utils.js"),hexstring_utils=__webpack_require__("./shared/modules/hexstring-utils.ts"),app=__webpack_require__("./ui/ducks/app/app.ts"),transactions_util=__webpack_require__("./ui/helpers/utils/transactions.util.js"),gas=__webpack_require__("./shared/constants/gas.ts"),selectors_selectors=__webpack_require__("./ui/selectors/selectors.js"),constants_app=__webpack_require__("./shared/constants/app.ts"),institutional_selectors=__webpack_require__("./ui/selectors/institutional/selectors.js"),token_util=__webpack_require__("./ui/helpers/utils/token-util.js"),transactions_controller_utils=__webpack_require__("./shared/lib/transactions-controller-utils.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),gasFee=__webpack_require__("./ui/contexts/gasFee.js"),network=__webpack_require__("./shared/constants/network.ts"),page_container=__webpack_require__("./ui/components/ui/page-container/index.js"),ui_button=__webpack_require__("./ui/components/ui/button/index.js"),actionable_message=__webpack_require__("./ui/components/ui/actionable-message/actionable-message.js"),sender_to_recipient=__webpack_require__("./ui/components/ui/sender-to-recipient/index.js"),advanced_gas_fee_popover=__webpack_require__("./ui/components/app/advanced-gas-fee-popover/index.js"),edit_gas_fee_popover=__webpack_require__("./ui/components/app/edit-gas-fee-popover/edit-gas-fee-popover.js"),edit_gas_popover=__webpack_require__("./ui/components/app/edit-gas-popover/index.js"),error_message=__webpack_require__("./ui/components/ui/error-message/index.js"),error_keys=__webpack_require__("./ui/helpers/constants/error-keys.js"),component_library=__webpack_require__("./ui/components/component-library/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),network_account_balance_header=__webpack_require__("./ui/components/app/network-account-balance-header/network-account-balance-header.js"),lib_token_util=__webpack_require__("./shared/lib/token-util.ts"),set_approval_for_all_warning=__webpack_require__("./ui/components/app/set-approval-for-all-warning/index.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),tabs=__webpack_require__("./ui/components/ui/tabs/index.js"),dropdown_tab=__webpack_require__("./ui/components/ui/tabs/snaps/dropdown-tab/index.js"),preloader_icon_component=__webpack_require__("./ui/components/ui/icon/preloader/preloader-icon.component.js"),snaps_controllers_dist=__webpack_require__("./node_modules/@metamask/snaps-controllers/dist/index.js");var box=__webpack_require__("./ui/components/ui/box/box.js"),snap_ui_renderer=__webpack_require__("./ui/components/app/snaps/snap-ui-renderer/index.js"),snap_delineator=__webpack_require__("./ui/components/app/snaps/snap-delineator/index.js"),snaps=__webpack_require__("./ui/helpers/constants/snaps/index.js"),copyable=__webpack_require__("./ui/components/app/snaps/copyable/index.js");const SnapInsight=({transaction,origin,chainId,selectedSnap})=>{const t=(0,useI18nContext.C)(),{data:response,error,loading}=function useTransactionInsightSnap({transaction,chainId,origin,snapId}){var _subjects$snapId;const permission=null===(_subjects$snapId=(0,es.v9)(selectors.XFf)[snapId])||void 0===_subjects$snapId?void 0:_subjects$snapId.permissions["endowment:transaction-insight"];if(!permission)throw new Error("This snap does not have the transaction insight endowment.");const transactionOrigin=(0,snaps_controllers_dist.getTransactionOriginCaveat)(permission)?origin:null,[loading,setLoading]=(0,react.useState)(!0),[data,setData]=(0,react.useState)(void 0),[error,setError]=(0,react.useState)(void 0);return(0,react.useEffect)((()=>{let cancelled=!1;return transaction&&async function fetchInsight(){try{setError(void 0),setLoading(!0);const newData=await(0,actions.fcw)({snapId,origin:"",handler:"onTransaction",request:{jsonrpc:"2.0",method:" ",params:{transaction,chainId,transactionOrigin}}});cancelled||setData(newData)}catch(err){cancelled||setError(err)}finally{cancelled||setLoading(!1)}}(),()=>cancelled=!0}),[snapId,transaction,chainId,transactionOrigin]),{data,error,loading}}({transaction,chainId,origin,snapId:selectedSnap.id}),targetSubjectMetadata=(0,es.v9)((state=>(0,selectors.h5U)(state,selectedSnap.id))),snapName=(0,util.NZ)(selectedSnap.id,targetSubjectMetadata),data=null==response?void 0:response.content,hasNoData=!error&&(loading||!data||data&&0===Object.keys(data).length);return react.createElement(box.ZP,{flexDirection:design_system.uM.COLUMN,height:"full",marginTop:hasNoData&&12,marginBottom:hasNoData&&12,alignItems:hasNoData&&design_system.g1.center,justifyContent:hasNoData&&design_system.E0.center,textAlign:hasNoData&&design_system.PH.Center,className:"snap-insight"},!loading&&!error&&react.createElement(box.ZP,{height:"full",flexDirection:design_system.uM.COLUMN,className:"snap-insight__container"},data&&Object.keys(data).length>0?react.createElement(snap_ui_renderer.V,{snapId:selectedSnap.id,data,delineatorType:snaps.P.Insights}):react.createElement(component_library.xv,{color:design_system.d9.textAlternative,variant:design_system.rK.bodySm,as:"h6"},t("snapsNoInsight"))),!loading&&error&&react.createElement(box.ZP,{padding:4,className:"snap-insight__container__error"},react.createElement(snap_delineator.Z,{snapName,type:snaps.P.Error},react.createElement(component_library.xv,{variant:design_system.rK.bodySm,marginBottom:4},t("snapsUIError",[react.createElement("b",{key:"0"},snapName)])),react.createElement(copyable.C,{text:error.message}))),loading&&react.createElement(react.Fragment,null,react.createElement(preloader_icon_component.Z,{size:40}),react.createElement(component_library.xv,{marginTop:3,color:design_system.d9.textAlternative,variant:design_system.rK.bodySm,as:"h6"},t("snapsInsightLoading"))))};SnapInsight.propTypes={transaction:prop_types_default().object,chainId:prop_types_default().string,origin:prop_types_default().string,selectedSnap:prop_types_default().object},SnapInsight.__docgenInfo={description:"",methods:[],displayName:"SnapInsight",props:{transaction:{description:"",type:{name:"object"},required:!1},chainId:{description:"",type:{name:"string"},required:!1},origin:{description:"",type:{name:"string"},required:!1},selectedSnap:{description:"",type:{name:"object"},required:!1}}};const useTransactionInsights=({txData})=>{var _insightSnaps$;const insightSnaps=(0,es.v9)(selectors.AuR),[selectedInsightSnapId,setSelectedInsightSnapId]=(0,react.useState)(null===(_insightSnaps$=insightSnaps[0])||void 0===_insightSnaps$?void 0:_insightSnaps$.id);if((0,react.useEffect)((()=>{var _insightSnaps$2;insightSnaps.length&&!selectedInsightSnapId&&setSelectedInsightSnapId(null===(_insightSnaps$2=insightSnaps[0])||void 0===_insightSnaps$2?void 0:_insightSnaps$2.id)}),[insightSnaps,selectedInsightSnapId,setSelectedInsightSnapId]),(transactionType=txData.type)!==constants_transaction.iU.contractInteraction&&transactionType!==constants_transaction.iU.simpleSend&&transactionType!==constants_transaction.iU.tokenMethodSafeTransferFrom&&transactionType!==constants_transaction.iU.tokenMethodTransferFrom&&transactionType!==constants_transaction.iU.tokenMethodTransfer||!insightSnaps.length)return null;var transactionType;const selectedSnap=insightSnaps.find((({id})=>id===selectedInsightSnapId)),{txParams,chainId,origin}=txData,caip2ChainId=`eip155:${network.fI[chainId]??(0,hexstring_utils.MT)(chainId)}`;if(1===insightSnaps.length)return react.createElement(tabs.O,{className:"confirm-page-container-content__tab",name:selectedSnap.manifest.proposedName},react.createElement(SnapInsight,{transaction:txParams,origin,chainId:caip2ChainId,selectedSnap}));const dropdownOptions=null==insightSnaps?void 0:insightSnaps.map((({id,manifest:{proposedName}})=>({value:id,name:proposedName})));return react.createElement(dropdown_tab.Z,{className:"confirm-page-container-content__tab",options:dropdownOptions,selectedOption:selectedInsightSnapId,onChange:snapId=>setSelectedInsightSnapId(snapId)},react.createElement(SnapInsight,{transaction:txParams,origin,chainId:caip2ChainId,selectedSnap}))};useTransactionInsights.__docgenInfo={description:"",methods:[],displayName:"useTransactionInsights"};const hooks_useTransactionInsights=useTransactionInsights;var useRamps=__webpack_require__("./ui/hooks/experiences/useRamps.ts"),metametrics=__webpack_require__("./ui/contexts/metametrics.js"),constants_metametrics=__webpack_require__("./shared/constants/metametrics.ts");const ConfirmPageContainer=props=>{const{showEdit,onEdit,fromName,fromAddress,toEns,toNickname,toAddress,disabled,errorKey,errorMessage,contentComponent,action,title,image,titleComponent,subtitleComponent,detailsComponent,dataComponent,dataHexComponent,onCancelAll,onCancel,onSubmit,onSetApprovalForAll,showWarningModal,tokenAddress,nonce,unapprovedTxCount,warning,hideSenderToRecipient,showAccountInHeader,origin,ethGasPriceWarning,editingGas,handleCloseEditGas,currentTransaction,supportsEIP1559,nativeCurrency,txData,assetStandard,isApprovalOrRejection,displayAccountBalanceHeader,noteComponent}=props,t=(0,useI18nContext.C)(),trackEvent=(0,react.useContext)(metametrics.Wd),[collectionBalance,setCollectionBalance]=(0,react.useState)("0"),isBuyableChain=(0,es.v9)(selectors.R9W),contact=(0,es.v9)((state=>(0,selectors.e5t)(state,toAddress))),networkIdentifier=(0,es.v9)(selectors.ZCT),accountBalance=(0,es.v9)(selectors.gpy).string,identities=(0,es.v9)(selectors.OxS),ownedAccountName=(0,selectors.PyB)(identities,toAddress),toName=ownedAccountName||(null==contact?void 0:contact.name),recipientIsOwnedAccount=Boolean(ownedAccountName),toMetadataName=(0,es.v9)((state=>(0,selectors.lxl)(state,toAddress))),{openBuyCryptoInPdapp}=(0,useRamps.Z)(),isSetApproveForAll=currentTransaction.type===constants_transaction.iU.tokenMethodSetApprovalForAll,shouldDisplayWarning=contentComponent&&disabled&&(errorKey||errorMessage),networkName=network.kW[currentTransaction.chainId]||networkIdentifier,fetchCollectionBalance=(0,react.useCallback)((async()=>{const tokenBalance=await(0,lib_token_util.b)(tokenAddress,fromAddress,__webpack_require__.g.ethereumProvider);setCollectionBalance(tokenBalance.toString()||"0")}),[fromAddress,tokenAddress]),insightComponent=hooks_useTransactionInsights({txData});return(0,react.useEffect)((()=>{isSetApproveForAll&&assetStandard===constants_transaction.Yn.ERC721&&fetchCollectionBalance()}),[currentTransaction,assetStandard,isSetApproveForAll,fetchCollectionBalance,collectionBalance]),react.createElement(gasFee.Po,{transaction:currentTransaction},react.createElement("div",{className:"page-container","data-testid":"page-container"},react.createElement(confirm_page_container_navigation.Z,null),displayAccountBalanceHeader?react.createElement(network_account_balance_header.Z,{accountName:fromName,accountBalance,tokenName:nativeCurrency,accountAddress:fromAddress,networkName,chainId:currentTransaction.chainId}):react.createElement(confirm_page_container_header.Z,{showEdit,onEdit:()=>onEdit(),showAccountInHeader,accountAddress:fromAddress},hideSenderToRecipient?null:react.createElement(sender_to_recipient.Z,{senderName:fromName,senderAddress:fromAddress,recipientName:toName,recipientMetadataName:toMetadataName,recipientAddress:toAddress,recipientEns:toEns,recipientNickname:toNickname,recipientIsOwnedAccount})),contentComponent||react.createElement(confirm_page_container_content.ZP,{action,title,image,titleComponent,subtitleComponent,detailsComponent,dataComponent,dataHexComponent,insightComponent,errorMessage,errorKey,tokenAddress,nonce,warning,onCancelAll,onCancel,cancelText:t("reject"),onSubmit,submitText:t("confirm"),disabled,unapprovedTxCount,rejectNText:t("rejectTxsN",[unapprovedTxCount]),origin,ethGasPriceWarning,supportsEIP1559,currentTransaction,nativeCurrency,networkName,toAddress,transactionType:currentTransaction.type,isBuyableChain,openBuyCryptoInPdapp,txData,noteComponent}),shouldDisplayWarning&&errorKey===error_keys.Xr&&react.createElement("div",{className:"confirm-approve-content__warning"},react.createElement(actionable_message.Z,{message:isBuyableChain?react.createElement(component_library.xv,{variant:design_system.rK.bodySm,textAlign:design_system.PH.Left,as:"h6"},t("insufficientCurrencyBuyOrDeposit",[nativeCurrency,networkName,react.createElement(ui_button.Z,{type:"inline",className:"confirm-page-container-content__link",onClick:()=>{openBuyCryptoInPdapp(),trackEvent({event:constants_metametrics.AW.NavBuyButtonClicked,category:constants_metametrics.ci.Navigation,properties:{location:"Transaction Confirmation",text:"Buy"}})},key:`${nativeCurrency}-buy-button`},t("buyAsset",[nativeCurrency]))])):react.createElement(component_library.xv,{variant:design_system.rK.bodySm,textAlign:design_system.PH.Left,as:"h6"},t("insufficientCurrencyDeposit",[nativeCurrency,networkName])),useIcon:!0,iconFillColor:"var(--color-error-default)",type:"danger"})),shouldDisplayWarning&&errorKey!==error_keys.Xr&&react.createElement("div",{className:"confirm-approve-content__warning"},react.createElement(error_message.Z,{errorKey})),showWarningModal&&react.createElement(set_approval_for_all_warning.Z,{collectionName:title,senderAddress:fromAddress,name:fromName,isERC721:assetStandard===constants_transaction.Yn.ERC721,total:collectionBalance,onSubmit,onCancel}),contentComponent&&react.createElement(page_container.g$,{onCancel,cancelText:t("reject"),onSubmit:isSetApproveForAll&&isApprovalOrRejection?onSetApprovalForAll:onSubmit,submitText:t("confirm"),submitButtonType:isSetApproveForAll&&isApprovalOrRejection?"danger-primary":"primary",disabled},unapprovedTxCount>1&&react.createElement("a",{onClick:onCancelAll},t("rejectTxsN",[unapprovedTxCount]))),editingGas&&!supportsEIP1559&&react.createElement(edit_gas_popover.Z,{mode:gas.G_.modifyInPlace,onClose:handleCloseEditGas,transaction:currentTransaction}),supportsEIP1559&&react.createElement(react.Fragment,null,react.createElement(edit_gas_fee_popover.Z,null),react.createElement(advanced_gas_fee_popover.Z,null))))};ConfirmPageContainer.propTypes={action:prop_types_default().string,onEdit:prop_types_default().func,showEdit:prop_types_default().bool,subtitleComponent:prop_types_default().node,title:prop_types_default().string,image:prop_types_default().string,titleComponent:prop_types_default().node,hideSenderToRecipient:prop_types_default().bool,showAccountInHeader:prop_types_default().bool,assetStandard:prop_types_default().string,fromAddress:prop_types_default().string,fromName:prop_types_default().string,toAddress:prop_types_default().string,toEns:prop_types_default().string,toNickname:prop_types_default().string,contentComponent:prop_types_default().node,errorKey:prop_types_default().string,errorMessage:prop_types_default().string,dataComponent:prop_types_default().node,dataHexComponent:prop_types_default().node,detailsComponent:prop_types_default().node,txData:prop_types_default().object,tokenAddress:prop_types_default().string,nonce:prop_types_default().string,warning:prop_types_default().string,unapprovedTxCount:prop_types_default().number,origin:prop_types_default().string.isRequired,ethGasPriceWarning:prop_types_default().string,onCancelAll:prop_types_default().func,onCancel:prop_types_default().func,onSubmit:prop_types_default().func,onSetApprovalForAll:prop_types_default().func,showWarningModal:prop_types_default().bool,disabled:prop_types_default().bool,editingGas:prop_types_default().bool,handleCloseEditGas:prop_types_default().func,currentTransaction:prop_types_default().object.isRequired,supportsEIP1559:prop_types_default().bool,nativeCurrency:prop_types_default().string,isApprovalOrRejection:prop_types_default().bool,displayAccountBalanceHeader:prop_types_default().bool,noteComponent:prop_types_default().node},ConfirmPageContainer.__docgenInfo={description:"",methods:[],displayName:"ConfirmPageContainer",props:{action:{description:"",type:{name:"string"},required:!1},onEdit:{description:"",type:{name:"func"},required:!1},showEdit:{description:"",type:{name:"bool"},required:!1},subtitleComponent:{description:"",type:{name:"node"},required:!1},title:{description:"",type:{name:"string"},required:!1},image:{description:"",type:{name:"string"},required:!1},titleComponent:{description:"",type:{name:"node"},required:!1},hideSenderToRecipient:{description:"",type:{name:"bool"},required:!1},showAccountInHeader:{description:"",type:{name:"bool"},required:!1},assetStandard:{description:"",type:{name:"string"},required:!1},fromAddress:{description:"",type:{name:"string"},required:!1},fromName:{description:"",type:{name:"string"},required:!1},toAddress:{description:"",type:{name:"string"},required:!1},toEns:{description:"",type:{name:"string"},required:!1},toNickname:{description:"",type:{name:"string"},required:!1},contentComponent:{description:"",type:{name:"node"},required:!1},errorKey:{description:"",type:{name:"string"},required:!1},errorMessage:{description:"",type:{name:"string"},required:!1},dataComponent:{description:"",type:{name:"node"},required:!1},dataHexComponent:{description:"",type:{name:"node"},required:!1},detailsComponent:{description:"",type:{name:"node"},required:!1},txData:{description:"",type:{name:"object"},required:!1},tokenAddress:{description:"",type:{name:"string"},required:!1},nonce:{description:"",type:{name:"string"},required:!1},warning:{description:"",type:{name:"string"},required:!1},unapprovedTxCount:{description:"",type:{name:"number"},required:!1},origin:{description:"",type:{name:"string"},required:!0},ethGasPriceWarning:{description:"",type:{name:"string"},required:!1},onCancelAll:{description:"",type:{name:"func"},required:!1},onCancel:{description:"",type:{name:"func"},required:!1},onSubmit:{description:"",type:{name:"func"},required:!1},onSetApprovalForAll:{description:"",type:{name:"func"},required:!1},showWarningModal:{description:"",type:{name:"bool"},required:!1},disabled:{description:"",type:{name:"bool"},required:!1},editingGas:{description:"",type:{name:"bool"},required:!1},handleCloseEditGas:{description:"",type:{name:"func"},required:!1},currentTransaction:{description:"",type:{name:"object"},required:!0},supportsEIP1559:{description:"",type:{name:"bool"},required:!1},nativeCurrency:{description:"",type:{name:"string"},required:!1},isApprovalOrRejection:{description:"",type:{name:"bool"},required:!1},displayAccountBalanceHeader:{description:"",type:{name:"bool"},required:!1},noteComponent:{description:"",type:{name:"node"},required:!1}}};const confirm_page_container_component=ConfirmPageContainer;var confirm_page_container_header=__webpack_require__("./ui/components/app/confirm-page-container/confirm-page-container-header/index.js"),confirm_page_container_navigation=(__webpack_require__("./ui/components/app/confirm-page-container/confirm-detail-row/index.js"),__webpack_require__("./ui/components/app/confirm-page-container/confirm-page-container-navigation/index.js")),confirm_page_container_content=__webpack_require__("./ui/components/app/confirm-page-container/confirm-page-container-content/index.js"),user_preferenced_currency_display=__webpack_require__("./ui/components/app/user-preferenced-currency-display/index.js"),common=__webpack_require__("./ui/helpers/constants/common.ts"),text_field=__webpack_require__("./ui/components/ui/text-field/index.js"),simulation_error_message=__webpack_require__("./ui/components/ui/simulation-error-message/index.js"),metrics=__webpack_require__("./ui/helpers/utils/metrics.js"),note_to_trader=__webpack_require__("./ui/components/institutional/note-to-trader/index.js"),transaction_modal=__webpack_require__("./ui/contexts/transaction-modal.js"),transaction_detail_component=__webpack_require__("./ui/components/app/transaction-detail/transaction-detail.component.js"),transaction_detail_item_component=__webpack_require__("./ui/components/app/transaction-detail-item/transaction-detail-item.component.js"),loading_heartbeat=__webpack_require__("./ui/components/ui/loading-heartbeat/index.js"),ledger_instruction_field=__webpack_require__("./ui/components/app/ledger-instruction-field/index.js"),send_constants=__webpack_require__("./ui/pages/send/send.constants.js"),conversion_utils=__webpack_require__("./shared/modules/conversion.utils.ts"),transaction_alerts=__webpack_require__("./ui/components/app/transaction-alerts/index.js"),confirm_hexdata=__webpack_require__("./ui/components/app/confirm-hexdata/index.js"),confirm_data=__webpack_require__("./ui/components/app/confirm-data/index.js"),confirm_title=__webpack_require__("./ui/components/app/confirm-title/index.js"),confirm_subtitle=__webpack_require__("./ui/components/app/confirm-subtitle/index.js"),confirm_gas_display=__webpack_require__("./ui/components/app/confirm-gas-display/index.js");function updateTxData({txData,maxFeePerGas,customTokenAmount,dappProposedTokenAmount,currentTokenBalance,maxPriorityFeePerGas,baseFeePerGas,addToAddressBookIfNew,toAccounts,toAddress,name}){return txData.type===constants_transaction.iU.simpleSend&&addToAddressBookIfNew(toAddress,toAccounts),baseFeePerGas&&(txData.estimatedBaseFee=baseFeePerGas),name&&(txData.contractMethodName=name),dappProposedTokenAmount&&(txData.dappProposedTokenAmount=dappProposedTokenAmount,txData.originalApprovalAmount=dappProposedTokenAmount),customTokenAmount?(txData.customTokenAmount=customTokenAmount,txData.finalApprovalAmount=customTokenAmount):void 0!==dappProposedTokenAmount&&(txData.finalApprovalAmount=dappProposedTokenAmount),currentTokenBalance&&(txData.currentTokenBalance=currentTokenBalance),maxFeePerGas&&(txData.txParams={...txData.txParams,maxFeePerGas}),maxPriorityFeePerGas&&(txData.txParams={...txData.txParams,maxPriorityFeePerGas}),txData}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"==typeof key?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class ConfirmTransactionBase extends react.Component{constructor(...args){super(...args),_defineProperty(this,"state",{submitting:!1,submitError:null,submitWarning:"",ethGasPriceWarning:"",editingGas:!1,userAcknowledgedGasMissing:!1,showWarningModal:!1,noteText:""}),_defineProperty(this,"_beforeUnloadForGasPolling",(()=>{this._isMounted=!1,this.state.pollingToken&&((0,actions.T_6)(this.state.pollingToken),(0,actions.hUm)(this.state.pollingToken))})),_defineProperty(this,"_removeBeforeUnload",(()=>{window.removeEventListener("beforeunload",this._beforeUnloadForGasPolling)})),_defineProperty(this,"supportsEIP1559",this.props.supportsEIP1559&&!(0,transactions_util.h0)(this.props.txData))}componentDidUpdate(prevProps){const{transactionStatus,showTransactionConfirmedModal,history,clearConfirmTransaction,nextNonce,customNonceValue,toAddress,tryReverseResolveAddress,isEthGasPrice,setDefaultHomeActiveTabName}=this.props,{customNonceValue:prevCustomNonceValue,nextNonce:prevNextNonce,toAddress:prevToAddress,transactionStatus:prevTxStatus,isEthGasPrice:prevIsEthGasPrice}=prevProps,statusUpdated=transactionStatus!==prevTxStatus,txDroppedOrConfirmed=transactionStatus===constants_transaction.LN.dropped||transactionStatus===constants_transaction.LN.confirmed;nextNonce===prevNextNonce&&customNonceValue===prevCustomNonceValue||(null!==nextNonce&&customNonceValue>nextNonce?this.setState({submitWarning:this.context.t("nextNonceWarning",[nextNonce])}):this.setState({submitWarning:""})),statusUpdated&&txDroppedOrConfirmed&&showTransactionConfirmedModal({onSubmit:()=>{clearConfirmTransaction(),setDefaultHomeActiveTabName("activity").then((()=>{history.push(routes.QO)}))}}),toAddress&&toAddress!==prevToAddress&&tryReverseResolveAddress(toAddress),isEthGasPrice!==prevIsEthGasPrice&&(isEthGasPrice?this.setState({ethGasPriceWarning:this.context.t(error_keys.Tb)}):this.setState({ethGasPriceWarning:""}))}getErrorKey(){const{balance,conversionRate,hexMaximumTransactionFee,txData:{txParams:{value:amount}={}}={},customGas,noGasPrice,gasFeeIsCustom}=this.props;return balance&&!(0,send_utils.UV)({amount,gasTotal:hexMaximumTransactionFee||"0x0",balance,conversionRate})?{valid:!1,errorKey:error_keys.Xr}:(0,conversion_utils.Z8)(customGas.gasLimit)<Number(send_constants.Ei)?{valid:!1,errorKey:error_keys.ln}:noGasPrice&&!gasFeeIsCustom?{valid:!1,errorKey:error_keys.Vk}:{valid:!0}}handleEditGas(){const{actionKey,txData:{origin},methodData={}}=this.props;this.context.trackEvent({category:constants_metametrics.ci.Transactions,event:'User clicks "Edit" on gas',properties:{action:"Confirm Screen",legacy_event:!0,recipientKnown:null,functionType:actionKey||(0,metrics.a)(methodData.name)||constants_transaction.iU.contractInteraction,origin}}),this.setState({editingGas:!0})}handleCloseEditGas(){this.setState({editingGas:!1})}setUserAcknowledgedGasMissing(){this.setState({userAcknowledgedGasMissing:!0})}renderDetails(){var _this$props$txData3,_txData$txParams;const{primaryTotalTextOverride,secondaryTotalTextOverride,hexMaximumTransactionFee,hexTransactionTotal,useNonceField,customNonceValue,updateCustomNonce,nextNonce,getNextNonce,txData,useNativeCurrencyAsPrimaryCurrency,primaryTotalTextOverrideMaxAmount,showLedgerSteps,isMultiLayerFeeNetwork,nativeCurrency,isBuyableChain,useCurrencyRateCheck}=this.props,{t}=this.context,{userAcknowledgedGasMissing}=this.state,{valid}=this.getErrorKey(),renderSimulationFailureWarning=Boolean(txData.simulationFails)&&!userAcknowledgedGasMissing,networkName=network.kW[txData.chainId],nonceField=useNonceField?react.createElement("div",null,react.createElement("div",{className:"confirm-detail-row"},react.createElement("div",{className:"confirm-detail-row__label"},t("nonceFieldHeading")),react.createElement("div",{className:"custom-nonce-input"},react.createElement(text_field.Z,{type:"number",min:0,placeholder:"number"==typeof nextNonce?nextNonce.toString():null,onChange:({target:{value}})=>{!value.length||Number(value)<0?updateCustomNonce(""):updateCustomNonce(String(Math.floor(value))),getNextNonce()},fullWidth:!0,margin:"dense",value:customNonceValue||""})))):null;return react.createElement("div",{className:"confirm-page-container-content__details"},react.createElement(transaction_alerts.Z,{setUserAcknowledgedGasMissing:()=>this.setUserAcknowledgedGasMissing(),userAcknowledgedGasMissing,nativeCurrency,networkName,type:txData.type,isBuyableChain}),react.createElement(transaction_detail_component.Z,{disabled:!userAcknowledgedGasMissing&&!valid,userAcknowledgedGasMissing,onEdit:renderSimulationFailureWarning?null:()=>this.handleEditGas(),rows:[renderSimulationFailureWarning&&(()=>react.createElement("div",{className:"confirm-page-container-content__error-container",key:"confirm-transaction-base_simulation-error-container"},react.createElement(simulation_error_message.Z,{userAcknowledgedGasMissing,setUserAcknowledgedGasMissing:()=>this.setUserAcknowledgedGasMissing()})))(),!renderSimulationFailureWarning&&react.createElement(confirm_gas_display.D,{key:"confirm-transaction-base_confirm-gas-display",userAcknowledgedGasMissing}),!isMultiLayerFeeNetwork&&react.createElement(transaction_detail_item_component.Z,{key:"confirm-transaction-base-total-item",detailTitle:t("total"),detailText:useCurrencyRateCheck&&(()=>{var _this$props$txData2;return void 0===primaryTotalTextOverride&&void 0===secondaryTotalTextOverride?react.createElement("div",{className:"confirm-page-container-content__total-value"},react.createElement(loading_heartbeat.Z,{estimateUsed:null===(_this$props$txData2=this.props.txData)||void 0===_this$props$txData2?void 0:_this$props$txData2.userFeeLevel}),react.createElement(user_preferenced_currency_display.Z,{type:common.Vb,key:"total-detail-text",value:hexTransactionTotal,hideLabel:Boolean(useNativeCurrencyAsPrimaryCurrency)})):useNativeCurrencyAsPrimaryCurrency?secondaryTotalTextOverride:primaryTotalTextOverride})(),detailTotal:(()=>{var _this$props$txData;return void 0===primaryTotalTextOverride&&void 0===secondaryTotalTextOverride?react.createElement("div",{className:"confirm-page-container-content__total-value"},react.createElement(loading_heartbeat.Z,{estimateUsed:null===(_this$props$txData=this.props.txData)||void 0===_this$props$txData?void 0:_this$props$txData.userFeeLevel}),react.createElement(user_preferenced_currency_display.Z,{type:common._8,key:"total-detail-value",value:hexTransactionTotal,hideLabel:!useNativeCurrencyAsPrimaryCurrency})):useNativeCurrencyAsPrimaryCurrency?primaryTotalTextOverride:secondaryTotalTextOverride})(),subTitle:t("transactionDetailGasTotalSubtitle"),subText:react.createElement("div",{className:"confirm-page-container-content__total-amount"},react.createElement(loading_heartbeat.Z,{estimateUsed:null===(_this$props$txData3=this.props.txData)||void 0===_this$props$txData3?void 0:_this$props$txData3.userFeeLevel}),react.createElement("strong",{key:"editGasSubTextAmountLabel"},t("editGasSubTextAmountLabel"))," ",void 0===primaryTotalTextOverrideMaxAmount&&void 0===secondaryTotalTextOverride?react.createElement(user_preferenced_currency_display.Z,{type:common._8,key:"total-max-amount",value:(0,conversion_utils.Mc)(txData.txParams.value,hexMaximumTransactionFee),hideLabel:!useNativeCurrencyAsPrimaryCurrency}):useNativeCurrencyAsPrimaryCurrency?primaryTotalTextOverrideMaxAmount:secondaryTotalTextOverride)})]}),nonceField,showLedgerSteps?react.createElement(ledger_instruction_field.Z,{showDataInstruction:Boolean(null===(_txData$txParams=txData.txParams)||void 0===_txData$txParams?void 0:_txData$txParams.data)}):null)}renderData(){const{txData,dataComponent}=this.props,{txParams:{data}}=txData;return data?react.createElement(confirm_data.G,{txData,dataComponent}):null}renderDataHex(){const{txData,dataHexComponent}=this.props,{txParams:{data,to}}=txData;return data&&to?react.createElement(confirm_hexdata.n,{txData,dataHexComponent}):null}handleEdit(){const{txData,tokenData,tokenProps,onEdit,actionKey,txData:{origin},methodData={}}=this.props;this.context.trackEvent({category:constants_metametrics.ci.Transactions,event:"Edit Transaction",properties:{action:"Confirm Screen",legacy_event:!0,recipientKnown:null,functionType:actionKey||(0,metrics.a)(methodData.name)||constants_transaction.iU.contractInteraction,origin}}),onEdit({txData,tokenData,tokenProps})}handleCancelAll(){const{cancelAllTransactions,clearConfirmTransaction,history,mostRecentOverviewPage,showRejectTransactionsConfirmationModal,unapprovedTxCount}=this.props;showRejectTransactionsConfirmationModal({unapprovedTxCount,onSubmit:async()=>{this._removeBeforeUnload(),await cancelAllTransactions(),clearConfirmTransaction(),history.push(mostRecentOverviewPage)}})}handleCancel(){const{txData,cancelTransaction,history,mostRecentOverviewPage,updateCustomNonce}=this.props;this._removeBeforeUnload(),updateCustomNonce(""),cancelTransaction(txData).then((()=>{history.push(mostRecentOverviewPage)}))}handleSubmit(){const{submitting}=this.state;submitting||(this.props.isMainBetaFlask?this.handleMainSubmit():this.handleMMISubmit())}handleMainSubmit(){const{sendTransaction,txData,history,mostRecentOverviewPage,updateCustomNonce,methodData,maxFeePerGas,customTokenAmount,dappProposedTokenAmount,currentTokenBalance,maxPriorityFeePerGas,baseFeePerGas,addToAddressBookIfNew,toAccounts,toAddress}=this.props;updateTxData({txData,maxFeePerGas,customTokenAmount,dappProposedTokenAmount,currentTokenBalance,maxPriorityFeePerGas,baseFeePerGas,addToAddressBookIfNew,toAccounts,toAddress,name:methodData.name}),this.setState({submitting:!0,submitError:null},(()=>{this._removeBeforeUnload(),sendTransaction(txData).then((()=>{this._isMounted&&this.setState({submitting:!1},(()=>{history.push(mostRecentOverviewPage),updateCustomNonce("")}))})).catch((error=>{this._isMounted&&(this.setState({submitting:!1,submitError:error.message}),updateCustomNonce(""))}))}))}handleMMISubmit(){const{sendTransaction,txData,history,mostRecentOverviewPage,updateCustomNonce,unapprovedTxCount,accountType,isNotification,setWaitForConfirmDeepLinkDialog,showTransactionsFailedModal,fromAddress,isNoteToTraderSupported,methodData,maxFeePerGas,customTokenAmount,dappProposedTokenAmount,currentTokenBalance,maxPriorityFeePerGas,baseFeePerGas,addToAddressBookIfNew,toAccounts,toAddress,showCustodianDeepLink}=this.props,{noteText}=this.state;"custody"===accountType&&(txData.custodyStatus="created",isNoteToTraderSupported&&(txData.metadata={note:noteText})),updateTxData({txData,maxFeePerGas,customTokenAmount,dappProposedTokenAmount,currentTokenBalance,maxPriorityFeePerGas,baseFeePerGas,addToAddressBookIfNew,toAccounts,toAddress,name:methodData.name}),this.setState({submitting:!0,submitError:null},(()=>{this._removeBeforeUnload(),txData.custodyStatus&&setWaitForConfirmDeepLinkDialog(!0),sendTransaction(txData).then((()=>{this._isMounted&&(txData.custodyStatus?showCustodianDeepLink({fromAddress,closeNotification:isNotification&&1===unapprovedTxCount,txId:txData.id,onDeepLinkFetched:()=>{this.context.trackEvent({category:"MMI",event:"Show deeplink for transaction"})},onDeepLinkShown:()=>{this.props.clearConfirmTransaction(),this.setState({submitting:!1},(()=>{history.push(mostRecentOverviewPage),updateCustomNonce("")}))}}):this.setState({submitting:!1},(()=>{history.push(mostRecentOverviewPage),updateCustomNonce("")})))})).catch((error=>{this._isMounted&&(showTransactionsFailedModal(error.message,isNotification),this.setState({submitting:!1,submitError:error.message}),setWaitForConfirmDeepLinkDialog(!0),updateCustomNonce(""))}))}))}handleSetApprovalForAll(){this.setState({showWarningModal:!0})}renderTitleComponent(){const{title,hexTransactionAmount,txData}=this.props;return react.createElement(confirm_title._,{title,hexTransactionAmount,txData})}renderSubtitleComponent(){const{assetStandard,subtitleComponent,hexTransactionAmount,txData}=this.props;return react.createElement(confirm_subtitle.H,{hexTransactionAmount,subtitleComponent,txData,assetStandard})}componentDidMount(){this._isMounted=!0;const{toAddress,txData:{origin}={},getNextNonce,tryReverseResolveAddress}=this.props,{trackEvent}=this.context;trackEvent({category:constants_metametrics.ci.Transactions,event:"Confirm: Started",properties:{action:"Confirm Screen",legacy_event:!0,origin}}),getNextNonce(),toAddress&&tryReverseResolveAddress(toAddress),(0,actions.mhS)().then((pollingToken=>{this._isMounted?((0,actions.lTb)(pollingToken),this.setState({pollingToken})):((0,actions.T_6)(pollingToken),(0,actions.hUm)(this.state.pollingToken))})),window.addEventListener("beforeunload",this._beforeUnloadForGasPolling)}componentWillUnmount(){this._beforeUnloadForGasPolling(),this._removeBeforeUnload(),this.props.clearConfirmTransaction()}render(){const{t}=this.context,{fromName,fromAddress,toName,toAddress,toEns,toNickname,methodData,tokenAddress,contentComponent,onEdit,nonce,customNonceValue,unapprovedTxCount,type,hideSenderToRecipient,showAccountInHeader,txData,gasIsLoading,gasFeeIsCustom,nativeCurrency,hardwareWalletRequiresConnection,image,isApprovalOrRejection,assetStandard,displayAccountBalanceHeader,title,isNoteToTraderSupported}=this.props,{submitting,submitError,submitWarning,ethGasPriceWarning,editingGas,userAcknowledgedGasMissing,showWarningModal}=this.state,{name}=methodData,{valid,errorKey}=this.getErrorKey(),hasSimulationError=Boolean(txData.simulationFails),renderSimulationFailureWarning=hasSimulationError&&!userAcknowledgedGasMissing,isTokenApproval=txData.type===constants_transaction.iU.tokenMethodSetApprovalForAll||txData.type===constants_transaction.iU.tokenMethodApprove,isContractInteraction=txData.type===constants_transaction.iU.contractInteraction,isContractInteractionFromDapp=(isTokenApproval||isContractInteraction)&&"metamask"!==txData.origin;let functionType;return isContractInteractionFromDapp&&(functionType=(0,metrics.a)(name)),functionType||(functionType=type?(0,transactions_util.rm)(t,type,nativeCurrency):t("contractInteraction")),react.createElement(transaction_modal.rj,null,react.createElement(confirm_page_container_component,{fromName,fromAddress,showAccountInHeader,toName,toAddress,toEns,toNickname,showEdit:!isContractInteractionFromDapp&&Boolean(onEdit),action:functionType,image,title,titleComponent:this.renderTitleComponent(),subtitleComponent:this.renderSubtitleComponent(),detailsComponent:this.renderDetails(),dataComponent:this.renderData(functionType),dataHexComponent:this.renderDataHex(functionType),contentComponent,noteComponent:isNoteToTraderSupported&&react.createElement(note_to_trader.Z,{maxLength:"280",placeholder:t("notePlaceholder"),onChange:value=>this.setState({noteText:value}),noteText:this.state.noteText,labelText:t("transactionNote")}),nonce:customNonceValue||nonce,unapprovedTxCount,tokenAddress,errorMessage:submitError,errorKey,hasSimulationError,warning:submitWarning,disabled:renderSimulationFailureWarning||!valid||submitting||hardwareWalletRequiresConnection||gasIsLoading&&!gasFeeIsCustom,onEdit:()=>this.handleEdit(),onCancelAll:()=>this.handleCancelAll(),onCancel:()=>this.handleCancel(),onSubmit:()=>this.handleSubmit(),onSetApprovalForAll:()=>this.handleSetApprovalForAll(),showWarningModal,hideSenderToRecipient,origin:txData.origin,ethGasPriceWarning,editingGas,handleCloseEditGas:()=>this.handleCloseEditGas(),currentTransaction:txData,supportsEIP1559:this.supportsEIP1559,nativeCurrency,isApprovalOrRejection,assetStandard,txData,displayAccountBalanceHeader}))}}_defineProperty(ConfirmTransactionBase,"contextTypes",{t:prop_types_default().func,trackEvent:prop_types_default().func}),_defineProperty(ConfirmTransactionBase,"propTypes",{history:prop_types_default().object,balance:prop_types_default().string,cancelTransaction:prop_types_default().func,cancelAllTransactions:prop_types_default().func,clearConfirmTransaction:prop_types_default().func,conversionRate:prop_types_default().number,fromAddress:prop_types_default().string,fromName:prop_types_default().string,hexTransactionAmount:prop_types_default().string,hexMaximumTransactionFee:prop_types_default().string,hexTransactionTotal:prop_types_default().string,methodData:prop_types_default().object,nonce:prop_types_default().string,useNonceField:prop_types_default().bool,customNonceValue:prop_types_default().string,updateCustomNonce:prop_types_default().func,sendTransaction:prop_types_default().func,showTransactionConfirmedModal:prop_types_default().func,showRejectTransactionsConfirmationModal:prop_types_default().func,toAccounts:prop_types_default().array,toAddress:prop_types_default().string,tokenData:prop_types_default().object,tokenProps:prop_types_default().object,toName:prop_types_default().string,toEns:prop_types_default().string,toNickname:prop_types_default().string,transactionStatus:prop_types_default().string,txData:prop_types_default().object,unapprovedTxCount:prop_types_default().number,customGas:prop_types_default().object,addToAddressBookIfNew:prop_types_default().func,actionKey:prop_types_default().string,contentComponent:prop_types_default().node,dataComponent:prop_types_default().node,dataHexComponent:prop_types_default().node,tokenAddress:prop_types_default().string,customTokenAmount:prop_types_default().string,dappProposedTokenAmount:prop_types_default().string,currentTokenBalance:prop_types_default().string,onEdit:prop_types_default().func,subtitleComponent:prop_types_default().node,title:prop_types_default().string,image:prop_types_default().string,type:prop_types_default().string,getNextNonce:prop_types_default().func,nextNonce:prop_types_default().number,tryReverseResolveAddress:prop_types_default().func.isRequired,hideSenderToRecipient:prop_types_default().bool,showAccountInHeader:prop_types_default().bool,mostRecentOverviewPage:prop_types_default().string.isRequired,isEthGasPrice:prop_types_default().bool,noGasPrice:prop_types_default().bool,setDefaultHomeActiveTabName:prop_types_default().func,primaryTotalTextOverride:prop_types_default().string,secondaryTotalTextOverride:prop_types_default().string,gasIsLoading:prop_types_default().bool,primaryTotalTextOverrideMaxAmount:prop_types_default().string,useNativeCurrencyAsPrimaryCurrency:prop_types_default().bool,maxFeePerGas:prop_types_default().string,maxPriorityFeePerGas:prop_types_default().string,baseFeePerGas:prop_types_default().string,gasFeeIsCustom:prop_types_default().bool,showLedgerSteps:prop_types_default().bool.isRequired,nativeCurrency:prop_types_default().string,supportsEIP1559:prop_types_default().bool,hardwareWalletRequiresConnection:prop_types_default().bool,isMultiLayerFeeNetwork:prop_types_default().bool,isBuyableChain:prop_types_default().bool,isApprovalOrRejection:prop_types_default().bool,assetStandard:prop_types_default().string,useCurrencyRateCheck:prop_types_default().bool,isNotification:prop_types_default().bool,accountType:prop_types_default().string,setWaitForConfirmDeepLinkDialog:prop_types_default().func,showTransactionsFailedModal:prop_types_default().func,showCustodianDeepLink:prop_types_default().func,isNoteToTraderSupported:prop_types_default().bool,isMainBetaFlask:prop_types_default().bool,displayAccountBalanceHeader:prop_types_default().bool}),ConfirmTransactionBase.__docgenInfo={description:"",methods:[{name:"getErrorKey",docblock:null,modifiers:[],params:[],returns:null},{name:"handleEditGas",docblock:null,modifiers:[],params:[],returns:null},{name:"handleCloseEditGas",docblock:null,modifiers:[],params:[],returns:null},{name:"setUserAcknowledgedGasMissing",docblock:null,modifiers:[],params:[],returns:null},{name:"renderDetails",docblock:null,modifiers:[],params:[],returns:null},{name:"renderData",docblock:null,modifiers:[],params:[],returns:null},{name:"renderDataHex",docblock:null,modifiers:[],params:[],returns:null},{name:"handleEdit",docblock:null,modifiers:[],params:[],returns:null},{name:"handleCancelAll",docblock:null,modifiers:[],params:[],returns:null},{name:"handleCancel",docblock:null,modifiers:[],params:[],returns:null},{name:"handleSubmit",docblock:null,modifiers:[],params:[],returns:null},{name:"handleMainSubmit",docblock:null,modifiers:[],params:[],returns:null},{name:"handleMMISubmit",docblock:null,modifiers:[],params:[],returns:null},{name:"handleSetApprovalForAll",docblock:null,modifiers:[],params:[],returns:null},{name:"renderTitleComponent",docblock:null,modifiers:[],params:[],returns:null},{name:"renderSubtitleComponent",docblock:null,modifiers:[],params:[],returns:null},{name:"_beforeUnloadForGasPolling",docblock:null,modifiers:[],params:[],returns:null},{name:"_removeBeforeUnload",docblock:null,modifiers:[],params:[],returns:null}],displayName:"ConfirmTransactionBase",props:{history:{description:"",type:{name:"object"},required:!1},balance:{description:"",type:{name:"string"},required:!1},cancelTransaction:{description:"",type:{name:"func"},required:!1},cancelAllTransactions:{description:"",type:{name:"func"},required:!1},clearConfirmTransaction:{description:"",type:{name:"func"},required:!1},conversionRate:{description:"",type:{name:"number"},required:!1},fromAddress:{description:"",type:{name:"string"},required:!1},fromName:{description:"",type:{name:"string"},required:!1},hexTransactionAmount:{description:"",type:{name:"string"},required:!1},hexMaximumTransactionFee:{description:"",type:{name:"string"},required:!1},hexTransactionTotal:{description:"",type:{name:"string"},required:!1},methodData:{description:"",type:{name:"object"},required:!1},nonce:{description:"",type:{name:"string"},required:!1},useNonceField:{description:"",type:{name:"bool"},required:!1},customNonceValue:{description:"",type:{name:"string"},required:!1},updateCustomNonce:{description:"",type:{name:"func"},required:!1},sendTransaction:{description:"",type:{name:"func"},required:!1},showTransactionConfirmedModal:{description:"",type:{name:"func"},required:!1},showRejectTransactionsConfirmationModal:{description:"",type:{name:"func"},required:!1},toAccounts:{description:"",type:{name:"array"},required:!1},toAddress:{description:"",type:{name:"string"},required:!1},tokenData:{description:"",type:{name:"object"},required:!1},tokenProps:{description:"",type:{name:"object"},required:!1},toName:{description:"",type:{name:"string"},required:!1},toEns:{description:"",type:{name:"string"},required:!1},toNickname:{description:"",type:{name:"string"},required:!1},transactionStatus:{description:"",type:{name:"string"},required:!1},txData:{description:"",type:{name:"object"},required:!1},unapprovedTxCount:{description:"",type:{name:"number"},required:!1},customGas:{description:"",type:{name:"object"},required:!1},addToAddressBookIfNew:{description:"",type:{name:"func"},required:!1},actionKey:{description:"",type:{name:"string"},required:!1},contentComponent:{description:"",type:{name:"node"},required:!1},dataComponent:{description:"",type:{name:"node"},required:!1},dataHexComponent:{description:"",type:{name:"node"},required:!1},tokenAddress:{description:"",type:{name:"string"},required:!1},customTokenAmount:{description:"",type:{name:"string"},required:!1},dappProposedTokenAmount:{description:"",type:{name:"string"},required:!1},currentTokenBalance:{description:"",type:{name:"string"},required:!1},onEdit:{description:"",type:{name:"func"},required:!1},subtitleComponent:{description:"",type:{name:"node"},required:!1},title:{description:"",type:{name:"string"},required:!1},image:{description:"",type:{name:"string"},required:!1},type:{description:"",type:{name:"string"},required:!1},getNextNonce:{description:"",type:{name:"func"},required:!1},nextNonce:{description:"",type:{name:"number"},required:!1},tryReverseResolveAddress:{description:"",type:{name:"func"},required:!0},hideSenderToRecipient:{description:"",type:{name:"bool"},required:!1},showAccountInHeader:{description:"",type:{name:"bool"},required:!1},mostRecentOverviewPage:{description:"",type:{name:"string"},required:!0},isEthGasPrice:{description:"",type:{name:"bool"},required:!1},noGasPrice:{description:"",type:{name:"bool"},required:!1},setDefaultHomeActiveTabName:{description:"",type:{name:"func"},required:!1},primaryTotalTextOverride:{description:"",type:{name:"string"},required:!1},secondaryTotalTextOverride:{description:"",type:{name:"string"},required:!1},gasIsLoading:{description:"",type:{name:"bool"},required:!1},primaryTotalTextOverrideMaxAmount:{description:"",type:{name:"string"},required:!1},useNativeCurrencyAsPrimaryCurrency:{description:"",type:{name:"bool"},required:!1},maxFeePerGas:{description:"",type:{name:"string"},required:!1},maxPriorityFeePerGas:{description:"",type:{name:"string"},required:!1},baseFeePerGas:{description:"",type:{name:"string"},required:!1},gasFeeIsCustom:{description:"",type:{name:"bool"},required:!1},showLedgerSteps:{description:"",type:{name:"bool"},required:!0},nativeCurrency:{description:"",type:{name:"string"},required:!1},supportsEIP1559:{description:"",type:{name:"bool"},required:!1},hardwareWalletRequiresConnection:{description:"",type:{name:"bool"},required:!1},isMultiLayerFeeNetwork:{description:"",type:{name:"bool"},required:!1},isBuyableChain:{description:"",type:{name:"bool"},required:!1},isApprovalOrRejection:{description:"",type:{name:"bool"},required:!1},assetStandard:{description:"",type:{name:"string"},required:!1},useCurrencyRateCheck:{description:"",type:{name:"bool"},required:!1},isNotification:{description:"",type:{name:"bool"},required:!1},accountType:{description:"",type:{name:"string"},required:!1},setWaitForConfirmDeepLinkDialog:{description:"",type:{name:"func"},required:!1},showTransactionsFailedModal:{description:"",type:{name:"func"},required:!1},showCustodianDeepLink:{description:"",type:{name:"func"},required:!1},isNoteToTraderSupported:{description:"",type:{name:"bool"},required:!1},isMainBetaFlask:{description:"",type:{name:"bool"},required:!1},displayAccountBalanceHeader:{description:"",type:{name:"bool"},required:!1}},context:{t:{type:{name:"func"},required:!1},trackEvent:{type:{name:"func"},required:!1}}};let customNonceValue="";const confirm_transaction_base_container=(0,redux.compose)(react_router.EN,(0,es.$j)(((state,ownProps)=>{var _identities$toAddress,_tokenList$toAddress$;const{toAddress:propsToAddress,customTxParamsData,match:{params={}}}=ownProps,{id:paramsTransactionId}=params,isMainnet=(0,selectors.b8h)(state),isNotification=(0,lib_util.kD)()===constants_app.vH,isGasEstimatesLoading=(0,metamask_metamask.rc)(state),gasLoadingAnimationIsShowing=(0,app.Jl)(state),isBuyableChain=(0,selectors.R9W)(state),{confirmTransaction,metamask}=state,{conversionRate,identities,addressBook,networkId,unapprovedTxs,nextNonce}=metamask,{chainId}=(0,metamask_metamask.Vu)(state),{tokenData,txData,tokenProps,nonce}=confirmTransaction,{txParams={},id:transactionId,type}=txData,txId=transactionId||Number(paramsTransactionId),transaction=(0,selectors.K8C)(state,txId),{from:fromAddress,to:txParamsToAddress,gasPrice,gas:gasLimit,value:amount,data}=transaction&&transaction.txParams||txParams,accounts=(0,selectors.Dh7)(state),transactionData=(0,transaction_utils.I1)(data),tokenToAddress=(0,token_util.Qn)(transactionData),{balance}=accounts[fromAddress],{name:fromName}=identities[fromAddress],toAddress=type===constants_transaction.iU.simpleSend||!(0,hexstring_utils.H1)(amount)?txParamsToAddress:propsToAddress||tokenToAddress||txParamsToAddress,toAccounts=(0,metamask_metamask.zZ)(state),tokenList=(0,selectors.HJ)(state),toName=(null===(_identities$toAddress=identities[toAddress])||void 0===_identities$toAddress?void 0:_identities$toAddress.name)||(null===(_tokenList$toAddress$=tokenList[null==toAddress?void 0:toAddress.toLowerCase()])||void 0===_tokenList$toAddress$?void 0:_tokenList$toAddress$.name)||(0,util.$Q)((0,hexstring_utils.QG)(toAddress)),checksummedAddress=(0,hexstring_utils.QG)(toAddress),addressBookObject=addressBook&&addressBook[chainId]&&addressBook[chainId][checksummedAddress],toEns=(0,selectors.HZz)(state,checksummedAddress),toNickname=addressBookObject?addressBookObject.name:"",transactionStatus=transaction?transaction.status:"",supportsEIP1559=(0,selectors.mVn)(state)&&!(0,transactions_util.h0)(txParams),{hexTransactionAmount,hexMaximumTransactionFee,hexTransactionTotal,gasEstimationObject}=(0,selectors.nfL)(state,transaction),currentNetworkUnapprovedTxs=Object.keys(unapprovedTxs).filter((key=>(0,transaction_utils.lw)(unapprovedTxs[key],chainId,networkId))).reduce(((acc,key)=>({...acc,[key]:unapprovedTxs[key]})),{}),unapprovedTxCount=(0,util.gs)(currentNetworkUnapprovedTxs).length,insufficientBalance=!(0,send_utils.UV)({amount,gasTotal:(0,transactions_controller_utils.hJ)(gasLimit,gasPrice),balance,conversionRate}),methodData=(0,selectors.LO0)(state,data)||{},fullTxData=(0,selectors.hOj)(state,txId,constants_transaction.LN.unapproved,customTxParamsData);customNonceValue=(0,selectors.Dp_)(state);const isEthGasPrice=(0,selectors.OIh)(state),noGasPrice=!supportsEIP1559&&(0,selectors.zA3)(state),{useNativeCurrencyAsPrimaryCurrency}=(0,selectors.Izy)(state),gasFeeIsCustom=fullTxData.userFeeLevel===gas.d_||(0,transaction_utils.EN)(fullTxData),fromAddressIsLedger=(0,metamask_metamask.Dc)(state,fromAddress),nativeCurrency=(0,metamask_metamask.JK)(state),accountType=(0,selectors_selectors.lx)(state,fromAddress),fromChecksumHexAddress=(0,hexstring_utils.QG)(fromAddress),isNoteToTraderSupported=(0,institutional_selectors.GZ)(state,fromChecksumHexAddress),hardwareWalletRequiresConnection=(0,selectors.DnU)(state,fromAddress),isMultiLayerFeeNetwork=(0,selectors.SEh)(state);return{balance,fromAddress,fromName,toAccounts,toAddress,toEns,toName,toNickname,hexTransactionAmount,hexMaximumTransactionFee,hexTransactionTotal,txData:fullTxData,tokenData,methodData,tokenProps,conversionRate,transactionStatus,nonce,unapprovedTxs,unapprovedTxCount,customGas:{gasLimit,gasPrice},advancedInlineGasShown:(0,selectors.uRW)(state),useNonceField:(0,selectors.Uwe)(state),customNonceValue,insufficientBalance,hideFiatConversion:!(0,selectors.i8I)(state),type,nextNonce,mostRecentOverviewPage:(0,history_history.H7)(state),isMainnet,isEthGasPrice,noGasPrice,supportsEIP1559,gasIsLoading:isGasEstimatesLoading||gasLoadingAnimationIsShowing,useNativeCurrencyAsPrimaryCurrency,maxFeePerGas:gasEstimationObject.maxFeePerGas,maxPriorityFeePerGas:gasEstimationObject.maxPriorityFeePerGas,baseFeePerGas:gasEstimationObject.baseFeePerGas,gasFeeIsCustom,showLedgerSteps:fromAddressIsLedger,nativeCurrency,hardwareWalletRequiresConnection,isMultiLayerFeeNetwork,chainId,isBuyableChain,useCurrencyRateCheck:(0,selectors.nsI)(state),accountType,isNoteToTraderSupported,isNotification}}),(dispatch=>{const mmiActions=(0,institution_background.I6)();return{tryReverseResolveAddress:address=>dispatch((0,actions.DNX)(address)),updateCustomNonce:value=>{customNonceValue=value,dispatch((0,actions.spc)(value))},clearConfirmTransaction:()=>dispatch((0,confirm_transaction_duck.vi)()),showTransactionConfirmedModal:({onSubmit})=>dispatch((0,actions.K4b)({name:"TRANSACTION_CONFIRMED",onSubmit})),showRejectTransactionsConfirmationModal:({onSubmit,unapprovedTxCount})=>dispatch((0,actions.K4b)({name:"REJECT_TRANSACTIONS",onSubmit,unapprovedTxCount})),cancelTransaction:({id})=>dispatch((0,actions.cKU)({id})),cancelAllTransactions:txList=>dispatch((0,actions.irt)(txList)),sendTransaction:txData=>dispatch((0,actions.GGx)((txData=>customNonceValue?{...txData,customNonceValue}:txData)(txData))),getNextNonce:()=>dispatch((0,actions.l1k)()),setDefaultHomeActiveTabName:tabName=>dispatch((0,actions.txm)(tabName)),updateTransactionGasFees:gasFees=>{dispatch((0,metamask_metamask.Nt)({...gasFees,expectHexWei:!0}))},addToAddressBookIfNew:(newAddress,toAccounts,nickname="")=>{const hexPrefixedAddress=(0,lib_util.L_)(newAddress);(function addressIsNew(toAccounts,newAddress){const newAddressNormalized=newAddress.toLowerCase();return!toAccounts.some((({address})=>address.toLowerCase()===newAddressNormalized))})(toAccounts,hexPrefixedAddress)&&dispatch((0,actions.Wbu)(hexPrefixedAddress,nickname))},getCustodianConfirmDeepLink:id=>dispatch(mmiActions.getCustodianConfirmDeepLink(id)),showCustodyConfirmLink:({link,address,closeNotification,custodyId})=>dispatch(mmiActions.showCustodyConfirmLink({link,address,closeNotification,custodyId})),showTransactionsFailedModal:(errorMessage,closeNotification)=>dispatch((0,actions.K4b)({name:"TRANSACTION_FAILED",errorMessage,closeNotification})),showCustodianDeepLink:({txId,fromAddress,closeNotification,onDeepLinkFetched,onDeepLinkShown})=>(0,dist.kC)({dispatch,mmiActions,txId,fromAddress,closeNotification,onDeepLinkFetched,onDeepLinkShown}),setWaitForConfirmDeepLinkDialog:wait=>dispatch(mmiActions.setWaitForConfirmDeepLinkDialog(wait))}}),((stateProps,dispatchProps,ownProps)=>{const{txData,unapprovedTxs}=stateProps,{cancelAllTransactions:dispatchCancelAllTransactions,updateTransactionGasFees:dispatchUpdateTransactionGasFees,...otherDispatchProps}=dispatchProps;let isMainBetaFlask=ownProps.isMainBetaFlask||!1;return void 0===ownProps.isMainBetaFlask&&(isMainBetaFlask=!0),{...stateProps,...otherDispatchProps,...ownProps,cancelAllTransactions:()=>dispatchCancelAllTransactions((0,util.gs)(unapprovedTxs)),updateGasAndCalculate:({gasLimit,gasPrice})=>{dispatchUpdateTransactionGasFees({gasLimit,gasPrice,transaction:txData})},isMainBetaFlask}})))(ConfirmTransactionBase),ConfirmSendEther=()=>{const dispatch=(0,es.I0)(),history=(0,react_router.k6)(),handleEdit=({txData})=>{(async txData=>{const{id}=txData;await dispatch((0,send.tQ)(constants_transaction.h3.native,id.toString())),dispatch((0,confirm_transaction_duck.vi)())})(txData).then((()=>{history.push(routes.Xy)}))};return react.createElement(confirm_transaction_base_container,{actionKey:"confirm",onEdit:confirmTransactionData=>handleEdit(confirmTransactionData)})};ConfirmSendEther.__docgenInfo={description:"",methods:[],displayName:"ConfirmSendEther"};const confirm_send_ether=ConfirmSendEther;var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3;const sendEther={id:9597986287241458,time:1681203297082,status:"unapproved",metamaskNetworkId:"5",originalGasEstimate:"0x5208",userEditedGasLimit:!1,chainId:"0x5",loadingDefaults:!1,dappSuggestedGasFees:{maxPriorityFeePerGas:"0x3b9aca00",maxFeePerGas:"0x2540be400"},sendFlowHistory:[],txParams:{from:"0x0dcd5d886577d5081b0c52e242ef29e70be3e7bc",to:"0x0c54fccd2e384b4bb6f2e405bf5cbc15a017aafb",value:"0x0",gas:"0x5208",maxFeePerGas:"0x2540be400",maxPriorityFeePerGas:"0x3b9aca00"},origin:"https://metamask.github.io",actionId:1830698773,type:"simpleSend",securityProviderResponse:null,userFeeLevel:"dappSuggested",defaultGasEstimates:{estimateType:"dappSuggested",gas:"0x5208",maxFeePerGas:"0x2540be400",maxPriorityFeePerGas:"0x3b9aca00"}};mock_state.metamask.unapprovedTxs[sendEther.id]=sendEther,mock_state.confirmTransaction={txData:sendEther};const confirm_send_ether_stories_store=(0,store.Z)(mock_state),confirm_send_ether_stories={title:"Pages/ConfirmSendEther",decorators:[story=>react.createElement(es.zt,{store:confirm_send_ether_stories_store},story())]},DefaultStory=()=>react.createElement(confirm_send_ether,null);DefaultStory.storyName="Default",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"() => {\n  return <ConfirmSendEther />;\n}",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}},"./shared/lib/token-util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{b:()=>fetchTokenBalance});var _metamask_metamask_eth_abis__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@metamask/metamask-eth-abis/dist/index.js"),_ethersproject_contracts__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@ethersproject/contracts/lib.esm/index.js"),_ethersproject_providers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ethersproject/providers/lib.esm/web3-provider.js");async function fetchTokenBalance(address,userAddress,provider){const ethersProvider=new _ethersproject_providers__WEBPACK_IMPORTED_MODULE_1__.Q(provider),tokenContract=new _ethersproject_contracts__WEBPACK_IMPORTED_MODULE_2__.Contract(address,_metamask_metamask_eth_abis__WEBPACK_IMPORTED_MODULE_0__.abiERC20,ethersProvider),tokenBalancePromise=tokenContract?tokenContract.balanceOf(userAddress):Promise.resolve();return await tokenBalancePromise}},"./ui/components/app/confirm-data/confirm-data.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_10__),react_redux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-redux/es/index.js"),_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/helpers/constants/design-system.ts"),_selectors__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/selectors/index.js"),_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/hooks/useI18nContext.js"),_hooks_useTransactionFunctionType__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/hooks/useTransactionFunctionType.js"),_ui_box_box__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./ui/components/ui/box/box.js"),_ui_disclosure__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./ui/components/ui/disclosure/index.js"),_transaction_decoding__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./ui/components/app/transaction-decoding/index.js"),_component_library__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./ui/components/component-library/index.js");const ConfirmData=({txData,dataComponent})=>{const t=(0,_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_4__.C)(),{txParams={}}=txData,methodData=(0,react_redux__WEBPACK_IMPORTED_MODULE_1__.v9)((state=>(0,_selectors__WEBPACK_IMPORTED_MODULE_3__.LO0)(state,txParams.data)||{})),{functionType}=(0,_hooks_useTransactionFunctionType__WEBPACK_IMPORTED_MODULE_5__.K)(txData);if(dataComponent)return dataComponent;if(!txParams.data)return null;const{params}=methodData,functionParams=null!=params&&params.length?`(${params.map((({type})=>type)).join(", ")})`:"";return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box_box__WEBPACK_IMPORTED_MODULE_6__.ZP,{color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__.Il.textAlternative,className:"confirm-data",padding:4},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box_box__WEBPACK_IMPORTED_MODULE_6__.ZP,{paddingBottom:3,paddingTop:2},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_9__.xv,{as:"span",textTransform:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__._5.Uppercase,variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__.rK.bodySm},`${t("functionType")}:`),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_9__.xv,{as:"span",color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__.Il.textDefault,paddingLeft:1,textTransform:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__._5.Capitalize,variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__.rK.bodySmBold},`${functionType} ${functionParams}`)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_disclosure__WEBPACK_IMPORTED_MODULE_7__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_transaction_decoding__WEBPACK_IMPORTED_MODULE_8__.Z,{to:null==txParams?void 0:txParams.to,inputData:null==txParams?void 0:txParams.data})))};ConfirmData.propTypes={txData:prop_types__WEBPACK_IMPORTED_MODULE_10___default().object,dataComponent:prop_types__WEBPACK_IMPORTED_MODULE_10___default().element},ConfirmData.__docgenInfo={description:"",methods:[],displayName:"ConfirmData",props:{txData:{description:"",type:{name:"object"},required:!1},dataComponent:{description:"",type:{name:"element"},required:!1}}};const __WEBPACK_DEFAULT_EXPORT__=ConfirmData},"./ui/components/app/confirm-data/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{G:()=>_confirm_data__WEBPACK_IMPORTED_MODULE_0__.Z});var _confirm_data__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./ui/components/app/confirm-data/confirm-data.js")},"./ui/components/app/confirm-hexdata/confirm-hexdata.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>confirm_hexdata});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-redux/es/index.js"),dist_browser=__webpack_require__("./node_modules/ethereumjs-util/dist.browser/index.js"),Buffer=__webpack_require__("./node_modules/buffer/index.js").Buffer;var selectors=__webpack_require__("./ui/selectors/index.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),useTransactionFunctionType=__webpack_require__("./ui/hooks/useTransactionFunctionType.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),box=__webpack_require__("./ui/components/ui/box/index.js"),component_library=__webpack_require__("./ui/components/component-library/index.js"),copy_raw_data=__webpack_require__("./ui/components/app/transaction-decoding/components/ui/copy-raw-data/index.js");const ConfirmHexData=({txData,dataHexComponent})=>{const t=(0,useI18nContext.C)(),{txParams={}}=txData,methodData=(0,es.v9)((state=>(0,selectors.LO0)(state,txParams.data)||{})),{functionType}=(0,useTransactionFunctionType.K)(txData);if(dataHexComponent)return dataHexComponent;if(!txParams.data||!txParams.to)return null;const{params}=methodData,functionParams=null!=params&&params.length?`(${params.map((({type})=>type)).join(", ")})`:"";return react.createElement(box.ZP,{padding:4},react.createElement(box.ZP,{paddingBottom:3,paddingTop:2},react.createElement(component_library.xv,{as:"span",textTransform:design_system._5.Uppercase,variant:design_system.rK.bodySm},`${t("functionType")}:`),react.createElement(component_library.xv,{as:"span",color:design_system.Il.textDefault,paddingLeft:1,textTransform:design_system._5.Capitalize,variant:design_system.rK.bodySmBold},`${functionType} ${functionParams}`)),params&&react.createElement(box.ZP,{backgroundColor:design_system.Il.backgroundAlternative,padding:4},react.createElement(component_library.xv,{as:"h3",paddingBottom:3,paddingTop:2,textTransform:design_system._5.Uppercase,variant:design_system.rK.bodySm},`${t("parameters")}:`),react.createElement(component_library.xv,{overflowWrap:design_system.mn.BreakWord,variant:design_system.rK.bodySm},react.createElement("pre",null,JSON.stringify(params,null,2)))),react.createElement(component_library.xv,{as:"h3",paddingBottom:3,paddingTop:2,textTransform:design_system._5.Uppercase,variant:design_system.rK.bodySm},`${t("hexData")}: ${function toBuffer(input){return"string"==typeof input&&!1===(0,dist_browser.isHexString)(input)?Buffer.from(input):(0,dist_browser.toBuffer)(input)}(null==txParams?void 0:txParams.data).length} bytes`),react.createElement(component_library.xv,{backgroundColor:design_system.Il.backgroundAlternative,overflowWrap:design_system.mn.BreakWord,padding:4,variant:design_system.rK.bodySm},null==txParams?void 0:txParams.data),react.createElement(copy_raw_data.Z,{data:null==txParams?void 0:txParams.data}))};ConfirmHexData.propTypes={txData:prop_types_default().object,dataHexComponent:prop_types_default().element},ConfirmHexData.__docgenInfo={description:"",methods:[],displayName:"ConfirmHexData",props:{txData:{description:"",type:{name:"object"},required:!1},dataHexComponent:{description:"",type:{name:"element"},required:!1}}};const confirm_hexdata=ConfirmHexData},"./ui/components/app/confirm-hexdata/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{n:()=>_confirm_hexdata__WEBPACK_IMPORTED_MODULE_0__.Z});var _confirm_hexdata__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./ui/components/app/confirm-hexdata/confirm-hexdata.js")},"./ui/components/app/confirm-page-container/confirm-detail-row/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>confirm_detail_row_component});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),user_preferenced_currency_display=__webpack_require__("./ui/components/app/user-preferenced-currency-display/index.js"),common=__webpack_require__("./ui/helpers/constants/common.ts");const ConfirmDetailRow=props=>{const{label,primaryText,secondaryText,onHeaderClick,primaryValueTextColor,headerText,headerTextClassName,value}=props;return react.createElement("div",{className:"confirm-detail-row"},react.createElement("div",{className:"confirm-detail-row__label"},label),react.createElement("div",{className:"confirm-detail-row__details"},headerText&&react.createElement("div",{className:classnames_default()("confirm-detail-row__header-text",headerTextClassName),onClick:()=>null==onHeaderClick?void 0:onHeaderClick()},headerText),primaryText?react.createElement("div",{className:"confirm-detail-row__primary",style:{color:primaryValueTextColor}},primaryText):react.createElement(user_preferenced_currency_display.Z,{className:"confirm-detail-row__primary",type:common._8,value,showEthLogo:!0,ethLogoHeight:18,style:{color:primaryValueTextColor},hideLabel:!0}),secondaryText?react.createElement("div",{className:"confirm-detail-row__secondary"},secondaryText):react.createElement(user_preferenced_currency_display.Z,{className:"confirm-detail-row__secondary",type:common.Vb,value,showEthLogo:!0,hideLabel:!0})))};ConfirmDetailRow.propTypes={headerText:prop_types_default().string,headerTextClassName:prop_types_default().string,label:prop_types_default().string,onHeaderClick:prop_types_default().func,primaryValueTextColor:prop_types_default().string,primaryText:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),secondaryText:prop_types_default().string,value:prop_types_default().string},ConfirmDetailRow.__docgenInfo={description:"",methods:[],displayName:"ConfirmDetailRow",props:{headerText:{description:"",type:{name:"string"},required:!1},headerTextClassName:{description:"",type:{name:"string"},required:!1},label:{description:"",type:{name:"string"},required:!1},onHeaderClick:{description:"",type:{name:"func"},required:!1},primaryValueTextColor:{description:"",type:{name:"string"},required:!1},primaryText:{description:"",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!1},secondaryText:{description:"",type:{name:"string"},required:!1},value:{description:"",type:{name:"string"},required:!1}}};const confirm_detail_row_component=ConfirmDetailRow},"./ui/components/app/confirm-page-container/confirm-page-container-header/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>ConfirmPageContainerHeader});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),app=__webpack_require__("./shared/constants/app.ts"),util=__webpack_require__("./app/scripts/lib/util.ts"),network_display=__webpack_require__("./ui/components/app/network-display/index.js"),identicon=__webpack_require__("./ui/components/ui/identicon/index.js"),utils_util=__webpack_require__("./ui/helpers/utils/util.js"),account_mismatch_warning_component=__webpack_require__("./ui/components/ui/account-mismatch-warning/account-mismatch-warning.component.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),component_library=__webpack_require__("./ui/components/component-library/index.js");function ConfirmPageContainerHeader({onEdit,showEdit,accountAddress,showAccountInHeader,children}){const t=(0,useI18nContext.C)(),windowType=(0,util.kD)(),isFullScreen=windowType!==app.vH&&windowType!==app.bE;return!showEdit&&isFullScreen?children:react.createElement("div",{className:"confirm-page-container-header","data-testid":"header-container"},react.createElement("div",{className:"confirm-page-container-header__row"},showAccountInHeader?react.createElement("div",{className:"confirm-page-container-header__address-container"},react.createElement("div",{className:"confirm-page-container-header__address-identicon"},react.createElement(identicon.Z,{address:accountAddress,diameter:24})),react.createElement("div",{className:"confirm-page-container-header__address","data-testid":"header-address"},(0,utils_util.$Q)(accountAddress)),react.createElement(account_mismatch_warning_component.Z,{address:accountAddress})):react.createElement("div",{className:"confirm-page-container-header__back-button-container",style:{visibility:showEdit?"initial":"hidden"}},react.createElement(component_library.JO,{name:component_library.uH.ArrowLeft}),react.createElement("span",{"data-testid":"confirm-page-back-edit-button",className:"confirm-page-container-header__back-button",onClick:()=>onEdit()},t("edit"))),isFullScreen?null:react.createElement(network_display.Z,null)),children)}ConfirmPageContainerHeader.propTypes={accountAddress:prop_types_default().string,showAccountInHeader:prop_types_default().bool,showEdit:prop_types_default().bool,onEdit:prop_types_default().func,children:prop_types_default().node},ConfirmPageContainerHeader.__docgenInfo={description:"",methods:[],displayName:"ConfirmPageContainerHeader",props:{accountAddress:{description:"",type:{name:"string"},required:!1},showAccountInHeader:{description:"",type:{name:"bool"},required:!1},showEdit:{description:"",type:{name:"bool"},required:!1},onEdit:{description:"",type:{name:"func"},required:!1},children:{description:"",type:{name:"node"},required:!1}}}},"./ui/components/app/confirm-page-container/confirm-page-container-navigation/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>confirm_page_container_navigation_component});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),selectors=__webpack_require__("./ui/selectors/index.js"),i18n=__webpack_require__("./ui/contexts/i18n.js"),routes=__webpack_require__("./ui/helpers/constants/routes.ts"),confirm_transaction_duck=__webpack_require__("./ui/ducks/confirm-transaction/confirm-transaction.duck.js");const ConfirmPageContainerNavigation=()=>{const t=(0,react.useContext)(i18n.OO),dispatch=(0,es.I0)(),history=(0,react_router.k6)(),{id}=(0,react_router.UO)(),unapprovedDecryptMsgs=(0,es.v9)(selectors.TPv),unapprovedEncryptionPublicKeyMsgs=(0,es.v9)(selectors.qBU),unconfirmedTransactions=(0,es.v9)(selectors.MsA),enumDecryptAndEncryptMsgs=[...Object.keys(unapprovedDecryptMsgs||{}),...Object.keys(unapprovedEncryptionPublicKeyMsgs||{})],enumUnapprovedTxs=Object.keys(unconfirmedTransactions).filter((key=>!1===enumDecryptAndEncryptMsgs.includes(key))),currentPosition=enumUnapprovedTxs.indexOf(id),totalTx=enumUnapprovedTxs.length,positionOfCurrentTx=currentPosition+1,nextTxId=enumUnapprovedTxs[currentPosition+1],prevTxId=enumUnapprovedTxs[currentPosition-1],showNavigation=enumUnapprovedTxs.length>1,firstTx=enumUnapprovedTxs[0],lastTx=enumUnapprovedTxs[enumUnapprovedTxs.length-1],onNextTx=txId=>{var _unconfirmedTransacti;txId&&(dispatch((0,confirm_transaction_duck.vi)()),history.push(null!==(_unconfirmedTransacti=unconfirmedTransactions[txId])&&void 0!==_unconfirmedTransacti&&_unconfirmedTransacti.msgParams?`${routes.zq}/${txId}${routes.tD}`:`${routes.zq}/${txId}`))};return react.createElement("div",{className:"confirm-page-container-navigation",style:{display:showNavigation?"flex":"none"}},react.createElement("div",{className:"confirm-page-container-navigation__container","data-testid":"navigation-container",style:{visibility:prevTxId?"initial":"hidden"}},react.createElement("button",{className:"confirm-page-container-navigation__arrow","data-testid":"first-page",onClick:()=>onNextTx(firstTx)},react.createElement("i",{className:"fa fa-angle-double-left fa-2x"})),react.createElement("button",{className:"confirm-page-container-navigation__arrow","data-testid":"previous-page",onClick:()=>onNextTx(prevTxId)},react.createElement("i",{className:"fa fa-angle-left fa-2x"}))),react.createElement("div",{className:"confirm-page-container-navigation__textcontainer"},react.createElement("div",{className:"confirm-page-container-navigation__navtext"},positionOfCurrentTx," ",t("ofTextNofM")," ",totalTx),react.createElement("div",{className:"confirm-page-container-navigation__longtext"},t("requestsAwaitingAcknowledgement"))),react.createElement("div",{className:"confirm-page-container-navigation__container",style:{visibility:nextTxId?"initial":"hidden"}},react.createElement("button",{className:"confirm-page-container-navigation__arrow","data-testid":"next-page",onClick:()=>onNextTx(nextTxId)},react.createElement("i",{className:"fa fa-angle-right fa-2x"})),react.createElement("button",{className:"confirm-page-container-navigation__arrow","data-testid":"last-page",onClick:()=>onNextTx(lastTx)},react.createElement("i",{className:"fa fa-angle-double-right fa-2x"}))))};ConfirmPageContainerNavigation.__docgenInfo={description:"",methods:[],displayName:"ConfirmPageContainerNavigation"};const confirm_page_container_navigation_component=ConfirmPageContainerNavigation},"./ui/components/app/confirm-subtitle/confirm-subtitle.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>confirm_subtitle});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-redux/es/index.js"),common=__webpack_require__("./ui/helpers/constants/common.ts"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),transactions_util=__webpack_require__("./ui/helpers/utils/transactions.util.js"),selectors=__webpack_require__("./ui/selectors/index.js"),metamask=__webpack_require__("./ui/ducks/metamask/metamask.js"),string_utils=__webpack_require__("./shared/modules/string-utils.ts");var component_library=__webpack_require__("./ui/components/component-library/index.js"),user_preferenced_currency_display=__webpack_require__("./ui/components/app/user-preferenced-currency-display/index.js");const ConfirmSubTitle=({txData,hexTransactionAmount,subtitleComponent,assetStandard})=>{const shouldShowFiat=(0,es.v9)(selectors.i8I),{isNftTransfer}=((txData={})=>{var _allNftContracts$sele,_allNftContracts$sele2;const{allNftContracts,selectedAddress}=(0,es.v9)((state=>state.metamask)),{chainId}=(0,es.v9)(metamask.Vu);return{isNftTransfer:Boolean(null==allNftContracts||null===(_allNftContracts$sele=allNftContracts[selectedAddress])||void 0===_allNftContracts$sele||null===(_allNftContracts$sele2=_allNftContracts$sele[chainId])||void 0===_allNftContracts$sele2?void 0:_allNftContracts$sele2.find((contract=>(0,string_utils.J)(contract.address,txData.txParams.to))))}})(txData);return shouldShowFiat||isNftTransfer||(0,transactions_util.Tp)(assetStandard)?subtitleComponent||react.createElement(component_library.xv,{as:"h5",ellipsis:!0,variant:design_system.rK.bodyMd,color:design_system.Il.textAlternative},react.createElement(user_preferenced_currency_display.Z,{value:hexTransactionAmount,type:common.Vb,showEthLogo:!0,hideLabel:!0})):null};ConfirmSubTitle.propTypes={assetStandard:prop_types_default().string,hexTransactionAmount:prop_types_default().string,subtitleComponent:prop_types_default().element,txData:prop_types_default().object.isRequired},ConfirmSubTitle.__docgenInfo={description:"",methods:[],displayName:"ConfirmSubTitle",props:{assetStandard:{description:"",type:{name:"string"},required:!1},hexTransactionAmount:{description:"",type:{name:"string"},required:!1},subtitleComponent:{description:"",type:{name:"element"},required:!1},txData:{description:"",type:{name:"object"},required:!0}}};const confirm_subtitle=ConfirmSubTitle},"./ui/components/app/confirm-subtitle/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{H:()=>_confirm_subtitle__WEBPACK_IMPORTED_MODULE_0__.Z});var _confirm_subtitle__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./ui/components/app/confirm-subtitle/confirm-subtitle.js")},"./ui/components/app/confirm-title/confirm-title.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__),_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./shared/constants/transaction.ts"),_helpers_constants_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/helpers/constants/common.ts"),_component_library__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/components/component-library/index.js"),_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/helpers/constants/design-system.ts"),_user_preferenced_currency_display__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/components/app/user-preferenced-currency-display/index.js");const ConfirmTitle=({title,hexTransactionAmount,txData})=>{var _txData$txParams;const isContractInteraction=txData.type===_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_1__.iU.contractInteraction;return(isContractInteraction||txData.type===_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_1__.iU.deployContract)&&"0x0"===(null===(_txData$txParams=txData.txParams)||void 0===_txData$txParams?void 0:_txData$txParams.value)?null:title?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_3__.xv,{as:title&&title.length<10?"h1":"h3",ellipsis:!0,title,variant:title&&title.length<10?_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_4__.rK.displayMd:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_4__.rK.headingMd,fontWeight:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_4__.m5.NORMAL},title):react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_3__.xv,{as:"h3",ellipsis:!0,fontWeight:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_4__.m5.NORMAL,variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_4__.rK.headingMd},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_user_preferenced_currency_display__WEBPACK_IMPORTED_MODULE_5__.Z,{ethLogoHeight:24,hideLabel:!isContractInteraction,showCurrencySuffix:isContractInteraction,showEthLogo:!0,type:_helpers_constants_common__WEBPACK_IMPORTED_MODULE_2__._8,value:hexTransactionAmount}))};ConfirmTitle.propTypes={txData:prop_types__WEBPACK_IMPORTED_MODULE_6___default().object.isRequired,title:prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default().string,prop_types__WEBPACK_IMPORTED_MODULE_6___default().number]),hexTransactionAmount:prop_types__WEBPACK_IMPORTED_MODULE_6___default().string},ConfirmTitle.__docgenInfo={description:"",methods:[],displayName:"ConfirmTitle",props:{txData:{description:"",type:{name:"object"},required:!0},title:{description:"",type:{name:"union",value:[{name:"string"},{name:"number"}]},required:!1},hexTransactionAmount:{description:"",type:{name:"string"},required:!1}}};const __WEBPACK_DEFAULT_EXPORT__=ConfirmTitle},"./ui/components/app/confirm-title/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{_:()=>_confirm_title__WEBPACK_IMPORTED_MODULE_0__.Z});var _confirm_title__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./ui/components/app/confirm-title/confirm-title.js")},"./ui/components/app/network-account-balance-header/network-account-balance-header.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>NetworkAccountBalanceHeader});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_8__),_ui_icon_with_fallback__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/components/ui/icon-with-fallback/index.js"),_ui_identicon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/components/ui/identicon/index.js"),_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/helpers/constants/design-system.ts"),_ui_box_box__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/components/ui/box/box.js"),_contexts_i18n__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/contexts/i18n.js"),_shared_constants_network__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./shared/constants/network.ts"),_component_library__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./ui/components/component-library/index.js");function NetworkAccountBalanceHeader({networkName,accountName,accountBalance,tokenName,accountAddress,chainId}){const t=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_contexts_i18n__WEBPACK_IMPORTED_MODULE_5__.OO),networkIcon=_shared_constants_network__WEBPACK_IMPORTED_MODULE_6__.uM[chainId],networkIconWrapperClass=networkIcon?"network-account-balance-header__network-account__ident-icon-ethereum":"network-account-balance-header__network-account__ident-icon-ethereum--gray";return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box_box__WEBPACK_IMPORTED_MODULE_4__.ZP,{display:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.sS.Flex,flexDirection:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.Qb.Row,padding:4,className:"network-account-balance-header",alignItems:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.g1.center,justifyContent:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.E0.spaceBetween},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box_box__WEBPACK_IMPORTED_MODULE_4__.ZP,{display:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.sS.Flex,flexDirection:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.Qb.Row,alignItems:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.g1.center,gap:2},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box_box__WEBPACK_IMPORTED_MODULE_4__.ZP,{display:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.sS.Flex,flexDirection:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.Qb.Row,alignItems:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.g1.center},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_identicon__WEBPACK_IMPORTED_MODULE_2__.Z,{address:accountAddress,diameter:32}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_icon_with_fallback__WEBPACK_IMPORTED_MODULE_1__.Z,{name:networkName,size:16,icon:networkIcon,wrapperClassName:networkIconWrapperClass})),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box_box__WEBPACK_IMPORTED_MODULE_4__.ZP,{display:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.sS.Flex,alignItems:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.g1.flexStart,flexDirection:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.Qb.Column},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_7__.xv,{variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.rK.bodySm,as:"h6",color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.d9.textAlternative},networkName),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_7__.xv,{variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.rK.bodySm,as:"h6",color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.d9.textDefault,fontWeight:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.U9.Bold},accountName))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box_box__WEBPACK_IMPORTED_MODULE_4__.ZP,{display:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.sS.Flex,alignItems:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.g1.flexEnd,flexDirection:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.Qb.Column},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_7__.xv,{variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.rK.bodySm,as:"h6",color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.d9.textAlternative},t("balance")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_7__.xv,{variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.rK.bodySm,as:"h6",color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.d9.textDefault,fontWeight:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.U9.Bold,align:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_3__.PH.End},accountBalance," ",tokenName)))}NetworkAccountBalanceHeader.propTypes={networkName:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,accountName:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,accountBalance:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,tokenName:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,accountAddress:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string,chainId:prop_types__WEBPACK_IMPORTED_MODULE_8___default().string},NetworkAccountBalanceHeader.__docgenInfo={description:"",methods:[],displayName:"NetworkAccountBalanceHeader",props:{networkName:{description:"",type:{name:"string"},required:!1},accountName:{description:"",type:{name:"string"},required:!1},accountBalance:{description:"",type:{name:"string"},required:!1},tokenName:{description:"",type:{name:"string"},required:!1},accountAddress:{description:"",type:{name:"string"},required:!1},chainId:{description:"",type:{name:"string"},required:!1}}}},"./ui/components/app/set-approval-for-all-warning/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>set_approval_for_all_warning});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),popover=__webpack_require__("./ui/components/ui/popover/index.js"),box=__webpack_require__("./ui/components/ui/box/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),identicon=__webpack_require__("./ui/components/ui/identicon/index.js"),util=__webpack_require__("./ui/helpers/utils/util.js"),component_library=__webpack_require__("./ui/components/component-library/index.js");const SetApproveForAllWarning=({collectionName,senderAddress,name,total,isERC721,onSubmit,onCancel})=>{const t=(0,useI18nContext.C)(),footer=react.createElement(box.ZP,{display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN,justifyContent:design_system.E0.SPACE_BETWEEN,className:"set-approval-for-all-warning__footer",gap:4},react.createElement(component_library.zx,{className:"set-approval-for-all-warning__footer__approve-button",variant:component_library.RN.PRIMARY,danger:!0,onClick:onSubmit},t("approveButtonText")),react.createElement(component_library.zx,{className:"set-approval-for-all-warning__footer__cancel-button",variant:component_library.RN.SECONDARY,onClick:onCancel},t("reject")));return react.createElement(popover.Z,{className:"set-approval-for-all-warning__content",footer},react.createElement(box.ZP,{display:design_system.bA.FLEX,flexDirection:design_system.uM.ROW,padding:4,className:"set-approval-for-all-warning__content__header"},react.createElement(component_library.JO,{name:component_library.uH.Danger,className:"set-approval-for-all-warning__content__header__warning-icon"}),react.createElement(component_library.xv,{variant:design_system.rK.headingSm,as:"h4"},t("yourNFTmayBeAtRisk"))),react.createElement(box.ZP,{display:design_system.bA.FLEX,padding:4,justifyContent:design_system.E0.spaceBetween,className:"set-approval-for-all-warning__content__account"},react.createElement(box.ZP,{display:design_system.bA.FLEX},react.createElement(identicon.Z,{address:senderAddress,diameter:32}),react.createElement(component_library.xv,{variant:design_system.rK.bodyMd,as:"h5",marginLeft:2,className:"set-approval-for-all-warning__content__account-name"},react.createElement("strong",null,name)," ",` (${(0,util.$Q)(senderAddress)})`)),isERC721&&total&&react.createElement(component_library.xv,null,`${t("total")}: ${total}`)),react.createElement(component_library.xv,{margin:4,marginTop:4,marginBottom:4,variant:design_system.rK.bodySm,as:"h6"},t("nftWarningContent",[react.createElement("strong",{key:"non_custodial_bold"},t("nftWarningContentBold",[collectionName||""])),react.createElement("strong",{key:"non_custodial_grey"},t("nftWarningContentGrey"))])))};SetApproveForAllWarning.propTypes={collectionName:prop_types_default().string,senderAddress:prop_types_default().string,name:prop_types_default().string,total:prop_types_default().string,isERC721:prop_types_default().bool,onSubmit:prop_types_default().func,onCancel:prop_types_default().func},SetApproveForAllWarning.__docgenInfo={description:"",methods:[],displayName:"SetApproveForAllWarning",props:{collectionName:{description:"NFT collection name that is being approved",type:{name:"string"},required:!1},senderAddress:{description:"Address of a current user that is approving collection",type:{name:"string"},required:!1},name:{description:"Name of a current user that is approving collection",type:{name:"string"},required:!1},total:{description:"Total number of items that are being approved",type:{name:"string"},required:!1},isERC721:{description:"Is asset standard ERC721",type:{name:"bool"},required:!1},onSubmit:{description:"Function that approves collection",type:{name:"func"},required:!1},onCancel:{description:"Function that rejects collection",type:{name:"func"},required:!1}}};const set_approval_for_all_warning=SetApproveForAllWarning},"./ui/components/app/transaction-alerts/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>transaction_alerts});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-redux/es/index.js"),gas=__webpack_require__("./shared/constants/gas.ts"),selectors=__webpack_require__("./ui/selectors/index.js"),gasFee=__webpack_require__("./ui/contexts/gasFee.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),component_library=__webpack_require__("./ui/components/component-library/index.js"),simulation_error_message=__webpack_require__("./ui/components/ui/simulation-error-message/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),zendesk_url=__webpack_require__("./ui/helpers/constants/zendesk-url.js");const TransactionAlerts=({userAcknowledgedGasMissing,setUserAcknowledgedGasMissing})=>{const{estimateUsed,hasSimulationError,supportsEIP1559,isNetworkBusy}=(0,gasFee.YJ)(),pendingTransactions=(0,es.v9)(selectors.MBu),t=(0,useI18nContext.C)();return react.createElement("div",{className:"transaction-alerts"},supportsEIP1559&&hasSimulationError&&react.createElement(simulation_error_message.Z,{userAcknowledgedGasMissing,setUserAcknowledgedGasMissing}),supportsEIP1559&&(null==pendingTransactions?void 0:pendingTransactions.length)>0&&react.createElement(component_library.wB,{severity:design_system.t3.WARNING},react.createElement(component_library.xv,{as:"p"},react.createElement("strong",null,1===(null==pendingTransactions?void 0:pendingTransactions.length)?t("pendingTransactionSingle",[null==pendingTransactions?void 0:pendingTransactions.length]):t("pendingTransactionMultiple",[null==pendingTransactions?void 0:pendingTransactions.length]))," ",t("pendingTransactionInfo"),t("learnCancelSpeeedup",[react.createElement(component_library.ZP,{key:"cancelSpeedUpInfo",href:zendesk_url.Z.SPEEDUP_CANCEL,rel:"noopener noreferrer",target:"_blank"},t("cancelSpeedUp"))]))),estimateUsed===gas.o7.low&&react.createElement(component_library.wB,{"data-testid":"low-gas-fee-alert",severity:design_system.t3.WARNING},t("lowPriorityMessage")),supportsEIP1559&&isNetworkBusy?react.createElement(component_library.wB,{severity:design_system.t3.WARNING},t("networkIsBusy")):null)};TransactionAlerts.propTypes={userAcknowledgedGasMissing:prop_types_default().bool,setUserAcknowledgedGasMissing:prop_types_default().func},TransactionAlerts.__docgenInfo={description:"",methods:[],displayName:"TransactionAlerts",props:{userAcknowledgedGasMissing:{description:"",type:{name:"bool"},required:!1},setUserAcknowledgedGasMissing:{description:"",type:{name:"func"},required:!1}}};const transaction_alerts=TransactionAlerts},"./ui/components/app/transaction-detail/transaction-detail.component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>TransactionDetail});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__),_contexts_gasFee__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/contexts/gasFee.js"),_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/hooks/useI18nContext.js"),_ui_box__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/components/ui/box/index.js"),_edit_gas_fee_button__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/components/app/edit-gas-fee-button/index.js"),_transaction_detail_item_transaction_detail_item_component__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/components/app/transaction-detail-item/transaction-detail-item.component.js");function TransactionDetail({rows=[],onEdit,userAcknowledgedGasMissing=!1,disableEditGasFeeButton=!1}){const t=(0,_hooks_useI18nContext__WEBPACK_IMPORTED_MODULE_2__.C)(),{supportsEIP1559}=(0,_contexts_gasFee__WEBPACK_IMPORTED_MODULE_1__.YJ)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"transaction-detail"},supportsEIP1559&&!disableEditGasFeeButton&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_box__WEBPACK_IMPORTED_MODULE_3__.ZP,{display:"flex",justifyContent:"flex-end",paddingTop:5},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_edit_gas_fee_button__WEBPACK_IMPORTED_MODULE_4__.Z,{userAcknowledgedGasMissing})),!supportsEIP1559&&onEdit&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"transaction-detail-edit"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:onEdit},t("edit"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"transaction-detail-rows"},rows))}TransactionDetail.propTypes={rows:prop_types__WEBPACK_IMPORTED_MODULE_6___default().arrayOf(_transaction_detail_item_transaction_detail_item_component__WEBPACK_IMPORTED_MODULE_5__.Z).isRequired,onEdit:prop_types__WEBPACK_IMPORTED_MODULE_6___default().func,userAcknowledgedGasMissing:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool,disableEditGasFeeButton:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool},TransactionDetail.__docgenInfo={description:"",methods:[],displayName:"TransactionDetail",props:{rows:{defaultValue:{value:"[]",computed:!1},description:"Show item content for transaction detail. Array of TransactionDetailItem components",type:{name:"arrayOf",value:{name:"custom",raw:"TransactionDetailItem"}},required:!1},userAcknowledgedGasMissing:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},disableEditGasFeeButton:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},onEdit:{description:"onClick handler for the Edit link",type:{name:"func"},required:!1}}}},"./ui/components/institutional/note-to-trader/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>note_to_trader});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.js"),box=__webpack_require__("./ui/components/ui/box/index.js");const NoteToTrader=props=>{const{placeholder,maxLength,onChange,noteText,labelText}=props;return react.createElement(box.ZP,{className:"confirm-page-container-content__data"},react.createElement(box.ZP,{display:design_system.bA.FLEX,flexDirection:design_system.uM.ROW},react.createElement(box.ZP,{className:"note-header",display:design_system.bA.FLEX,justifyContent:design_system.E0.spaceBetween},react.createElement(component_library.__,{htmlFor:"transaction-note"},labelText),react.createElement(component_library.xv,{className:"note-header__counter"},noteText.length,"/",maxLength)),react.createElement(box.ZP,{display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN,className:"note-field"},react.createElement("textarea",{id:"transaction-note","data-testid":"transaction-note",onChange:({target:{value}})=>onChange(value),autoFocus:!0,maxLength,placeholder,value:noteText}))))};NoteToTrader.propTypes={placeholder:prop_types_default().string,maxLength:prop_types_default().string,onChange:prop_types_default().func,noteText:prop_types_default().string,labelText:prop_types_default().string},NoteToTrader.__docgenInfo={description:"",methods:[],displayName:"NoteToTrader",props:{placeholder:{description:"",type:{name:"string"},required:!1},maxLength:{description:"",type:{name:"string"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},noteText:{description:"",type:{name:"string"},required:!1},labelText:{description:"",type:{name:"string"},required:!1}}};const note_to_trader=NoteToTrader},"./ui/components/ui/icon/preloader/preloader-icon.component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);const Preloader=({className,size})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("preloader__icon",className),width:size,height:size,viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M8 13.7143C4.84409 13.7143 2.28571 11.1559 2.28571 8C2.28571 4.84409 4.84409 2.28571 8 2.28571C11.1559 2.28571 13.7143 4.84409 13.7143 8C13.7143 11.1559 11.1559 13.7143 8 13.7143ZM8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16Z",fill:"#C1DAEC"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("mask",{id:"mask0","mask-type":"alpha",maskUnits:"userSpaceOnUse",x:"0",y:"0",width:"16",height:"16"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M8 13.7143C4.84409 13.7143 2.28571 11.1559 2.28571 8C2.28571 4.84409 4.84409 2.28571 8 2.28571C11.1559 2.28571 13.7143 4.84409 13.7143 8C13.7143 11.1559 11.1559 13.7143 8 13.7143ZM8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16Z",fill:"#037DD6"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{mask:"url(#mask0)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M6.85718 17.9999V11.4285V8.28564H-4.85711V17.9999H6.85718Z",fill:"#037DD6"})));Preloader.defaultProps={className:void 0},Preloader.propTypes={className:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,size:prop_types__WEBPACK_IMPORTED_MODULE_2___default().number.isRequired},Preloader.__docgenInfo={description:"",methods:[],displayName:"Preloader",props:{className:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"string"},required:!1},size:{description:"",type:{name:"number"},required:!0}}};const __WEBPACK_DEFAULT_EXPORT__=Preloader},"./ui/components/ui/tabs/snaps/dropdown-tab/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>dropdown_tab});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),box=__webpack_require__("./ui/components/ui/box/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.js");const DropdownTab=({activeClassName,className,"data-testid":dataTestId,isActive,onClick,onChange,tabIndex,options,selectedOption})=>{var _options$find;const[isOpen,setIsOpen]=(0,react.useState)(!1),dropdownRef=(0,react.useRef)(null),selectOption=(0,react.useCallback)(((event,option)=>{event.stopPropagation(),onChange(option.value),setIsOpen(!1)}),[onChange]),selectedOptionName=null===(_options$find=options.find((option=>option.value===selectedOption)))||void 0===_options$find?void 0:_options$find.name;return(0,react.useEffect)((()=>{function handleClickOutside(event){dropdownRef.current&&!dropdownRef.current.contains(event.target)&&isOpen&&setIsOpen(!1)}return document.addEventListener("mousedown",handleClickOutside),()=>{document.removeEventListener("mousedown",handleClickOutside)}}),[dropdownRef,isOpen]),react.createElement(box.ZP,{as:"li",className:classnames_default()("tab",className,{"tab--active":isActive,[activeClassName]:activeClassName&&isActive}),"data-testid":dataTestId,onClick:event=>{event.preventDefault(),setIsOpen(!0),onClick(tabIndex)},dataTestId,flexDirection:design_system.uM.ROW,flexWrap:design_system.D1.NO_WRAP,height:design_system.D8.FULL,style:{cursor:"pointer",overflow:"hidden"},title:selectedOptionName},react.createElement(box.ZP,{alignItems:design_system.g1.center,padding:2},react.createElement(component_library.xv,{variant:design_system.rK.inherit,style:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},selectedOptionName),react.createElement(component_library.JO,{marginLeft:2,name:component_library.uH.ArrowDown,size:component_library.Jh.Sm})),isOpen&&react.createElement(box.ZP,{backgroundColor:design_system.lP.backgroundDefault,borderStyle:design_system.N4.solid,borderColor:design_system.kf.borderDefault,borderRadius:design_system.cM.SM,paddingLeft:2,paddingRight:2,display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN,flexWrap:design_system.D1.NO_WRAP,style:{position:"absolute",maxWidth:"170px"},ref:dropdownRef},options.map(((option,i)=>react.createElement(component_library.xv,{key:i,marginTop:1,marginBottom:1,variant:design_system.rK.bodySm,onClick:event=>selectOption(event,option),style:{cursor:"pointer",textTransform:"none",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},option.name)))))};DropdownTab.propTypes={activeClassName:prop_types_default().string,className:prop_types_default().string,"data-testid":prop_types_default().string,isActive:prop_types_default().bool,options:prop_types_default().arrayOf(prop_types_default().exact({name:prop_types_default().string,value:prop_types_default().string.isRequired})).isRequired,selectedOption:prop_types_default().string,onChange:prop_types_default().func,onClick:prop_types_default().func,tabIndex:prop_types_default().number},DropdownTab.defaultProps={activeClassName:void 0,className:void 0,onChange:void 0,onClick:void 0,selectedOption:void 0},DropdownTab.__docgenInfo={description:"",methods:[],displayName:"DropdownTab",props:{activeClassName:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"string"},required:!1},className:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"string"},required:!1},onChange:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"func"},required:!1},onClick:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"func"},required:!1},selectedOption:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"string"},required:!1},"data-testid":{description:"",type:{name:"string"},required:!1},isActive:{description:"",type:{name:"bool"},required:!1},options:{description:"",type:{name:"arrayOf",value:{name:"exact",value:{name:{name:"string",required:!1},value:{name:"string",required:!0}}}},required:!0},tabIndex:{description:"",type:{name:"number"},required:!1}}};const dropdown_tab=DropdownTab},"./ui/helpers/utils/metrics.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function getMethodName(camelCase){return camelCase&&"string"==typeof camelCase?camelCase.replace(/([a-z])([A-Z])/gu,"$1 $2").replace(/([A-Z])([a-z])/gu," $1$2").replace(/ +/gu," "):""}function formatAccountType(accountType){return"default"===accountType?"metamask":accountType}__webpack_require__.d(__webpack_exports__,{V:()=>formatAccountType,a:()=>getMethodName})},"./ui/hooks/experiences/useRamps.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_redux__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-redux/es/index.js"),_shared_constants_network__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./shared/constants/network.ts"),_selectors__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/selectors/index.js");const portfolioUrl=__webpack_require__("./node_modules/process/browser.js").env.PORTFOLIO_URL,__WEBPACK_DEFAULT_EXPORT__=()=>{const chainId=(0,react_redux__WEBPACK_IMPORTED_MODULE_1__.v9)(_selectors__WEBPACK_IMPORTED_MODULE_3__.BVZ),metaMetricsId=(0,react_redux__WEBPACK_IMPORTED_MODULE_1__.v9)(_selectors__WEBPACK_IMPORTED_MODULE_3__.AQy),getBuyURI=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((_chainId=>{if(_chainId===_shared_constants_network__WEBPACK_IMPORTED_MODULE_2__.vo.SEPOLIA)return"https://faucet.sepolia.dev/";{const params=new URLSearchParams;return params.set("metamaskEntry","ext_buy_button"),metaMetricsId&&params.set("metametricsId",metaMetricsId),`${portfolioUrl}/buy?${params.toString()}`}}),[]);return{openBuyCryptoInPdapp:(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{const buyUrl=getBuyURI(chainId);__webpack_require__.g.platform.openTab({url:buyUrl})}),[]),getBuyURI}}},"./ui/hooks/useTransactionFunctionType.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{K:()=>useTransactionFunctionType});var react_redux__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react-redux/es/index.js"),_shared_constants_app__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./shared/constants/app.ts"),_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./shared/constants/transaction.ts"),_selectors__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/selectors/index.js"),_ducks_metamask_metamask__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/ducks/metamask/metamask.js"),_helpers_utils_transactions_util__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/helpers/utils/transactions.util.js"),_helpers_utils_metrics__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./ui/helpers/utils/metrics.js"),_useI18nContext__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./ui/hooks/useI18nContext.js");const useTransactionFunctionType=(txData={})=>{const t=(0,_useI18nContext__WEBPACK_IMPORTED_MODULE_6__.C)(),nativeCurrency=(0,react_redux__WEBPACK_IMPORTED_MODULE_0__.v9)(_ducks_metamask_metamask__WEBPACK_IMPORTED_MODULE_4__.JK),{txParams}=txData,methodData=(0,react_redux__WEBPACK_IMPORTED_MODULE_0__.v9)((state=>(0,_selectors__WEBPACK_IMPORTED_MODULE_3__.LO0)(state,null==txParams?void 0:txParams.data)||{}));if(!txParams)return{};const isTokenApproval=txData.type===_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_2__.iU.tokenMethodSetApprovalForAll||txData.type===_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_2__.iU.tokenMethodApprove,isContractInteraction=txData.type===_shared_constants_transaction__WEBPACK_IMPORTED_MODULE_2__.iU.contractInteraction;let functionType=(isTokenApproval||isContractInteraction)&&txData.origin!==_shared_constants_app__WEBPACK_IMPORTED_MODULE_1__.jr?(0,_helpers_utils_metrics__WEBPACK_IMPORTED_MODULE_7__.a)(null==methodData?void 0:methodData.name):void 0;return functionType||(functionType=txData.type?(0,_helpers_utils_transactions_util__WEBPACK_IMPORTED_MODULE_5__.rm)(t,txData.type,nativeCurrency):t("contractInteraction")),{functionType}}},"?8158":()=>{},"?9581":()=>{},"?1f20":()=>{},"?8d1f":()=>{},"?6403":()=>{},"?a3fc":()=>{},"?c28c":()=>{},"?e8c7":()=>{},"?4908":()=>{},"?e2bf":()=>{},"?5316":()=>{},"?7874":()=>{},"?ed1b":()=>{},"?d17e":()=>{},"?7338":()=>{},"?521a":()=>{},"?eeee":()=>{},"?4961":()=>{}}]);