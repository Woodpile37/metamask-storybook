"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[8871],{"./ui/components/institutional/custody-confirm-link-modal/custody-confirm-link-modal.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>custody_confirm_link_modal_stories});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),store=__webpack_require__("./ui/store/store.ts"),test_data=__webpack_require__("./.storybook/test-data.js"),metametrics=__webpack_require__("./ui/contexts/metametrics.js"),constants_metametrics=__webpack_require__("./shared/constants/metametrics.ts"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),with_modal_props=__webpack_require__("./ui/helpers/higher-order-components/with-modal-props/index.js"),hexstring_utils=__webpack_require__("./shared/modules/hexstring-utils.ts"),institution_background=__webpack_require__("./ui/store/institutional/institution-background.ts"),actions=__webpack_require__("./ui/store/actions.ts"),selectors=__webpack_require__("./ui/selectors/index.js"),institutional_selectors=__webpack_require__("./ui/selectors/institutional/selectors.js"),box=__webpack_require__("./ui/components/ui/box/box.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.js");const CustodyConfirmLink=()=>{const t=(0,useI18nContext.C)(),dispatch=(0,es.I0)(),mmiActions=(0,institution_background.I6)(),trackEvent=(0,react.useContext)(metametrics.Wd),mmiAccounts=(0,es.v9)(selectors.j_I),address=(0,es.v9)(institutional_selectors.rE),custodyAccountDetails=(0,es.v9)(institutional_selectors.q9),{custodians}=(0,es.v9)(institutional_selectors.Hg),{custodianName}=custodyAccountDetails[(0,hexstring_utils.QG)(address)]||{},{displayName,iconUrl}=custodians.find((item=>item.name===custodianName||{})),{url,ethereum,text,action}=(0,es.v9)((state=>state.appState.modal.modalState.props.link||{}));return react.createElement(box.ZP,{display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN},iconUrl?react.createElement(box.ZP,{display:design_system.bA.FLEX,alignItems:design_system.g1.center,justifyContent:design_system.E0.center,paddingTop:5},react.createElement("img",{className:"custody-confirm-link__img",src:"/images/logo/mmi-logo.svg",alt:"MMI logo"}),">",react.createElement("img",{className:"custody-confirm-link__img",src:iconUrl,alt:custodianName})):react.createElement(box.ZP,{display:design_system.bA.FLEX,alignItems:design_system.g1.center,justifyContent:design_system.E0.center,paddingTop:5},react.createElement("span",null,custodianName)),react.createElement(component_library.xv,{as:"h4",paddingTop:4,variant:design_system.rK.headingLg,textAlign:design_system.PH.Center,fontWeight:design_system.U9.bold},t("awaitingApproval")),react.createElement(component_library.xv,{as:"p",paddingTop:4,paddingRight:5,paddingLeft:5,paddingBottom:10,textAlign:design_system.PH.Center,color:design_system.d9.textDefault,variant:design_system.rK.bodySm,className:"custody-confirm-link__description"},text||t("custodyDeeplinkDescription",[displayName])),react.createElement(component_library.zx,{variant:component_library.RN.PRIMARY,className:"custody-confirm-link__btn",onClick:()=>{if(url&&__webpack_require__.g.platform.openTab({url}),ethereum){const ethAccount=Object.keys(mmiAccounts).find((account=>ethereum.accounts.includes(account.toLowerCase())));ethAccount&&dispatch((0,actions.l30)(ethAccount.toLowerCase()))}trackEvent({category:constants_metametrics.ci.MMI,event:constants_metametrics.AW.UserClickedDeepLink}),dispatch(mmiActions.setWaitForConfirmDeepLinkDialog(!1)),dispatch((0,actions.VGc)())}},action||(action?t("openCustodianApp",[displayName]):t("close"))))};CustodyConfirmLink.__docgenInfo={description:"",methods:[],displayName:"CustodyConfirmLink"};const institutional_custody_confirm_link_modal=(0,with_modal_props.Z)(CustodyConfirmLink);var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3;const customData={...test_data.default,appState:{...test_data.default.appState,modal:{modalState:{props:{link:{url:"test-url",ethereum:{accounts:[{}]},text:"",action:""}}}}},metamask:{...test_data.default.metamask,mmiConfiguration:{custodians:[{refreshTokenUrl:"https://saturn-custody.dev.metamask-institutional.io/oauth/token",name:"saturn-dev",displayName:"Saturn Custody",enabled:!0,mmiApiUrl:"https://api.dev.metamask-institutional.io/v1",websocketApiUrl:"wss://websocket.dev.metamask-institutional.io/v1/ws",apiBaseUrl:"https://saturn-custody.dev.metamask-institutional.io/eth",iconUrl:"https://saturn-custody-ui.dev.metamask-institutional.io/saturn.svg",isNoteToTraderSupported:!0}]},custodyAccountDetails:{"0xAddress":{address:"0xAddress",details:"details",custodyType:"testCustody - Saturn",custodianName:"saturn-dev"}},providerConfig:{type:"test"},selectedAddress:"0xAddress"}},custody_confirm_link_modal_stories_store=(0,store.Z)(customData),custody_confirm_link_modal_stories={title:"Components/Institutional/CustodyConfirmLink",decorators:[story=>react.createElement(es.zt,{store:custody_confirm_link_modal_stories_store},story())],component:institutional_custody_confirm_link_modal,args:{}},DefaultStory=args=>react.createElement(institutional_custody_confirm_link_modal,args);DefaultStory.storyName="CustodyConfirmLink",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => <CustodyConfirmLink {...args} />",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}},"./ui/helpers/higher-order-components/with-modal-props/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>withModalProps});var es=__webpack_require__("./node_modules/react-redux/es/index.js"),actions=__webpack_require__("./ui/store/actions.ts");const mapStateToProps=state=>{const{appState}=state,{props:modalProps}=appState.modal.modalState;return{...modalProps}},mapDispatchToProps=dispatch=>({hideModal:()=>dispatch((0,actions.VGc)())});function withModalProps(Component){return(0,es.$j)(mapStateToProps,mapDispatchToProps)(Component)}},"./ui/selectors/institutional/selectors.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{G:()=>getCustodianIconForAddress,GZ:()=>getIsNoteToTraderSupported,Hg:()=>getMMIConfiguration,L8:()=>getTransactionStatusMap,LL:()=>getMmiPortfolioEnabled,kl:()=>getMmiPortfolioUrl,q9:()=>getCustodyAccountDetails,rE:()=>getMMIAddressFromModalOrAddress,vG:()=>getInteractiveReplacementToken,xL:()=>getIsCustodianSupportedChain});var ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/ethereumjs-util/dist.browser/index.js"),_selectors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/selectors/selectors.js"),_ducks_metamask_metamask__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/ducks/metamask/metamask.js"),_shared_modules_conversion_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./shared/modules/conversion.utils.ts");function getTransactionStatusMap(state){return state.metamask.custodyStatusMaps}function getCustodyAccountDetails(state){return state.metamask.custodyAccountDetails}function getMmiPortfolioEnabled(state){var _state$metamask$mmiCo,_state$metamask$mmiCo2;return null===(_state$metamask$mmiCo=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo||null===(_state$metamask$mmiCo2=_state$metamask$mmiCo.portfolio)||void 0===_state$metamask$mmiCo2?void 0:_state$metamask$mmiCo2.enabled}function getMmiPortfolioUrl(state){var _state$metamask$mmiCo3,_state$metamask$mmiCo4;return null===(_state$metamask$mmiCo3=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo3||null===(_state$metamask$mmiCo4=_state$metamask$mmiCo3.portfolio)||void 0===_state$metamask$mmiCo4?void 0:_state$metamask$mmiCo4.url}function getCustodianIconForAddress(state,address){var _state$metamask$custo;let custodianIcon;const checksummedAddress=address&&(0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(address);if(checksummedAddress&&null!==(_state$metamask$custo=state.metamask.custodyAccountDetails)&&void 0!==_state$metamask$custo&&_state$metamask$custo[checksummedAddress]){var _state$metamask$mmiCo6,_state$metamask$mmiCo7,_state$metamask$mmiCo8;const{custodianName}=state.metamask.custodyAccountDetails[checksummedAddress];custodianIcon=null===(_state$metamask$mmiCo6=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo6||null===(_state$metamask$mmiCo7=_state$metamask$mmiCo6.custodians)||void 0===_state$metamask$mmiCo7||null===(_state$metamask$mmiCo8=_state$metamask$mmiCo7.find((custodian=>custodian.name===custodianName)))||void 0===_state$metamask$mmiCo8?void 0:_state$metamask$mmiCo8.iconUrl}return custodianIcon}function getIsCustodianSupportedChain(state){const selectedIdentity=(0,_selectors__WEBPACK_IMPORTED_MODULE_1__.Sv)(state),accountType=(0,_selectors__WEBPACK_IMPORTED_MODULE_1__.lx)(state),providerConfig=(0,_ducks_metamask_metamask__WEBPACK_IMPORTED_MODULE_2__.Vu)(state),supportedChains="custody"===accountType?function getCustodyAccountSupportedChains(state,address){return state.metamask.custodianSupportedChains?state.metamask.custodianSupportedChains[(0,ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(address)]:[]}(state,selectedIdentity.address):null;return null==supportedChains||!supportedChains.supportedChains||supportedChains.supportedChains.includes((0,_shared_modules_conversion_utils__WEBPACK_IMPORTED_MODULE_3__.Z8)(providerConfig.chainId))}function getMMIAddressFromModalOrAddress(state){return state.appState.modal.modalState.props.address||state.metamask.selectedAddress}function getMMIConfiguration(state){return state.metamask.mmiConfiguration||[]}function getInteractiveReplacementToken(state){return state.metamask.interactiveReplacementToken||{}}function getIsNoteToTraderSupported(state,fromChecksumHexAddress){var _state$metamask$custo2;let isNoteToTraderSupported=!1;if(null!==(_state$metamask$custo2=state.metamask.custodyAccountDetails)&&void 0!==_state$metamask$custo2&&_state$metamask$custo2[fromChecksumHexAddress]){var _state$metamask$mmiCo9,_state$metamask$mmiCo10,_state$metamask$mmiCo11;const{custodianName}=state.metamask.custodyAccountDetails[fromChecksumHexAddress];isNoteToTraderSupported=null===(_state$metamask$mmiCo9=state.metamask.mmiConfiguration)||void 0===_state$metamask$mmiCo9||null===(_state$metamask$mmiCo10=_state$metamask$mmiCo9.custodians)||void 0===_state$metamask$mmiCo10||null===(_state$metamask$mmiCo11=_state$metamask$mmiCo10.find((custodian=>custodian.name===custodianName)))||void 0===_state$metamask$mmiCo11?void 0:_state$metamask$mmiCo11.isNoteToTraderSupported}return isNoteToTraderSupported}},"./ui/store/institutional/institution-background.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I6:()=>mmiActionsFactory,Lx:()=>setTypedMessageInProgress,Y0:()=>showInteractiveReplacementTokenBanner});var loglevel__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_0__),_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/store/actions.ts"),_action_queue__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/store/action-queue/index.ts"),_shared_modules_error__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./shared/modules/error.ts");function showInteractiveReplacementTokenBanner({url,oldRefreshToken}){return async dispatch=>{try{await(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.lf)("showInteractiveReplacementTokenBanner",[url,oldRefreshToken])}catch(err){if(err)throw dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.eaQ)(err.message)),new Error(err.message)}}}function setTypedMessageInProgress(msgId){return async dispatch=>{dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.Nbs)());try{await(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.lf)("setTypedMessageInProgress",[msgId])}catch(error){loglevel__WEBPACK_IMPORTED_MODULE_0___default().error(error),dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.eaQ)(error.message))}finally{await(0,_actions__WEBPACK_IMPORTED_MODULE_1__.Skm)(dispatch),dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.awJ)())}}}function mmiActionsFactory(){function createAsyncAction(name,params,useForceUpdateMetamaskState,loadingText){return loglevel__WEBPACK_IMPORTED_MODULE_0___default().debug(`background.${name}`),async dispatch=>{let result;loadingText&&dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.Nbs)(loadingText));try{result=await(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.lf)(name,[...params])}catch(error){throw dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.eaQ)(error)),(0,_shared_modules_error__WEBPACK_IMPORTED_MODULE_3__.M)(error)?new Error(error.message):error}return loadingText&&dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.awJ)()),useForceUpdateMetamaskState&&await(0,_actions__WEBPACK_IMPORTED_MODULE_1__.Skm)(dispatch),result}}function createAction(name,payload){return new Promise(((resolve,reject)=>{(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.BW)(name,[payload],(error=>{error?reject(error):resolve()}))}))}return{connectCustodyAddresses:(custodianType,custodianName,newAccounts)=>createAsyncAction("connectCustodyAddresses",[custodianType,custodianName,newAccounts],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm,"Looking for your custodian account..."),getCustodianAccounts:(token,apiUrl,custody,getNonImportedAccounts)=>createAsyncAction("getCustodianAccounts",[token,apiUrl,custody,getNonImportedAccounts],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm,"Getting custodian accounts..."),getCustodianAccountsByAddress:(jwt,apiUrl,address,custody)=>createAsyncAction("getCustodianAccountsByAddress",[jwt,apiUrl,address,custody],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm,"Getting custodian accounts..."),getCustodianTransactionDeepLink:(address,txId)=>createAsyncAction("getCustodianTransactionDeepLink",[address,txId],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianConfirmDeepLink:txId=>createAsyncAction("getCustodianConfirmDeepLink",[txId],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianSignMessageDeepLink:(from,custodyTxId)=>createAsyncAction("getCustodianSignMessageDeepLink",[from,custodyTxId],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianToken:custody=>createAsyncAction("getCustodianToken",[custody],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianJWTList:custody=>createAsyncAction("getCustodianJWTList",[custody],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),setWaitForConfirmDeepLinkDialog:waitForConfirmDeepLinkDialog=>createAction("setWaitForConfirmDeepLinkDialog",waitForConfirmDeepLinkDialog),setComplianceAuthData:(clientId,projectId)=>createAsyncAction("setComplianceAuthData",[{clientId,projectId}]),deleteComplianceAuthData:()=>createAsyncAction("deleteComplianceAuthData",[]),generateComplianceReport:address=>createAction("generateComplianceReport",address),getComplianceHistoricalReportsByAddress:(address,projectId)=>createAsyncAction("getComplianceHistoricalReportsByAddress",[address,projectId]),syncReportsInProgress:(address,historicalReports)=>createAction("syncReportsInProgress",{address,historicalReports}),removeConnectInstitutionalFeature:(origin,projectId)=>createAction("removeConnectInstitutionalFeature",{origin,projectId}),removeAddTokenConnectRequest:({origin,apiUrl,token})=>createAction("removeAddTokenConnectRequest",{origin,apiUrl,token}),setCustodianConnectRequest:({token,apiUrl,custodianType,custodianName})=>createAsyncAction("setCustodianConnectRequest",[{token,apiUrl,custodianType,custodianName}]),getCustodianConnectRequest:()=>createAsyncAction("getCustodianConnectRequest",[]),getMmiConfiguration:()=>createAsyncAction("getMmiConfiguration",[]),getAllCustodianAccountsWithToken:(custodyType,token)=>createAsyncAction("getAllCustodianAccountsWithToken",[custodyType,token]),setCustodianNewRefreshToken:(address,oldAuthDetails,oldApiUrl,newAuthDetails,newApiUrl)=>createAsyncAction("setCustodianNewRefreshToken",[address,oldAuthDetails,oldApiUrl,newAuthDetails,newApiUrl])}}}}]);