/*! For license information please see components-component-library-modal-focus-modal-focus-stories.256f6145.iframe.bundle.js.LICENSE.txt */
"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[6313],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$4:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4,Xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Xz,h_:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_,oG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./ui/components/component-library/modal-focus/modal-focus.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoFocus:()=>AutoFocus,Children:()=>Children,DefaultStory:()=>DefaultStory,FinalFocusRef:()=>FinalFocusRef,InitialFocusRef:()=>InitialFocusRef,RestoreFocus:()=>RestoreFocus,__namedExportsOrder:()=>__namedExportsOrder,default:()=>modal_focus_stories});var react=__webpack_require__("./node_modules/react/index.js"),box=__webpack_require__("./ui/components/ui/box/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),modal_focus=__webpack_require__("./ui/components/component-library/modal-focus/modal-focus.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",a:"a",h3:"h3",pre:"pre"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h1,{id:"modalfocus",children:"ModalFocus"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalFocus"})," traps the focus within the modal. This greatly improves the experience for screen readers and keyboard only users."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalfocus--default-story"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFocus"})," is built with ",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/theKashey/react-focus-lock",target:"_blank",rel:"nofollow noopener noreferrer",children:"react-focus-lock"})," and accepts all of the props from that library."]}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:modal_focus.l}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"children",children:"Children"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"children"})," prop to render the component to lock focus to"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalfocus--children"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import React from 'react';\nimport {\n  BorderColor,\n  DISPLAY,\n  FLEX_DIRECTION,\n} from '../../../helpers/constants/design-system';\n\nimport Box from '../../ui/box';\n\nimport { ModalFocus } from '../../component-library';\n\nconst [open, setOpen] = React.useState(false);\n\n<button onClick={() => setOpen(true)} marginBottom={4}>\n  Open\n</button>;\n\n{\n  open && (\n    <ModalFocus>\n      <Box\n        padding={4}\n        borderColor={BorderColor.borderDefault}\n        display={DISPLAY.FLEX}\n        flexDirection={FLEX_DIRECTION.COLUMN}\n        gap={4}\n      >\n        <p>Modal focus children</p>\n        <input />\n        <p>\n          Use the keyboard to try tabbing around you will notice that the focus\n          is locked to the content within modal focus\n        </p>\n        <button onClick={() => setOpen(false)}>Close</button>\n      </Box>\n    </ModalFocus>\n  );\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"initial-focus-ref",children:"Initial Focus Ref"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"initialFocusRef"})," to pass the ",(0,jsx_runtime.jsx)(_components.code,{children:"ref"})," of the element to receive focus initially"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalfocus--initial-focus-ref"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import React from 'react';\nimport {\n  BorderColor,\n  DISPLAY,\n  FLEX_DIRECTION,\n} from '../../../helpers/constants/design-system';\n\nimport Box from '../../ui/box';\n\nimport { ModalFocus } from '../../component-library';\n\nconst [open, setOpen] = React.useState(false);\nconst ref = React.useRef < HTMLButtonElement > null;\n\n<button onClick={() => setOpen(true)} marginBottom={4}>\n  Open\n</button>;\n\n{\n  open && (\n    <ModalFocus initialFocusRef={ref}>\n      <Box\n        padding={4}\n        borderColor={BorderColor.borderDefault}\n        display={DISPLAY.FLEX}\n        flexDirection={FLEX_DIRECTION.COLUMN}\n        gap={4}\n      >\n        <input />\n        <p>Initial focus is on the close button</p>\n        <button ref={ref} onClick={() => setOpen(false)}>\n          Close\n        </button>\n      </Box>\n    </ModalFocus>\n  );\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"final-focus-ref",children:"Final Focus Ref"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"finalFocusRef"})," to pass the ",(0,jsx_runtime.jsx)(_components.code,{children:"ref"})," of the element to return focus to when ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFocus"})," unmounts"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalfocus--final-focus-ref"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import React from 'react';\nimport {\n  BorderColor,\n  DISPLAY,\n  FLEX_DIRECTION,\n} from '../../../helpers/constants/design-system';\n\nimport Box from '../../ui/box';\n\nimport { ModalFocus } from '../../component-library';\n\nconst [open, setOpen] = React.useState(false);\nconst ref = React.useRef < HTMLInputElement > null;\n\n<button onClick={() => setOpen(true)} marginBottom={4}>\n  Open\n</button>;\n<input placeholder=\"Focus will return here\" ref={ref} />;\n\n{\n  open && (\n    <ModalFocus finalFocusRef={ref}>\n      <Box\n        padding={4}\n        borderColor={BorderColor.borderDefault}\n        display={DISPLAY.FLEX}\n        flexDirection={FLEX_DIRECTION.COLUMN}\n        gap={4}\n      >\n        <p>Focus will be returned to the input once closed</p>\n        <button onClick={() => setOpen(false)}>Close</button>\n      </Box>\n    </ModalFocus>\n  );\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"restore-focus",children:"Restore Focus"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"restoreFocus"})," to restore focus to the element that triggered the ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFocus"})," once it unmounts"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalfocus--restore-focus"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import React from 'react';\nimport {\n  BorderColor,\n  DISPLAY,\n  FLEX_DIRECTION,\n} from '../../../helpers/constants/design-system';\n\nimport Box from '../../ui/box';\n\nimport { ModalFocus } from '../../component-library';\n\nconst [open, setOpen] = React.useState(false);\n\n<button onClick={() => setOpen(true)} marginBottom={4}>\n  Open\n</button>;\n{\n  open && (\n    <ModalFocus restoreFocus>\n      <Box\n        padding={4}\n        borderColor={BorderColor.borderDefault}\n        display={DISPLAY.FLEX}\n        flexDirection={FLEX_DIRECTION.COLUMN}\n        gap={4}\n      >\n        <p>Focus will be restored to the open button once closed</p>\n        <button onClick={() => setOpen(false)}>Close</button>\n      </Box>\n    </ModalFocus>\n  );\n}\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"auto-focus",children:"Auto Focus"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"autoFocus"})," to auto focus to the first focusable element within the ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalFocus"})," once it mounts"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Defaults to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalfocus--auto-focus"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import React from 'react';\nimport {\n  BorderColor,\n  DISPLAY,\n  FLEX_DIRECTION,\n} from '../../../helpers/constants/design-system';\n\nimport Box from '../../ui/box';\n\nimport { ModalFocus } from '../../component-library';\n\nconst [open, setOpen] = React.useState(false);\n\n<button onClick={() => setOpen(true)} marginBottom={4}>\n  Open\n</button>;\n{\n  open && (\n    <ModalFocus autoFocus={false}>\n      <Box\n        padding={4}\n        borderColor={BorderColor.borderDefault}\n        display={DISPLAY.FLEX}\n        flexDirection={FLEX_DIRECTION.COLUMN}\n        gap={4}\n      >\n        <p>auto focus set to false</p>\n        <button onClick={() => setOpen(false)}>Close</button>\n      </Box>\n    </ModalFocus>\n  );\n}\n"})})]})}const README=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3,_Children$parameters,_Children$parameters2,_Children$parameters3,_InitialFocusRef$para,_InitialFocusRef$para2,_InitialFocusRef$para3,_FinalFocusRef$parame,_FinalFocusRef$parame2,_FinalFocusRef$parame3,_RestoreFocus$paramet,_RestoreFocus$paramet2,_RestoreFocus$paramet3,_AutoFocus$parameters,_AutoFocus$parameters2,_AutoFocus$parameters3;function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const modal_focus_stories={title:"Components/ComponentLibrary/ModalFocus",component:modal_focus.l,parameters:{docs:{page:README}},args:{children:react.createElement(react.Fragment,null,react.createElement("p",null,"Modal focus children"),react.createElement("input",null),react.createElement("p",null,"Use the keyboard to try tabbing around you will notice that the focus is locked to the content within modal focus"))}},Template=args=>{const[open,setOpen]=react.useState(!1);return react.createElement(react.Fragment,null,react.createElement("button",{onClick:()=>setOpen(!0)},"Open"),open&&react.createElement(modal_focus.l,args,react.createElement(box.ZP,{padding:4,borderColor:design_system.kf.borderDefault,display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN,gap:4},args.children,react.createElement("button",{onClick:()=>setOpen(!1)},"Close"))))},DefaultStory=Template.bind({});DefaultStory.storyName="Default";const Children=Template.bind({});Children.args={children:react.createElement(react.Fragment,null,react.createElement("p",null,"Modal focus children"))};const InitialFocusRef=args=>{const ref=react.useRef(null),[open,setOpen]=react.useState(!1);return react.createElement(react.Fragment,null,react.createElement("button",{onClick:()=>setOpen(!0)},"Open"),open&&react.createElement(modal_focus.l,_extends({},args,{initialFocusRef:ref}),react.createElement(box.ZP,{padding:4,borderColor:design_system.kf.borderDefault,display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN,gap:4},react.createElement("input",null),args.children,react.createElement("button",{ref,onClick:()=>setOpen(!1)},"Close"))))};InitialFocusRef.args={children:react.createElement("p",null,"Initial focus is on the close button")};const FinalFocusRef=args=>{const ref=react.useRef(null),[open,setOpen]=react.useState(!1);return react.createElement(react.Fragment,null,react.createElement(box.ZP,{display:design_system.bA.FLEX,gap:4},react.createElement("button",{onClick:()=>setOpen(!0)},"Open"),react.createElement("input",{placeholder:"Focus will return here",ref})),open&&react.createElement(modal_focus.l,_extends({},args,{finalFocusRef:ref}),react.createElement(box.ZP,{padding:4,borderColor:design_system.kf.borderDefault,display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN,gap:4},react.createElement("p",null,"Focus will be returned to the input once closed"),react.createElement("button",{onClick:()=>setOpen(!1)},"Close"))))},RestoreFocus=args=>{const ref=react.useRef(null),[open,setOpen]=react.useState(!1);return react.createElement(react.Fragment,null,react.createElement("button",{ref,onClick:()=>setOpen(!open)},"Open"),open&&react.createElement(modal_focus.l,_extends({},args,{restoreFocus:!0}),react.createElement(box.ZP,{padding:4,borderColor:design_system.kf.borderDefault,display:design_system.bA.FLEX,flexDirection:design_system.uM.COLUMN,gap:4},react.createElement("p",null,"Focus will be restored to the open button once closed"),react.createElement("button",{onClick:()=>setOpen(!1)},"Close"))))},AutoFocus=Template.bind({});AutoFocus.args={autoFocus:!1,children:react.createElement("p",null,"auto focus set to false")},DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => {\n  const [open, setOpen] = React.useState(false);\n  return <>\n      <button onClick={() => setOpen(true)}>Open</button>\n      {open && <ModalFocus {...args}>\n          <Box padding={4} borderColor={BorderColor.borderDefault} display={DISPLAY.FLEX} flexDirection={FLEX_DIRECTION.COLUMN} gap={4}>\n            {args.children}\n            <button onClick={() => setOpen(false)}>Close</button>\n          </Box>\n        </ModalFocus>}\n    </>;\n}",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}},Children.parameters={...Children.parameters,docs:{...null===(_Children$parameters=Children.parameters)||void 0===_Children$parameters?void 0:_Children$parameters.docs,source:{originalSource:"args => {\n  const [open, setOpen] = React.useState(false);\n  return <>\n      <button onClick={() => setOpen(true)}>Open</button>\n      {open && <ModalFocus {...args}>\n          <Box padding={4} borderColor={BorderColor.borderDefault} display={DISPLAY.FLEX} flexDirection={FLEX_DIRECTION.COLUMN} gap={4}>\n            {args.children}\n            <button onClick={() => setOpen(false)}>Close</button>\n          </Box>\n        </ModalFocus>}\n    </>;\n}",...null===(_Children$parameters2=Children.parameters)||void 0===_Children$parameters2||null===(_Children$parameters3=_Children$parameters2.docs)||void 0===_Children$parameters3?void 0:_Children$parameters3.source}}},InitialFocusRef.parameters={...InitialFocusRef.parameters,docs:{...null===(_InitialFocusRef$para=InitialFocusRef.parameters)||void 0===_InitialFocusRef$para?void 0:_InitialFocusRef$para.docs,source:{originalSource:"args => {\n  const ref = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n  return <>\n      <button onClick={() => setOpen(true)}>Open</button>\n      {open && <ModalFocus {...args} initialFocusRef={ref}>\n          <Box padding={4} borderColor={BorderColor.borderDefault} display={DISPLAY.FLEX} flexDirection={FLEX_DIRECTION.COLUMN} gap={4}>\n            <input />\n            {args.children}\n            <button ref={ref} onClick={() => setOpen(false)}>\n              Close\n            </button>\n          </Box>\n        </ModalFocus>}\n    </>;\n}",...null===(_InitialFocusRef$para2=InitialFocusRef.parameters)||void 0===_InitialFocusRef$para2||null===(_InitialFocusRef$para3=_InitialFocusRef$para2.docs)||void 0===_InitialFocusRef$para3?void 0:_InitialFocusRef$para3.source}}},FinalFocusRef.parameters={...FinalFocusRef.parameters,docs:{...null===(_FinalFocusRef$parame=FinalFocusRef.parameters)||void 0===_FinalFocusRef$parame?void 0:_FinalFocusRef$parame.docs,source:{originalSource:'args => {\n  const ref = React.useRef<HTMLInputElement>(null);\n  const [open, setOpen] = React.useState(false);\n  return <>\n      <Box display={DISPLAY.FLEX} gap={4}>\n        <button onClick={() => setOpen(true)}>Open</button>\n        <input placeholder="Focus will return here" ref={ref} />\n      </Box>\n      {open && <ModalFocus {...args} finalFocusRef={ref}>\n          <Box padding={4} borderColor={BorderColor.borderDefault} display={DISPLAY.FLEX} flexDirection={FLEX_DIRECTION.COLUMN} gap={4}>\n            <p>Focus will be returned to the input once closed</p>\n            <button onClick={() => setOpen(false)}>Close</button>\n          </Box>\n        </ModalFocus>}\n    </>;\n}',...null===(_FinalFocusRef$parame2=FinalFocusRef.parameters)||void 0===_FinalFocusRef$parame2||null===(_FinalFocusRef$parame3=_FinalFocusRef$parame2.docs)||void 0===_FinalFocusRef$parame3?void 0:_FinalFocusRef$parame3.source}}},RestoreFocus.parameters={...RestoreFocus.parameters,docs:{...null===(_RestoreFocus$paramet=RestoreFocus.parameters)||void 0===_RestoreFocus$paramet?void 0:_RestoreFocus$paramet.docs,source:{originalSource:"args => {\n  const ref = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n  return <>\n      <button ref={ref} onClick={() => setOpen(!open)}>\n        Open\n      </button>\n      {open && <ModalFocus {...args} restoreFocus>\n          <Box padding={4} borderColor={BorderColor.borderDefault} display={DISPLAY.FLEX} flexDirection={FLEX_DIRECTION.COLUMN} gap={4}>\n            <p>Focus will be restored to the open button once closed</p>\n            <button onClick={() => setOpen(false)}>Close</button>\n          </Box>\n        </ModalFocus>}\n    </>;\n}",...null===(_RestoreFocus$paramet2=RestoreFocus.parameters)||void 0===_RestoreFocus$paramet2||null===(_RestoreFocus$paramet3=_RestoreFocus$paramet2.docs)||void 0===_RestoreFocus$paramet3?void 0:_RestoreFocus$paramet3.source}}},AutoFocus.parameters={...AutoFocus.parameters,docs:{...null===(_AutoFocus$parameters=AutoFocus.parameters)||void 0===_AutoFocus$parameters?void 0:_AutoFocus$parameters.docs,source:{originalSource:"args => {\n  const [open, setOpen] = React.useState(false);\n  return <>\n      <button onClick={() => setOpen(true)}>Open</button>\n      {open && <ModalFocus {...args}>\n          <Box padding={4} borderColor={BorderColor.borderDefault} display={DISPLAY.FLEX} flexDirection={FLEX_DIRECTION.COLUMN} gap={4}>\n            {args.children}\n            <button onClick={() => setOpen(false)}>Close</button>\n          </Box>\n        </ModalFocus>}\n    </>;\n}",...null===(_AutoFocus$parameters2=AutoFocus.parameters)||void 0===_AutoFocus$parameters2||null===(_AutoFocus$parameters3=_AutoFocus$parameters2.docs)||void 0===_AutoFocus$parameters3?void 0:_AutoFocus$parameters3.source}}};const __namedExportsOrder=["DefaultStory","Children","InitialFocusRef","FinalFocusRef","RestoreFocus","AutoFocus"];try{InitialFocusRef.displayName="InitialFocusRef",InitialFocusRef.__docgenInfo={description:"",displayName:"InitialFocusRef",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/components/component-library/modal-focus/modal-focus.stories.tsx#InitialFocusRef"]={docgenInfo:InitialFocusRef.__docgenInfo,name:"InitialFocusRef",path:"ui/components/component-library/modal-focus/modal-focus.stories.tsx#InitialFocusRef"})}catch(__react_docgen_typescript_loader_error){}try{FinalFocusRef.displayName="FinalFocusRef",FinalFocusRef.__docgenInfo={description:"",displayName:"FinalFocusRef",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/components/component-library/modal-focus/modal-focus.stories.tsx#FinalFocusRef"]={docgenInfo:FinalFocusRef.__docgenInfo,name:"FinalFocusRef",path:"ui/components/component-library/modal-focus/modal-focus.stories.tsx#FinalFocusRef"})}catch(__react_docgen_typescript_loader_error){}try{RestoreFocus.displayName="RestoreFocus",RestoreFocus.__docgenInfo={description:"",displayName:"RestoreFocus",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["ui/components/component-library/modal-focus/modal-focus.stories.tsx#RestoreFocus"]={docgenInfo:RestoreFocus.__docgenInfo,name:"RestoreFocus",path:"ui/components/component-library/modal-focus/modal-focus.stories.tsx#RestoreFocus"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);