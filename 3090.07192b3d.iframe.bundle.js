"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[3090],{"./node_modules/@ethersproject/hdnode/lib.esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m$:()=>HDNode,cD:()=>defaultPath,JJ:()=>entropyToMnemonic,ny:()=>getAccountPath,xh:()=>isValidMnemonic,oy:()=>mnemonicToEntropy,OI:()=>mnemonicToSeed});var lib_esm=__webpack_require__("./node_modules/@ethersproject/basex/lib.esm/index.js"),bytes_lib_esm=__webpack_require__("./node_modules/@ethersproject/bytes/lib.esm/index.js"),bignumber=__webpack_require__("./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),utf8=__webpack_require__("./node_modules/@ethersproject/strings/lib.esm/utf8.js"),pbkdf2=__webpack_require__("./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js"),properties_lib_esm=__webpack_require__("./node_modules/@ethersproject/properties/lib.esm/index.js"),signing_key_lib_esm=__webpack_require__("./node_modules/@ethersproject/signing-key/lib.esm/index.js"),sha2=__webpack_require__("./node_modules/@ethersproject/sha2/lib.esm/sha2.js"),types=__webpack_require__("./node_modules/@ethersproject/sha2/lib.esm/types.js"),transactions_lib_esm=__webpack_require__("./node_modules/@ethersproject/transactions/lib.esm/index.js"),wordlists=__webpack_require__("./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js");const logger=new(__webpack_require__("./node_modules/@ethersproject/logger/lib.esm/index.js").Yd)("hdnode/5.7.0"),N=bignumber.O$.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),MasterSecret=(0,utf8.Y0)("Bitcoin seed"),HardenedBit=2147483648;function getUpperMask(bits){return(1<<bits)-1<<8-bits}function bytes32(value){return(0,bytes_lib_esm.$m)((0,bytes_lib_esm.Dv)(value),32)}function base58check(data){return lib_esm.eU.encode((0,bytes_lib_esm.zo)([data,(0,bytes_lib_esm.p3)((0,sha2.JQ)((0,sha2.JQ)(data)),0,4)]))}function getWordlist(wordlist){if(null==wordlist)return wordlists.E.en;if("string"==typeof wordlist){const words=wordlists.E[wordlist];return null==words&&logger.throwArgumentError("unknown locale","wordlist",wordlist),words}return wordlist}const _constructorGuard={},defaultPath="m/44'/60'/0'/0/0";class HDNode{constructor(constructorGuard,privateKey,publicKey,parentFingerprint,chainCode,index,depth,mnemonicOrPath){if(constructorGuard!==_constructorGuard)throw new Error("HDNode constructor cannot be called directly");if(privateKey){const signingKey=new signing_key_lib_esm.Et(privateKey);(0,properties_lib_esm.zG)(this,"privateKey",signingKey.privateKey),(0,properties_lib_esm.zG)(this,"publicKey",signingKey.compressedPublicKey)}else(0,properties_lib_esm.zG)(this,"privateKey",null),(0,properties_lib_esm.zG)(this,"publicKey",(0,bytes_lib_esm.Dv)(publicKey));(0,properties_lib_esm.zG)(this,"parentFingerprint",parentFingerprint),(0,properties_lib_esm.zG)(this,"fingerprint",(0,bytes_lib_esm.p3)((0,sha2.bP)((0,sha2.JQ)(this.publicKey)),0,4)),(0,properties_lib_esm.zG)(this,"address",(0,transactions_lib_esm.db)(this.publicKey)),(0,properties_lib_esm.zG)(this,"chainCode",chainCode),(0,properties_lib_esm.zG)(this,"index",index),(0,properties_lib_esm.zG)(this,"depth",depth),null==mnemonicOrPath?((0,properties_lib_esm.zG)(this,"mnemonic",null),(0,properties_lib_esm.zG)(this,"path",null)):"string"==typeof mnemonicOrPath?((0,properties_lib_esm.zG)(this,"mnemonic",null),(0,properties_lib_esm.zG)(this,"path",mnemonicOrPath)):((0,properties_lib_esm.zG)(this,"mnemonic",mnemonicOrPath),(0,properties_lib_esm.zG)(this,"path",mnemonicOrPath.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return base58check((0,bytes_lib_esm.zo)([null!=this.privateKey?"0x0488ADE4":"0x0488B21E",(0,bytes_lib_esm.Dv)(this.depth),this.parentFingerprint,(0,bytes_lib_esm.$m)((0,bytes_lib_esm.Dv)(this.index),4),this.chainCode,null!=this.privateKey?(0,bytes_lib_esm.zo)(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new HDNode(_constructorGuard,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(index){if(index>4294967295)throw new Error("invalid index - "+String(index));let path=this.path;path&&(path+="/"+(index&~HardenedBit));const data=new Uint8Array(37);if(index&HardenedBit){if(!this.privateKey)throw new Error("cannot derive child of neutered node");data.set((0,bytes_lib_esm.lE)(this.privateKey),1),path&&(path+="'")}else data.set((0,bytes_lib_esm.lE)(this.publicKey));for(let i=24;i>=0;i-=8)data[33+(i>>3)]=index>>24-i&255;const I=(0,bytes_lib_esm.lE)((0,sha2.Gy)(types.p.sha512,this.chainCode,data)),IL=I.slice(0,32),IR=I.slice(32);let ki=null,Ki=null;if(this.privateKey)ki=bytes32(bignumber.O$.from(IL).add(this.privateKey).mod(N));else{Ki=new signing_key_lib_esm.Et((0,bytes_lib_esm.Dv)(IL))._addPoint(this.publicKey)}let mnemonicOrPath=path;const srcMnemonic=this.mnemonic;return srcMnemonic&&(mnemonicOrPath=Object.freeze({phrase:srcMnemonic.phrase,path,locale:srcMnemonic.locale||"en"})),new HDNode(_constructorGuard,ki,Ki,this.fingerprint,bytes32(IR),index,this.depth+1,mnemonicOrPath)}derivePath(path){const components=path.split("/");if(0===components.length||"m"===components[0]&&0!==this.depth)throw new Error("invalid path - "+path);"m"===components[0]&&components.shift();let result=this;for(let i=0;i<components.length;i++){const component=components[i];if(component.match(/^[0-9]+'$/)){const index=parseInt(component.substring(0,component.length-1));if(index>=HardenedBit)throw new Error("invalid path index - "+component);result=result._derive(HardenedBit+index)}else{if(!component.match(/^[0-9]+$/))throw new Error("invalid path component - "+component);{const index=parseInt(component);if(index>=HardenedBit)throw new Error("invalid path index - "+component);result=result._derive(index)}}}return result}static _fromSeed(seed,mnemonic){const seedArray=(0,bytes_lib_esm.lE)(seed);if(seedArray.length<16||seedArray.length>64)throw new Error("invalid seed");const I=(0,bytes_lib_esm.lE)((0,sha2.Gy)(types.p.sha512,MasterSecret,seedArray));return new HDNode(_constructorGuard,bytes32(I.slice(0,32)),null,"0x00000000",bytes32(I.slice(32)),0,0,mnemonic)}static fromMnemonic(mnemonic,password,wordlist){return mnemonic=entropyToMnemonic(mnemonicToEntropy(mnemonic,wordlist=getWordlist(wordlist)),wordlist),HDNode._fromSeed(mnemonicToSeed(mnemonic,password),{phrase:mnemonic,path:"m",locale:wordlist.locale})}static fromSeed(seed){return HDNode._fromSeed(seed,null)}static fromExtendedKey(extendedKey){const bytes=lib_esm.eU.decode(extendedKey);82===bytes.length&&base58check(bytes.slice(0,78))===extendedKey||logger.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const depth=bytes[4],parentFingerprint=(0,bytes_lib_esm.Dv)(bytes.slice(5,9)),index=parseInt((0,bytes_lib_esm.Dv)(bytes.slice(9,13)).substring(2),16),chainCode=(0,bytes_lib_esm.Dv)(bytes.slice(13,45)),key=bytes.slice(45,78);switch((0,bytes_lib_esm.Dv)(bytes.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new HDNode(_constructorGuard,null,(0,bytes_lib_esm.Dv)(key),parentFingerprint,chainCode,index,depth,null);case"0x0488ade4":case"0x04358394 ":if(0!==key[0])break;return new HDNode(_constructorGuard,(0,bytes_lib_esm.Dv)(key.slice(1)),null,parentFingerprint,chainCode,index,depth,null)}return logger.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function mnemonicToSeed(mnemonic,password){password||(password="");const salt=(0,utf8.Y0)("mnemonic"+password,utf8.Uj.NFKD);return(0,pbkdf2.n)((0,utf8.Y0)(mnemonic,utf8.Uj.NFKD),salt,2048,64,"sha512")}function mnemonicToEntropy(mnemonic,wordlist){wordlist=getWordlist(wordlist),logger.checkNormalize();const words=wordlist.split(mnemonic);if(words.length%3!=0)throw new Error("invalid mnemonic");const entropy=(0,bytes_lib_esm.lE)(new Uint8Array(Math.ceil(11*words.length/8)));let offset=0;for(let i=0;i<words.length;i++){let index=wordlist.getWordIndex(words[i].normalize("NFKD"));if(-1===index)throw new Error("invalid mnemonic");for(let bit=0;bit<11;bit++)index&1<<10-bit&&(entropy[offset>>3]|=1<<7-offset%8),offset++}const entropyBits=32*words.length/3,checksumMask=getUpperMask(words.length/3);if(((0,bytes_lib_esm.lE)((0,sha2.JQ)(entropy.slice(0,entropyBits/8)))[0]&checksumMask)!==(entropy[entropy.length-1]&checksumMask))throw new Error("invalid checksum");return(0,bytes_lib_esm.Dv)(entropy.slice(0,entropyBits/8))}function entropyToMnemonic(entropy,wordlist){if(wordlist=getWordlist(wordlist),(entropy=(0,bytes_lib_esm.lE)(entropy)).length%4!=0||entropy.length<16||entropy.length>32)throw new Error("invalid entropy");const indices=[0];let remainingBits=11;for(let i=0;i<entropy.length;i++)remainingBits>8?(indices[indices.length-1]<<=8,indices[indices.length-1]|=entropy[i],remainingBits-=8):(indices[indices.length-1]<<=remainingBits,indices[indices.length-1]|=entropy[i]>>8-remainingBits,indices.push(entropy[i]&(1<<8-remainingBits)-1),remainingBits+=3);const checksumBits=entropy.length/4,checksum=(0,bytes_lib_esm.lE)((0,sha2.JQ)(entropy))[0]&getUpperMask(checksumBits);return indices[indices.length-1]<<=checksumBits,indices[indices.length-1]|=checksum>>8-checksumBits,wordlist.join(indices.map((index=>wordlist.getWord(index))))}function isValidMnemonic(mnemonic,wordlist){try{return mnemonicToEntropy(mnemonic,wordlist),!0}catch(error){}return!1}function getAccountPath(index){return("number"!=typeof index||index<0||index>=HardenedBit||index%1)&&logger.throwArgumentError("invalid account index","index",index),`m/44'/60'/${index}'/0/0`}},"./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{n:()=>pbkdf2});var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@ethersproject/bytes/lib.esm/index.js"),_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@ethersproject/sha2/lib.esm/sha2.js");function pbkdf2(password,salt,iterations,keylen,hashAlgorithm){let hLen;password=(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.lE)(password),salt=(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.lE)(salt);let l=1;const DK=new Uint8Array(keylen),block1=new Uint8Array(salt.length+4);let r,T;block1.set(salt);for(let i=1;i<=l;i++){block1[salt.length]=i>>24&255,block1[salt.length+1]=i>>16&255,block1[salt.length+2]=i>>8&255,block1[salt.length+3]=255&i;let U=(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.lE)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_1__.Gy)(hashAlgorithm,password,block1));hLen||(hLen=U.length,T=new Uint8Array(hLen),l=Math.ceil(keylen/hLen),r=keylen-(l-1)*hLen),T.set(U);for(let j=1;j<iterations;j++){U=(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.lE)((0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_1__.Gy)(hashAlgorithm,password,U));for(let k=0;k<hLen;k++)T[k]^=U[k]}const destPos=(i-1)*hLen,len=i===l?r:hLen;DK.set((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.lE)(T).slice(0,len),destPos)}return(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__.Dv)(DK)}},"./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>Wordlist});var id=__webpack_require__("./node_modules/@ethersproject/hash/lib.esm/id.js"),lib_esm=__webpack_require__("./node_modules/@ethersproject/properties/lib.esm/index.js"),logger_lib_esm=__webpack_require__("./node_modules/@ethersproject/logger/lib.esm/index.js");const logger=new logger_lib_esm.Yd("wordlists/5.7.0");class Wordlist{constructor(locale){logger.checkAbstract(new.target,Wordlist),(0,lib_esm.zG)(this,"locale",locale)}split(mnemonic){return mnemonic.toLowerCase().split(/ +/g)}join(words){return words.join(" ")}static check(wordlist){const words=[];for(let i=0;i<2048;i++){const word=wordlist.getWord(i);if(i!==wordlist.getWordIndex(word))return"0x";words.push(word)}return(0,id.id)(words.join("\n")+"\n")}static register(lang,name){name||(name=lang.locale)}}},"./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>wordlists});var wordlist=__webpack_require__("./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js");let lang_en_wordlist=null;function loadWords(lang){if(null==lang_en_wordlist&&(lang_en_wordlist="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"!==wordlist.D.check(lang)))throw lang_en_wordlist=null,new Error("BIP39 Wordlist for en (English) FAILED")}class LangEn extends wordlist.D{constructor(){super("en")}getWord(index){return loadWords(this),lang_en_wordlist[index]}getWordIndex(word){return loadWords(this),lang_en_wordlist.indexOf(word)}}const langEn=new LangEn;wordlist.D.register(langEn);const wordlists={en:langEn}}}]);