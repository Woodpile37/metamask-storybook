"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[2401],{"./ui/pages/settings/networks-tab/networks-list/network-list.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NetworksListComponent:()=>NetworksListComponent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _NetworksListComponen,_NetworksListComponen2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_test_data__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./.storybook/test-data.js"),_networks_list__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/pages/settings/networks-tab/networks-list/networks-list.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Pages/Settings/NetworksTab/NetworksList",argTypes:{networkDefaultedToProvider:{control:"boolean"},networkIsSelected:{control:"boolean"},networksToRender:{control:"array"}},args:{networkDefaultedToProvider:!1,networkIsSelected:!1,networksToRender:_storybook_test_data__WEBPACK_IMPORTED_MODULE_1__.p}},NetworksListComponent=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_networks_list__WEBPACK_IMPORTED_MODULE_2__.Z,args);NetworksListComponent.parameters={...NetworksListComponent.parameters,docs:{...null===(_NetworksListComponen=NetworksListComponent.parameters)||void 0===_NetworksListComponen?void 0:_NetworksListComponen.docs,source:{originalSource:"args => {\n  return <NetworksList {...args} />;\n}",...null===(_NetworksListComponen2=NetworksListComponent.parameters)||void 0===_NetworksListComponen2||null===(_NetworksListComponen2=_NetworksListComponen2.docs)||void 0===_NetworksListComponen2?void 0:_NetworksListComponen2.source}}};const __namedExportsOrder=["NetworksListComponent"];NetworksListComponent.__docgenInfo={description:"",methods:[],displayName:"NetworksListComponent"}},"./ui/pages/settings/networks-tab/networks-list/networks-list.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>networks_list});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),custom_content_search=__webpack_require__("./ui/pages/settings/networks-tab/custom-content-search/custom-content-search.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),networks_list_item=__webpack_require__("./ui/pages/settings/networks-tab/networks-list-item/index.js"),component_library=__webpack_require__("./ui/components/component-library/index.ts");const NetworksList=({networkIsSelected,networksToRender,networkDefaultedToProvider,selectedNetworkConfigurationId})=>{const t=(0,useI18nContext.C)(),[searchedNetworks,setSearchedNetworks]=(0,react.useState)([]),[searchQuery,setSearchQuery]=(0,react.useState)(""),searchedNetworksToRender=0===searchedNetworks.length&&""===searchQuery?networksToRender:searchedNetworks,searchedNetworksToRenderThatAreNotTestNetworks=searchedNetworksToRender.filter((network=>!network.isATestNetwork)),searchedNetworksToRenderThatAreTestNetworks=searchedNetworksToRender.filter((network=>network.isATestNetwork));return react.createElement("div",{className:classnames_default()("networks-tab__networks-list",{"networks-tab__networks-list--selection":networkIsSelected&&!networkDefaultedToProvider})},react.createElement(custom_content_search.Z,{onSearch:({searchQuery:newSearchQuery="",results:newResults=[]})=>{setSearchedNetworks(newResults),setSearchQuery(newSearchQuery)},error:0===searchedNetworksToRender.length?t("settingsSearchMatchingNotFound"):null,networksList:networksToRender,searchQueryInput:searchQuery}),searchedNetworksToRenderThatAreNotTestNetworks.map(((network,_)=>react.createElement(networks_list_item.Z,{key:`settings-network-list:${network.rpcUrl}`,network,networkIsSelected,selectedNetworkConfigurationId,setSearchQuery,setSearchedNetworks}))),""===searchQuery&&react.createElement(component_library.xv,{variant:design_system.rK.bodySm,as:"h6",marginTop:4,color:design_system.Il.textAlternative,className:"networks-tab__networks-list__label"},t("testNetworks")),searchedNetworksToRenderThatAreTestNetworks.map(((network,_)=>react.createElement(networks_list_item.Z,{key:`settings-network-list:${network.rpcUrl}`,network,networkIsSelected,selectedNetworkConfigurationId,setSearchQuery,setSearchedNetworks}))))};NetworksList.propTypes={networkDefaultedToProvider:prop_types_default().bool,networkIsSelected:prop_types_default().bool,networksToRender:prop_types_default().arrayOf(prop_types_default().object).isRequired,selectedNetworkConfigurationId:prop_types_default().string},NetworksList.__docgenInfo={description:"",methods:[],displayName:"NetworksList",props:{networkDefaultedToProvider:{description:"",type:{name:"bool"},required:!1},networkIsSelected:{description:"",type:{name:"bool"},required:!1},networksToRender:{description:"",type:{name:"arrayOf",value:{name:"object"}},required:!0},selectedNetworkConfigurationId:{description:"",type:{name:"string"},required:!1}}};const networks_list=NetworksList}}]);