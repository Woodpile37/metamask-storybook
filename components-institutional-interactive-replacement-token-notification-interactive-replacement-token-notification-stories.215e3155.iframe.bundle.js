"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[4524],{"./ui/components/institutional/interactive-replacement-token-notification/interactive-replacement-token-notification.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>interactive_replacement_token_notification_stories});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),store=__webpack_require__("./ui/store/store.ts"),test_data=__webpack_require__("./.storybook/test-data.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),selectors=__webpack_require__("./ui/selectors/index.js"),institutional_selectors=__webpack_require__("./ui/selectors/institutional/selectors.js"),metamask=__webpack_require__("./ui/ducks/metamask/metamask.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),institution_background=__webpack_require__("./ui/store/institutional/institution-background.ts"),institution_actions=__webpack_require__("./ui/store/institutional/institution-actions.ts");var design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.ts");const InteractiveReplacementTokenNotification=({isVisible})=>{const t=(0,useI18nContext.C)(),dispatch=(0,es.I0)(),mmiActions=(0,institution_background.I6)(),keyring=(0,es.v9)(selectors.Xm9),address=(0,es.v9)(selectors.GJg),isUnlocked=(0,es.v9)(metamask.fB),interactiveReplacementToken=(0,es.v9)(institutional_selectors.vG),[showNotification,setShowNotification]=(0,react.useState)(isVisible);return(0,react.useEffect)((()=>{(async()=>{var _tokenAccount;const hasInteractiveReplacementToken=interactiveReplacementToken&&Boolean(Object.keys(interactiveReplacementToken).length);if(!/^Custody/u.test(keyring.type)||!hasInteractiveReplacementToken)return void setShowNotification(!1);const token=await dispatch(mmiActions.getCustodianToken(address)),custodyAccountDetails=await dispatch(mmiActions.getAllCustodianAccountsWithToken(keyring.type.split(" - ")[1],token)),showNotificationValue=isUnlocked&&interactiveReplacementToken.oldRefreshToken&&custodyAccountDetails&&Boolean(Object.keys(custodyAccountDetails).length);let tokenAccount;Array.isArray(custodyAccountDetails)&&(tokenAccount=custodyAccountDetails.filter((item=>item.address.toLowerCase()===address.toLowerCase())).map((item=>{var _item$authDetails;return{token:null===(_item$authDetails=item.authDetails)||void 0===_item$authDetails?void 0:_item$authDetails.refreshToken}}))[0]);const refreshTokenAccount=await async function sha256(str){const buf=await crypto.subtle.digest("SHA-256",(new TextEncoder).encode(str));return Array.prototype.map.call(new Uint8Array(buf),(x=>`00${x.toString(16)}`.slice(-2))).join("")}((null===(_tokenAccount=tokenAccount)||void 0===_tokenAccount?void 0:_tokenAccount.token)+interactiveReplacementToken.url);setShowNotification(showNotificationValue&&refreshTokenAccount===interactiveReplacementToken.oldRefreshToken)})()}),[address,interactiveReplacementToken.oldRefreshToken,isUnlocked]),showNotification?react.createElement(component_library.xu,{width:design_system.Sw.Full,display:design_system.sS.Flex,justifyContent:design_system.E0.center,alignItems:design_system.g1.center,padding:[1,2],backgroundColor:design_system.lP.backgroundAlternative,className:"interactive-replacement-token-notification","data-testid":"interactive-replacement-token-notification"},react.createElement(component_library.JO,{name:component_library.uH.Danger,color:design_system.EY.errorDefault,size:component_library.Jh.Md}),react.createElement(component_library.xv,{variant:design_system.rK.bodySm,gap:2,color:design_system.d9.errorDefault},t("custodySessionExpired")),react.createElement(component_library.xv,{variant:design_system.rK.bodySm},react.createElement(component_library.ZP,{"data-testid":"show-modal",size:design_system.$u.inherit,marginLeft:1,onClick:()=>{dispatch((0,institution_actions.ed)())}},t("learnMoreUpperCase")))):null};InteractiveReplacementTokenNotification.__docgenInfo={description:"",methods:[],displayName:"InteractiveReplacementTokenNotification",props:{isVisible:{description:"",type:{name:"bool"},required:!1}}};const interactive_replacement_token_notification=InteractiveReplacementTokenNotification;var _DefaultStory$paramet,_DefaultStory$paramet2;InteractiveReplacementTokenNotification.propTypes={isVisible:prop_types_default().bool};const customData={...test_data.default,metamask:{...test_data.default.metamask,providerConfig:{type:"test"},selectedAddress:"0xca8f1F0245530118D0cf14a06b01Daf8f76Cf281",identities:{"0xca8f1F0245530118D0cf14a06b01Daf8f76Cf281":{address:"0xca8f1F0245530118D0cf14a06b01Daf8f76Cf281",name:"Custodian A"}},isUnlocked:!0,interactiveReplacementToken:{oldRefreshToken:"81f96a88b6cbc5f50d3864122349fa9a9755833ee82a7e3cf6f268c78aab51ab",url:"url"},preferences:{useNativeCurrencyAsPrimaryCurrency:!0},keyrings:[{type:"Custody - Saturn",accounts:["0xca8f1F0245530118D0cf14a06b01Daf8f76Cf281"]}]}},interactive_replacement_token_notification_stories_store=(0,store.Z)(customData),interactive_replacement_token_notification_stories={title:"Components/Institutional/InteractiveReplacementToken-Notification",decorators:[story=>react.createElement(es.zt,{store:interactive_replacement_token_notification_stories_store},story())],component:interactive_replacement_token_notification,args:{isVisible:!0},argTypes:{onClick:{action:"onClick"}}},DefaultStory=args=>react.createElement(interactive_replacement_token_notification,args);DefaultStory.storyName="InteractiveReplacementTokenNotification",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => <InteractiveReplacementTokenNotification {...args} />",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet2=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet2?void 0:_DefaultStory$paramet2.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}}}]);