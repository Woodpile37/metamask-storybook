"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[1245],{"./ui/components/ui/form-field/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>FormField});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),numeric_input_component=__webpack_require__("./ui/components/ui/numeric-input/numeric-input.component.js"),info_tooltip=__webpack_require__("./ui/components/ui/info-tooltip/info-tooltip.js"),component_library=__webpack_require__("./ui/components/component-library/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function FormField({dataTestId,titleText="",TitleTextCustomComponent,titleUnit="",TitleUnitCustomComponent,tooltipText="",TooltipCustomComponent,titleDetail="",titleDetailWrapperProps,titleHeadingWrapperProps,error,onChange,value=0,numeric,detailText="",autoFocus=!1,password=!1,allowDecimals=!1,disabled=!1,placeholder,warning,warningProps,passwordStrength,passwordStrengthText,id,inputProps,wrappingLabelProps,inputRef}){return react.createElement("div",{className:classnames_default()("form-field",{"form-field__row--error":error})},react.createElement(component_library.xu,_extends({as:"label"},wrappingLabelProps),react.createElement("div",{className:"form-field__heading"},react.createElement(component_library.xu,_extends({className:"form-field__heading-title",display:design_system.sS.Flex,alignItems:design_system.g1.baseline},titleHeadingWrapperProps),TitleTextCustomComponent||titleText&&react.createElement(component_library.xv,{as:"h6",variant:design_system.rK.bodySmBold,display:design_system.sS.InlineBlock},titleText),TitleUnitCustomComponent||titleUnit&&react.createElement(component_library.xv,{as:"h6",variant:design_system.rK.bodySm,color:design_system.d9.textAlternative,display:design_system.sS.InlineBlock},titleUnit),TooltipCustomComponent||tooltipText&&react.createElement(info_tooltip.Z,{position:"top",contentText:tooltipText})),titleDetail&&react.createElement(component_library.xu,_extends({className:"form-field__heading-detail",textAlign:design_system.PH.End,marginRight:2},titleDetailWrapperProps),titleDetail)),numeric?react.createElement(numeric_input_component.Z,{error,onChange,value,detailText,autoFocus,allowDecimals,disabled,dataTestId,placeholder,id,inputRef}):react.createElement("input",_extends({className:classnames_default()("form-field__input",{"form-field__input--error":error,"form-field__input--warning":warning}),onChange:e=>onChange(e.target.value),value,type:password?"password":"text",autoFocus,disabled,"data-testid":dataTestId,placeholder,id,ref:inputRef},inputProps)),error&&react.createElement(component_library.xv,{color:design_system.d9.errorDefault,variant:design_system.rK.bodySm,as:"h6",className:"form-field__error"},error),warning&&react.createElement(component_library.xv,_extends({color:design_system.d9.textAlternative,variant:design_system.rK.bodySm,as:"h6",className:"form-field__warning"},warningProps),warning),passwordStrength&&react.createElement(component_library.xv,{color:design_system.d9.textDefault,variant:design_system.rK.bodySm,as:"h6",className:"form-field__password-strength"},passwordStrength),passwordStrengthText&&react.createElement(component_library.xv,{color:design_system.d9.textAlternative,variant:design_system.rK.bodyXs,as:"h6",className:"form-field__password-strength-text"},passwordStrengthText)))}FormField.propTypes={dataTestId:prop_types_default().string,titleText:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),TitleTextCustomComponent:prop_types_default().node,titleUnit:prop_types_default().string,TitleUnitCustomComponent:prop_types_default().node,tooltipText:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),TooltipCustomComponent:prop_types_default().node,titleDetail:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),titleDetailWrapperProps:prop_types_default().shape({...component_library.xu.propTypes}),titleHeadingWrapperProps:prop_types_default().shape({...component_library.xu.propTypes}),error:prop_types_default().string,warning:prop_types_default().string,warningProps:prop_types_default().shape({...component_library.xv.propTypes}),onChange:prop_types_default().func,value:prop_types_default().oneOfType([prop_types_default().number,prop_types_default().string]),detailText:prop_types_default().string,autoFocus:prop_types_default().bool,numeric:prop_types_default().bool,password:prop_types_default().bool,allowDecimals:prop_types_default().bool,disabled:prop_types_default().bool,placeholder:prop_types_default().string,passwordStrength:prop_types_default().oneOfType([prop_types_default().string,prop_types_default().node]),passwordStrengthText:prop_types_default().string,id:prop_types_default().string,inputProps:prop_types_default().object,wrappingLabelProps:prop_types_default().object,inputRef:prop_types_default().object},FormField.__docgenInfo={description:"@deprecated The `<FormField />` component has been deprecated in favor of the new `<FormTextField>` component from the component-library.\nPlease update your code to use the new `<FormTextField>` component instead, which can be found at ui/components/component-library/form-text-field/form-text-field.js.\nYou can find documentation for the new FormTextField component in the MetaMask Storybook:\n{@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-formtextfield--docs}\nIf you would like to help with the replacement of the old FormField component, please submit a pull request against this GitHub issue:\n{@link https://github.com/MetaMask/metamask-extension/issues/19737}",methods:[],displayName:"FormField",props:{titleText:{defaultValue:{value:"''",computed:!1},description:"Form Fields Title",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!1},titleUnit:{defaultValue:{value:"''",computed:!1},description:"Show unit (eg. ETH)",type:{name:"string"},required:!1},tooltipText:{defaultValue:{value:"''",computed:!1},description:"Add Tooltip and text content",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!1},titleDetail:{defaultValue:{value:"''",computed:!1},description:"Show content (text, image, component) in title",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!1},onChange:{defaultValue:{value:"undefined",computed:!0},description:"Handler when fields change",type:{name:"func"},required:!1},value:{defaultValue:{value:"0",computed:!1},description:"Field value",type:{name:"union",value:[{name:"number"},{name:"string"}]},required:!1},detailText:{defaultValue:{value:"''",computed:!1},description:"Show detail text if field mode is numeric",type:{name:"string"},required:!1},autoFocus:{defaultValue:{value:"false",computed:!1},description:"Set autofocus on render",type:{name:"bool"},required:!1},password:{defaultValue:{value:"false",computed:!1},description:"Set password mode",type:{name:"bool"},required:!1},allowDecimals:{defaultValue:{value:"false",computed:!1},description:"Allow decimals on the field",type:{name:"bool"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"Check if the form disabled",type:{name:"bool"},required:!1},dataTestId:{description:"Identifier for testing purpose",type:{name:"string"},required:!1},TitleTextCustomComponent:{description:"A custom component to replace the title text Typography component\ntitleText will be ignored if this is provided",type:{name:"node"},required:!1},TitleUnitCustomComponent:{description:"A custom component to replace the title unit Typography component\ntitleUnit will be ignored if this is provided",type:{name:"node"},required:!1},TooltipCustomComponent:{description:"A custom component to replace the tooltip component\ntooltipText will be ignored if this is provided",type:{name:"node"},required:!1},titleDetailWrapperProps:{description:"Props to pass to wrapping Box component of the titleDetail component\nAccepts all props of the Box component",type:{name:"shape",value:{}},required:!1},titleHeadingWrapperProps:{description:"Props to pass to wrapping Box component of the titleHeading component\nAccepts all props of the Box component",type:{name:"shape",value:{}},required:!1},error:{description:"Show error message",type:{name:"string"},required:!1},warning:{description:"Show warning message",type:{name:"string"},required:!1},warningProps:{description:"Props to pass to the warning text component\nAccepts all props of the Text component",type:{name:"shape",value:{}},required:!1},numeric:{description:"Set numeric mode, the default is text",type:{name:"bool"},required:!1},placeholder:{description:"Set the placeholder text for the input field",type:{name:"string"},required:!1},passwordStrength:{description:"Show password strength according to the score",type:{name:"union",value:[{name:"string"},{name:"node"}]},required:!1},passwordStrengthText:{description:"Show password strength description",type:{name:"string"},required:!1},id:{description:"The id of the input element. Should be used when the wrapping label is changed to a div to ensure accessibility.",type:{name:"string"},required:!1},inputProps:{description:"Any additional input attributes or overrides not provided by exposed props",type:{name:"object"},required:!1},wrappingLabelProps:{description:"The FormField is wrapped in a Box component that is rendered as a <label/> using the polymorphic \"as\" prop.\nThis object allows you to override the rendering of the label by using the wrapperProps={{ as: 'div' }} prop.\nIf used ensure the id prop is set on the input and a label element is present using htmlFor with the same id to ensure accessibility.",type:{name:"object"},required:!1},inputRef:{description:"ref for input component",type:{name:"object"},required:!1}}}},"./ui/components/ui/numeric-input/numeric-input.component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>NumericInput});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),prop_types__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__),_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/helpers/constants/design-system.ts"),_shared_constants_tokens__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./shared/constants/tokens.js"),_component_library__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/components/component-library/index.ts");function NumericInput({detailText="",value=0,onChange,error="",autoFocus=!1,allowDecimals=!0,disabled=!1,dataTestId,placeholder,id,name,inputRef}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("numeric-input",{"numeric-input--error":error})},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"number",value,onKeyDown:e=>{allowDecimals||"."!==e.key||e.preventDefault()},onChange:e=>{var _match$;const newValue=e.target.value,match=_shared_constants_tokens__WEBPACK_IMPORTED_MODULE_3__.BZ.exec(newValue);(null==match||null===(_match$=match[1])||void 0===_match$?void 0:_match$.length)>=15||null==onChange||onChange(parseFloat(newValue||0,10))},min:"0",autoFocus,disabled,"data-testid":dataTestId,placeholder,id,name,ref:inputRef}),detailText&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_4__.xv,{color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__.d9.textAlternative,variant:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_2__.rK.bodySm,as:"span"},detailText))}NumericInput.propTypes={value:prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_5___default().number,prop_types__WEBPACK_IMPORTED_MODULE_5___default().string]),detailText:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,onChange:prop_types__WEBPACK_IMPORTED_MODULE_5___default().func,error:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,autoFocus:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,allowDecimals:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,disabled:prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool,dataTestId:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,placeholder:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,name:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,id:prop_types__WEBPACK_IMPORTED_MODULE_5___default().string,inputRef:prop_types__WEBPACK_IMPORTED_MODULE_5___default().object},NumericInput.__docgenInfo={description:"",methods:[],displayName:"NumericInput",props:{detailText:{defaultValue:{value:"''",computed:!1},description:"",type:{name:"string"},required:!1},value:{defaultValue:{value:"0",computed:!1},description:"",type:{name:"union",value:[{name:"number"},{name:"string"}]},required:!1},error:{defaultValue:{value:"''",computed:!1},description:"",type:{name:"string"},required:!1},autoFocus:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},allowDecimals:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},onChange:{description:"",type:{name:"func"},required:!1},dataTestId:{description:"",type:{name:"string"},required:!1},placeholder:{description:"",type:{name:"string"},required:!1},name:{description:"The name of the input",type:{name:"string"},required:!1},id:{description:"The id of the input element. Should be used with htmlFor with a label element.",type:{name:"string"},required:!1},inputRef:{description:"",type:{name:"object"},required:!1}}}}}]);