/*! For license information please see components-ui-typography-typography-stories.b5e320ac.iframe.bundle.js.LICENSE.txt */
"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[2870],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$4:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4,Xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Xz,h_:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_,oG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./ui/components/ui/typography/typography.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Align:()=>Align,As:()=>As,BoxPropsStory:()=>BoxPropsStory,Color:()=>Color,DefaultStory:()=>DefaultStory,FontStyle:()=>FontStyle,FontWeight:()=>FontWeight,Margin:()=>Margin,OverflowWrap:()=>OverflowWrap,Variant:()=>Variant,__namedExportsOrder:()=>__namedExportsOrder,default:()=>typography_stories});var react=__webpack_require__("./node_modules/react/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),box=__webpack_require__("./ui/components/ui/box/index.js"),banner_alert=__webpack_require__("./ui/components/component-library/banner-alert/index.js"),typography=__webpack_require__("./ui/components/ui/typography/typography.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),actionable_message=__webpack_require__("./ui/components/ui/actionable-message/index.js"),ui_typography=__webpack_require__("./ui/components/ui/typography/index.js");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3",code:"code",pre:"pre",ul:"ul",li:"li",a:"a"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"typography",children:"Typography"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Good typography improves readability, legibility and hierarchy of information."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--default-story"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:ui_typography.Z}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The following describes the props and example usage for this component."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"variant",children:"Variant"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"variant"})," prop and the ",(0,jsx_runtime.jsx)(_components.code,{children:"TYPOGRAPHY"})," object from ",(0,jsx_runtime.jsx)(_components.code,{children:"./ui/helpers/constants/design-system.js"})," to change the font size of the Typography component."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--variant"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from \'../../ui/typography\';\nimport { TypographyVariant } from \'../../../helpers/constants/design-system\';\n\n<Typography variant="TypographyVariant.H1">h1</Typography>\n<Typography variant="TypographyVariant.H2">h2</Typography>\n<Typography variant="TypographyVariant.H3">h3</Typography>\n<Typography variant="TypographyVariant.H4">h4</Typography>\n<Typography variant="TypographyVariant.H5">h5</Typography>\n<Typography variant="TypographyVariant.H6">h6</Typography>\n<Typography variant="TypographyVariant.H7">h7</Typography>\n<Typography variant="TypographyVariant.H8">h8</Typography>\n<Typography variant="TypographyVariant.H9">h9</Typography>\n<Typography variant="TypographyVariant.paragraph">p</Typography>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"color",children:"Color"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"color"})," prop and the ",(0,jsx_runtime.jsx)(_components.code,{children:"COLOR"})," object from ",(0,jsx_runtime.jsx)(_components.code,{children:"./ui/helpers/constants/design-system.js"})," to change the color of the Typography component."]}),"\n",(0,jsx_runtime.jsx)(actionable_message.Z,{type:"warning",message:"Do not use any colors in the DEPRECATED COLORS list. This will ensure themability and consistency across the codebase."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--color"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from '../../ui/typography';\nimport { TextColor, Color, BackgroundColor } from '../../../helpers/constants/design-system';\n\n<Typography color={TextColor.textDefault}>\n  text-default\n</Typography>\n<Typography color={TextColor.textAlternative}>\n  text-alternative\n</Typography>\n<Typography color={TextColor.textMuted}>\n  text-muted\n</Typography>\n<Typography color={Color.overlayInverse} boxProps={{backgroundColor:{BackgroundColor.overlayDefault}}}>\n  overlay-inverse\n</Typography>\n<Typography color={TextColor.primaryDefault}>\n  primary-default\n</Typography>\n<Typography color={TextColor.primaryInverse} boxProps={{backgroundColor:{BackgroundColor.primaryDefault}}}>\n  primary-inverse\n</Typography>\n<Typography color={TextColor.errorDefault}>\n  error-default\n</Typography>\n<Typography color={TextColor.errorInverse} boxProps={{backgroundColor:{BackgroundColor.errorDefault}}}>\n  error-inverse\n</Typography>\n<Typography color={TextColor.successDefault}>\n  success-default\n</Typography>\n<Typography color={TextColor.successInverse} boxProps={{backgroundColor:{BackgroundColor.successDefault}}}>\n  success-inverse\n</Typography>\n<Typography color={TextColor.warningInverse} boxProps={{backgroundColor:{BackgroundColor.warningDefault}}}>\n  warning-inverse\n</Typography>\n<Typography color={TextColor.infoDefault}>\n  info-default\n</Typography>\n<Typography color={TextColor.infoInverse} boxProps={{backgroundColor:{BackgroundColor.infoDefault}}}>\n  info-inverse\n</Typography>\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"font-weight",children:"Font Weight"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"fontWeight"})," prop and the ",(0,jsx_runtime.jsx)(_components.code,{children:"FONT_WEIGHT"})," object from ",(0,jsx_runtime.jsx)(_components.code,{children:"./ui/helpers/constants/design-system.js"})," to change the font weight of the Typography component. There are 2 font weights:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"FONT_WEIGHT.NORMAL"})," = ",(0,jsx_runtime.jsx)(_components.code,{children:"normal"})," || ",(0,jsx_runtime.jsx)(_components.code,{children:"400"})]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"FONT_WEIGHT.BOLD"})," = ",(0,jsx_runtime.jsx)(_components.code,{children:"bold"})," || ",(0,jsx_runtime.jsx)(_components.code,{children:"700"})]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--font-weight"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from '../../ui/typography';\nimport { FONT_WEIGHT } from '../../../helpers/constants/design-system';\n\n<Typography fontWeight={FONT_WEIGHT.NORMAL}>\n  normal\n</Typography>\n<Typography fontWeight={FONT_WEIGHT.BOLD}>\n  bold\n</Typography>\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"font-style",children:"Font Style"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"fontStyle"})," prop and the ",(0,jsx_runtime.jsx)(_components.code,{children:"FONT_STYLE"})," object from ",(0,jsx_runtime.jsx)(_components.code,{children:"./ui/helpers/constants/design-system.js"})," to change the font style of the Typography component. There are 2 font styles:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.code,{children:"FONT_STYLE.NORMAL"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.code,{children:"FONT_STYLE.ITALIC"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--font-style"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from '../../ui/typography';\nimport { FONT_STYLE } from '../../../helpers/constants/design-system';\n\n<Typography fontStyle={FONT_STYLE.NORMAL}>\n  normal\n</Typography>\n<Typography fontStyle={FONT_STYLE.ITALIC}>\n  bold\n</Typography>\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"align",children:"Align"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"align"})," prop and the ",(0,jsx_runtime.jsx)(_components.code,{children:"TextAlign"})," enum from ",(0,jsx_runtime.jsx)(_components.code,{children:"./ui/helpers/constants/design-system.js"})," to change the text alignment of the Typography component."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--align"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from '../../ui/typography';\nimport { TextAlign } from '../../../helpers/constants/design-system';\n\n<Typography align={TextAlign.Left}>\n  left\n</Typography>\n<Typography align={TextAlign.Center}>\n  center\n</Typography>\n<Typography align={TextAlign.Right}>\n  right\n</Typography>\n<Typography align={TextAlign.Justify}>\n  justify\n</Typography>\n<Typography align={TextAlign.End}>\n  end\n</Typography>\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"overflow-wrap",children:"Overflow Wrap"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"overflowWrap"})," prop and the ",(0,jsx_runtime.jsx)(_components.code,{children:"OVERFLOW_WRAP"})," object from ",(0,jsx_runtime.jsx)(_components.code,{children:"./ui/helpers/constants/design-system.js"})," to change the overflow wrap of the Typography component."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--overflow-wrap"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from '../../ui/typography';\nimport { OVERFLOW_WRAP } from '../../../helpers/constants/design-system';\n\n<div\n  style={{\n    width: 250,\n    border: '1px solid var(--color-error-default)',\n    display: 'block',\n  }}\n>\n  <Typography overflowWrap={OVERFLOW_WRAP.NORMAL}>\n    {OVERFLOW_WRAP.NORMAL}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\n  </Typography>\n  <Typography overflowWrap={OVERFLOW_WRAP.BREAK_WORD}>\n    {OVERFLOW_WRAP.BREAK_WORD}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\n  </Typography>\n</div>;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"as",children:"As"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"as"})," prop to change the root html element of the Typography component"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--as"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from \'../../ui/typography\';\n\n<Typography as="dd">dd</Typography>\n<Typography as="div">div</Typography>\n<Typography as="dt">dt</Typography>\n<Typography as="em">em</Typography>\n<Typography as="h1">h1</Typography>\n<Typography as="h2">h2</Typography>\n<Typography as="h3">h3</Typography>\n<Typography as="h4">h4</Typography>\n<Typography as="h5">h5</Typography>\n<Typography as="h6">h6</Typography>\n<Typography as="li">li</Typography>\n<Typography as="p">p</Typography>\n<Typography as="span">span</Typography>\n<Typography as="strong">strong</Typography>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Renders the html:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:"<dd>dd</dd>\n\n<div>div</div>\n\n<dt>dt</dt>\n\n<em>em</em>\n\n<h1>h1</h1>\n\n<h2>h2</h2>\n\n<h3>h3</h3>\n\n<h4>h4</h4>\n\n<h5>h5</h5>\n\n<h6>h6</h6>\n\n<li>li</li>\n\n<p>p</p>\n\n<span>span</span>\n\n<strong>strong</strong>\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"margin",children:"Margin"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"margin"})," prop to change margin of the Typography component. For more control over bounding box properties use the ",(0,jsx_runtime.jsx)(_components.code,{children:"boxProps"})," props object."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--margin"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from '../../ui/typography';\n\n<Typography margin={4}>This uses the boxProps prop</Typography>;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"box-props",children:"Box Props"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"boxProps"})," prop object to pass any valid ",(0,jsx_runtime.jsx)(_components.a,{href:"/?path=/story/components-ui-box--default-story",children:"Box"})," component props to the Typography component. ",(0,jsx_runtime.jsx)(_components.code,{children:"boxProps"})," will overwrite the ",(0,jsx_runtime.jsx)(_components.code,{children:"margin"})," prop"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-ui-typography--box-props-story"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"// If importing from ui/components/app/[YOUR_COMPONENT]/ directory\nimport Typography from '../../ui/typography';\nimport { Color } from '../../../helpers/constants/design-system';\n\n<Typography\n  boxProps={{\n    backgroundColor: Color.infoMuted,\n    borderColor: Color.infoDefault,\n    padding: 4,\n    borderRadius: 4,\n  }}\n  color={Color.textDefault}\n>\n  This uses the boxProps prop\n</Typography>;\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"class-name",children:"Class Name"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Adds an additional class to the Typography component"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"children",children:"Children"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The text content of the typography component"})]})}var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3,_Variant$parameters,_Variant$parameters2,_Variant$parameters2$,_Color$parameters,_Color$parameters2,_Color$parameters2$do,_FontWeight$parameter,_FontWeight$parameter2,_FontWeight$parameter3,_FontStyle$parameters,_FontStyle$parameters2,_FontStyle$parameters3,_Align$parameters,_Align$parameters2,_Align$parameters2$do,_OverflowWrap$paramet,_OverflowWrap$paramet2,_OverflowWrap$paramet3,_As$parameters,_As$parameters2,_As$parameters2$docs,_Margin$parameters,_Margin$parameters2,_Margin$parameters2$d,_BoxPropsStory$parame,_BoxPropsStory$parame2,_BoxPropsStory$parame3;function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const marginSizeKnobOptions=[0,1,2,3,4,5,6,7,8,9,10,11,12,"auto"],typography_stories={title:"Components/UI/Typography",parameters:{docs:{page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}},argTypes:{variant:{control:{type:"select"},options:Object.values(design_system.TypographyVariant)},color:{control:{type:"select"},options:typography.rl},fontWeight:{control:{type:"select"},options:Object.values(design_system.m5)},fontStyle:{control:{type:"select"},options:Object.values(design_system.rZ)},align:{control:{type:"select"},options:Object.values(design_system.PH)},overflowWrap:{control:{type:"select"},options:Object.values(design_system.kC)},as:{control:{type:"select"},options:typography.WG},margin:{options:marginSizeKnobOptions,control:"select"},boxProps:{control:"object"},className:{control:{type:"text"}},children:{control:{type:"text"}}}};function renderBackgroundColor(color){let bgColor;switch(color){case design_system.Il.overlayInverse:bgColor=design_system.lP.overlayDefault;break;case design_system.Il.primaryInverse:bgColor=design_system.lP.primaryDefault;break;case design_system.Il.errorInverse:bgColor=design_system.lP.errorDefault;break;case design_system.Il.warningInverse:bgColor=design_system.lP.warningDefault;break;case design_system.Il.successInverse:bgColor=design_system.lP.successDefault;break;case design_system.Il.infoInverse:bgColor=design_system.lP.infoDefault;break;default:bgColor=null}return bgColor}const DefaultStory=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),react.createElement(ui_typography.Z,_extends({boxProps:{backgroundColor:renderBackgroundColor(args.color)}},args),args.children));DefaultStory.storyName="Default",DefaultStory.args={children:"The quick orange fox jumped over the lazy dog."};const Variant=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),Object.values(design_system.TypographyVariant).map((variant=>react.createElement(ui_typography.Z,_extends({boxProps:{backgroundColor:renderBackgroundColor(args.color)}},args,{variant,key:variant}),args.children||variant)))),Color=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),Object.values(typography.rl).map(((color,index)=>16===index?react.createElement(react.Fragment,{key:color},react.createElement(ui_typography.Z,{color:design_system.d9.textDefault,align:design_system.PH.Center,boxProps:{backgroundColor:design_system.lP.warningMuted,padding:4,borderColor:design_system.kf.warningDefault}},"DEPRECATED COLORS - DO NOT USE"),react.createElement(ui_typography.Z,_extends({},args,{boxProps:{backgroundColor:renderBackgroundColor(color)},color}),react.createElement("strike",null,color))):index>=16?react.createElement(ui_typography.Z,_extends({},args,{boxProps:{backgroundColor:renderBackgroundColor(color)},color,key:color}),react.createElement("strike",null,color)):react.createElement(ui_typography.Z,_extends({},args,{boxProps:{backgroundColor:renderBackgroundColor(color)},color,key:color}),color)))),FontWeight=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),Object.values(design_system.m5).map((weight=>react.createElement(ui_typography.Z,_extends({boxProps:{backgroundColor:renderBackgroundColor(args.color)}},args,{fontWeight:weight,key:weight}),weight)))),FontStyle=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),Object.values(design_system.rZ).map((style=>react.createElement(ui_typography.Z,_extends({boxProps:{backgroundColor:renderBackgroundColor(args.color)}},args,{fontStyle:style,key:style}),style)))),Align=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),Object.values(design_system.PH).map((align=>react.createElement(ui_typography.Z,_extends({boxProps:{backgroundColor:renderBackgroundColor(args.color)}},args,{align,key:align}),align)))),OverflowWrap=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),react.createElement("div",{style:{width:250,border:"1px solid var(--color-error-default)",display:"block"}},react.createElement(ui_typography.Z,_extends({},args,{overflowWrap:design_system.kC.NORMAL}),design_system.kC.NORMAL,": 0x39013f961c378f02c2b82a6e1d31e9812786fd9d"),react.createElement(ui_typography.Z,_extends({},args,{overflowWrap:design_system.kC.BREAK_WORD}),design_system.kC.BREAK_WORD,": 0x39013f961c378f02c2b82a6e1d31e9812786fd9d"))),As=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),react.createElement(ui_typography.Z,{boxProps:{display:design_system.bA.BLOCK},marginBottom:4},"You can change the root element of the Typography component using the as prop. Inspect the below elements to see the underlying HTML elements"),react.createElement(box.ZP,{gap:4},Object.values(typography.WG).map((as=>react.createElement(ui_typography.Z,_extends({},args,{as,key:as,boxProps:{backgroundColor:renderBackgroundColor(args.color),display:design_system.bA.BLOCK}}),as))))),Margin=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),react.createElement(ui_typography.Z,args,"This Typography component has a margin of ",4*args.margin,"px"));Margin.args={margin:4};const BoxPropsStory=args=>react.createElement(react.Fragment,null,react.createElement(banner_alert.w,{severity:design_system.t3.WARNING,title:"Deprecated",description:"<Typography/> has been deprecated in favor of the <Text /> component",actionButtonLabel:"See details",actionButtonProps:{href:"https://github.com/MetaMask/metamask-extension/issues/17670"}}),react.createElement(ui_typography.Z,args,"This uses the boxProps prop"));BoxPropsStory.args={color:design_system.d9.textDefault,boxProps:{backgroundColor:design_system.lP.infoMuted,borderColor:design_system.kf.infoDefault,padding:4,borderRadius:4}},BoxPropsStory.storyName="BoxProps",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    <Typography boxProps={{\n    backgroundColor: renderBackgroundColor(args.color)\n  }} {...args}>\n      {args.children}\n    </Typography>\n  </>',...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}},Variant.parameters={...Variant.parameters,docs:{...null===(_Variant$parameters=Variant.parameters)||void 0===_Variant$parameters?void 0:_Variant$parameters.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    {Object.values(TypographyVariant).map(variant => <Typography boxProps={{\n    backgroundColor: renderBackgroundColor(args.color)\n  }} {...args} variant={variant} key={variant}>\n        {args.children || variant}\n      </Typography>)}\n  </>',...null===(_Variant$parameters2=Variant.parameters)||void 0===_Variant$parameters2||null===(_Variant$parameters2$=_Variant$parameters2.docs)||void 0===_Variant$parameters2$?void 0:_Variant$parameters2$.source}}},Color.parameters={...Color.parameters,docs:{...null===(_Color$parameters=Color.parameters)||void 0===_Color$parameters?void 0:_Color$parameters.docs,source:{originalSource:'args => {\n  // Index of last valid color in ValidColors array\n  const LAST_VALID_COLORS_ARRAY_INDEX = 16;\n  return <>\n      <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n      href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n    }} />\n      {Object.values(ValidColors).map((color, index) => {\n      if (index === LAST_VALID_COLORS_ARRAY_INDEX) {\n        return <React.Fragment key={color}>\n              <Typography color={TextColor.textDefault} align={TextAlign.Center} boxProps={{\n            backgroundColor: BackgroundColor.warningMuted,\n            padding: 4,\n            borderColor: BorderColor.warningDefault\n          }}>\n                DEPRECATED COLORS - DO NOT USE\n              </Typography>\n              <Typography {...args} boxProps={{\n            backgroundColor: renderBackgroundColor(color)\n          }} color={color}>\n                <strike>{color}</strike>\n              </Typography>\n            </React.Fragment>;\n      } else if (index >= LAST_VALID_COLORS_ARRAY_INDEX) {\n        return <Typography {...args} boxProps={{\n          backgroundColor: renderBackgroundColor(color)\n        }} color={color} key={color}>\n              <strike>{color}</strike>\n            </Typography>;\n      }\n      return <Typography {...args} boxProps={{\n        backgroundColor: renderBackgroundColor(color)\n      }} color={color} key={color}>\n            {color}\n          </Typography>;\n    })}\n    </>;\n}',...null===(_Color$parameters2=Color.parameters)||void 0===_Color$parameters2||null===(_Color$parameters2$do=_Color$parameters2.docs)||void 0===_Color$parameters2$do?void 0:_Color$parameters2$do.source}}},FontWeight.parameters={...FontWeight.parameters,docs:{...null===(_FontWeight$parameter=FontWeight.parameters)||void 0===_FontWeight$parameter?void 0:_FontWeight$parameter.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    {Object.values(FONT_WEIGHT).map(weight => <Typography boxProps={{\n    backgroundColor: renderBackgroundColor(args.color)\n  }} {...args} fontWeight={weight} key={weight}>\n        {weight}\n      </Typography>)}\n  </>',...null===(_FontWeight$parameter2=FontWeight.parameters)||void 0===_FontWeight$parameter2||null===(_FontWeight$parameter3=_FontWeight$parameter2.docs)||void 0===_FontWeight$parameter3?void 0:_FontWeight$parameter3.source}}},FontStyle.parameters={...FontStyle.parameters,docs:{...null===(_FontStyle$parameters=FontStyle.parameters)||void 0===_FontStyle$parameters?void 0:_FontStyle$parameters.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    {Object.values(FONT_STYLE).map(style => <Typography boxProps={{\n    backgroundColor: renderBackgroundColor(args.color)\n  }} {...args} fontStyle={style} key={style}>\n        {style}\n      </Typography>)}\n  </>',...null===(_FontStyle$parameters2=FontStyle.parameters)||void 0===_FontStyle$parameters2||null===(_FontStyle$parameters3=_FontStyle$parameters2.docs)||void 0===_FontStyle$parameters3?void 0:_FontStyle$parameters3.source}}},Align.parameters={...Align.parameters,docs:{...null===(_Align$parameters=Align.parameters)||void 0===_Align$parameters?void 0:_Align$parameters.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    {Object.values(TextAlign).map(align => <Typography boxProps={{\n    backgroundColor: renderBackgroundColor(args.color)\n  }} {...args} align={align} key={align}>\n        {align}\n      </Typography>)}\n  </>',...null===(_Align$parameters2=Align.parameters)||void 0===_Align$parameters2||null===(_Align$parameters2$do=_Align$parameters2.docs)||void 0===_Align$parameters2$do?void 0:_Align$parameters2$do.source}}},OverflowWrap.parameters={...OverflowWrap.parameters,docs:{...null===(_OverflowWrap$paramet=OverflowWrap.parameters)||void 0===_OverflowWrap$paramet?void 0:_OverflowWrap$paramet.docs,source:{originalSource:"args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title=\"Deprecated\" description=\"<Typography/> has been deprecated in favor of the <Text /> component\" actionButtonLabel=\"See details\" actionButtonProps={{\n    href: 'https://github.com/MetaMask/metamask-extension/issues/17670'\n  }} />\n    <div style={{\n    width: 250,\n    border: '1px solid var(--color-error-default)',\n    display: 'block'\n  }}>\n      <Typography {...args} overflowWrap={OVERFLOW_WRAP.NORMAL}>\n        {OVERFLOW_WRAP.NORMAL}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\n      </Typography>\n      <Typography {...args} overflowWrap={OVERFLOW_WRAP.BREAK_WORD}>\n        {OVERFLOW_WRAP.BREAK_WORD}: 0x39013f961c378f02c2b82a6e1d31e9812786fd9d\n      </Typography>\n    </div>\n  </>",...null===(_OverflowWrap$paramet2=OverflowWrap.parameters)||void 0===_OverflowWrap$paramet2||null===(_OverflowWrap$paramet3=_OverflowWrap$paramet2.docs)||void 0===_OverflowWrap$paramet3?void 0:_OverflowWrap$paramet3.source}}},As.parameters={...As.parameters,docs:{...null===(_As$parameters=As.parameters)||void 0===_As$parameters?void 0:_As$parameters.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    <Typography boxProps={{\n    display: DISPLAY.BLOCK\n  }} marginBottom={4}>\n      You can change the root element of the Typography component using the as\n      prop. Inspect the below elements to see the underlying HTML elements\n    </Typography>\n    <Box gap={4}>\n      {Object.values(ValidTags).map(as => <Typography {...args} as={as} key={as} boxProps={{\n      backgroundColor: renderBackgroundColor(args.color),\n      display: DISPLAY.BLOCK\n    }}>\n          {as}\n        </Typography>)}\n    </Box>\n  </>',...null===(_As$parameters2=As.parameters)||void 0===_As$parameters2||null===(_As$parameters2$docs=_As$parameters2.docs)||void 0===_As$parameters2$docs?void 0:_As$parameters2$docs.source}}},Margin.parameters={...Margin.parameters,docs:{...null===(_Margin$parameters=Margin.parameters)||void 0===_Margin$parameters?void 0:_Margin$parameters.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    <Typography {...args}>\n      This Typography component has a margin of {args.margin * 4}px\n    </Typography>\n  </>',...null===(_Margin$parameters2=Margin.parameters)||void 0===_Margin$parameters2||null===(_Margin$parameters2$d=_Margin$parameters2.docs)||void 0===_Margin$parameters2$d?void 0:_Margin$parameters2$d.source}}},BoxPropsStory.parameters={...BoxPropsStory.parameters,docs:{...null===(_BoxPropsStory$parame=BoxPropsStory.parameters)||void 0===_BoxPropsStory$parame?void 0:_BoxPropsStory$parame.docs,source:{originalSource:'args => <>\n    <BannerAlert severity={SEVERITIES.WARNING} title="Deprecated" description="<Typography/> has been deprecated in favor of the <Text /> component" actionButtonLabel="See details" actionButtonProps={{\n    href: \'https://github.com/MetaMask/metamask-extension/issues/17670\'\n  }} />\n    <Typography {...args}>This uses the boxProps prop</Typography>\n  </>',...null===(_BoxPropsStory$parame2=BoxPropsStory.parameters)||void 0===_BoxPropsStory$parame2||null===(_BoxPropsStory$parame3=_BoxPropsStory$parame2.docs)||void 0===_BoxPropsStory$parame3?void 0:_BoxPropsStory$parame3.source}}};const __namedExportsOrder=["DefaultStory","Variant","Color","FontWeight","FontStyle","Align","OverflowWrap","As","Margin","BoxPropsStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"},Variant.__docgenInfo={description:"",methods:[],displayName:"Variant"},Color.__docgenInfo={description:"",methods:[],displayName:"Color"},FontWeight.__docgenInfo={description:"",methods:[],displayName:"FontWeight"},FontStyle.__docgenInfo={description:"",methods:[],displayName:"FontStyle"},Align.__docgenInfo={description:"",methods:[],displayName:"Align"},OverflowWrap.__docgenInfo={description:"",methods:[],displayName:"OverflowWrap"},As.__docgenInfo={description:"",methods:[],displayName:"As"},Margin.__docgenInfo={description:"",methods:[],displayName:"Margin"},BoxPropsStory.__docgenInfo={description:"",methods:[],displayName:"BoxPropsStory"}},"./ui/components/ui/actionable-message/actionable-message.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>ActionableMessage,v:()=>typeHash});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_info_tooltip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/components/ui/info-tooltip/index.js"),_info_tooltip_info_tooltip_icon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/components/ui/info-tooltip/info-tooltip-icon.js");const CLASSNAME_WITH_RIGHT_BUTTON="actionable-message--with-right-button",typeHash={warning:"actionable-message--warning",danger:"actionable-message--danger",success:"actionable-message--success",default:""};function ActionableMessage({message="",primaryAction=null,primaryActionV2=null,secondaryAction=null,className="",infoTooltipText="",withRightButton=!1,type="default",useIcon=!1,icon,iconFillColor="",roundedButtons,dataTestId,autoHideTime=0,onAutoHide}){const[shouldDisplay,setShouldDisplay]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){if(0===autoHideTime)return;const timeout=setTimeout((()=>{null==onAutoHide||onAutoHide(),setShouldDisplay(!1)}),autoHideTime);return function(){clearTimeout(timeout)}}),[autoHideTime,onAutoHide]);const actionableMessageClassName=classnames__WEBPACK_IMPORTED_MODULE_1___default()("actionable-message",typeHash[type],withRightButton?CLASSNAME_WITH_RIGHT_BUTTON:null,className,{"actionable-message--with-icon":useIcon}),onlyOneAction=primaryAction&&!secondaryAction||secondaryAction&&!primaryAction;return shouldDisplay?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:actionableMessageClassName,"data-testid":dataTestId},useIcon?icon||react__WEBPACK_IMPORTED_MODULE_0__.createElement(_info_tooltip_info_tooltip_icon__WEBPACK_IMPORTED_MODULE_3__.Z,{fillColor:iconFillColor}):null,infoTooltipText&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_info_tooltip__WEBPACK_IMPORTED_MODULE_2__.Z,{position:"left",contentText:infoTooltipText,wrapperClassName:"actionable-message__info-tooltip-wrapper"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"actionable-message__message"},message),primaryActionV2&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{className:"actionable-message__action-v2",onClick:primaryActionV2.onClick},primaryActionV2.label),(primaryAction||secondaryAction)&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("actionable-message__actions",{"actionable-message__actions--single":onlyOneAction})},primaryAction&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("actionable-message__action","actionable-message__action--primary",`actionable-message__action-${type}`,{"actionable-message__action--rounded":roundedButtons}),onClick:primaryAction.onClick},primaryAction.label),secondaryAction&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("actionable-message__action","actionable-message__action--secondary",`actionable-message__action-${type}`,{"actionable-message__action--rounded":roundedButtons}),onClick:secondaryAction.onClick},secondaryAction.label))):null}ActionableMessage.propTypes={message:prop_types__WEBPACK_IMPORTED_MODULE_4___default().node.isRequired,primaryAction:prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({label:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,onClick:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func}),primaryActionV2:prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({label:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,onClick:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func}),secondaryAction:prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({label:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,onClick:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func}),className:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,type:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(Object.keys(typeHash)),withRightButton:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,infoTooltipText:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,useIcon:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,icon:prop_types__WEBPACK_IMPORTED_MODULE_4___default().node,iconFillColor:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,roundedButtons:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,dataTestId:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,autoHideTime:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number,onAutoHide:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func},ActionableMessage.__docgenInfo={description:"@deprecated `<ActionableMessage />` has been deprecated in favor of the `<BannerAlert />`\ncomponent in ./ui/components/component-library/banner-alert/banner-alert.js.\nSee storybook documentation for BannerAlert here:\n{@see {@link https://metamask.github.io/metamask-storybook/?path=/docs/components-componentlibrary-banneralert--default-story#banneralert}}\n\nHelp to replace `ActionableMessage` with `BannerAlert` by submitting a PR against\n{@link https://github.com/MetaMask/metamask-extension/issues/19528}",methods:[],displayName:"ActionableMessage",props:{message:{defaultValue:{value:"''",computed:!1},description:"Text inside actionable message",type:{name:"node"},required:!1},primaryAction:{defaultValue:{value:"null",computed:!1},description:"First button props that have label and onClick props",type:{name:"shape",value:{label:{name:"string",required:!1},onClick:{name:"func",required:!1}}},required:!1},primaryActionV2:{defaultValue:{value:"null",computed:!1},description:"Another style of primary action.\nThis probably shouldn't have been added. A `children` prop might have been more appropriate.",type:{name:"shape",value:{label:{name:"string",required:!1},onClick:{name:"func",required:!1}}},required:!1},secondaryAction:{defaultValue:{value:"null",computed:!1},description:"Second button props that have label and onClick props",type:{name:"shape",value:{label:{name:"string",required:!1},onClick:{name:"func",required:!1}}},required:!1},className:{defaultValue:{value:"''",computed:!1},description:"Additional css className for the component based on the parent css",type:{name:"string"},required:!1},infoTooltipText:{defaultValue:{value:"''",computed:!1},description:"Add tooltip and custom message",type:{name:"string"},required:!1},withRightButton:{defaultValue:{value:"false",computed:!1},description:"change text align to left and button to bottom right",type:{name:"bool"},required:!1},type:{defaultValue:{value:"'default'",computed:!1},description:"change color theme for the component that already predefined in css",type:{name:"enum",value:[{value:'"warning"',computed:!1},{value:'"danger"',computed:!1},{value:'"success"',computed:!1},{value:'"default"',computed:!1}]},required:!1},useIcon:{defaultValue:{value:"false",computed:!1},description:"Add tooltip icon in the left component without message",type:{name:"bool"},required:!1},iconFillColor:{defaultValue:{value:"''",computed:!1},description:"change tooltip icon color",type:{name:"string"},required:!1},autoHideTime:{defaultValue:{value:"0",computed:!1},description:"Whether the actionable message should auto-hide itself after a given amount of time",type:{name:"number"},required:!1},icon:{description:"Custom icon component",type:{name:"node"},required:!1},roundedButtons:{description:"Whether the buttons are rounded",type:{name:"bool"},required:!1},dataTestId:{description:"",type:{name:"string"},required:!1},onAutoHide:{description:"Callback when autoHide time expires",type:{name:"func"},required:!1}}}},"./ui/components/ui/actionable-message/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>_actionable_message__WEBPACK_IMPORTED_MODULE_0__.Z});var _actionable_message__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./ui/components/ui/actionable-message/actionable-message.js")},"./ui/components/ui/info-tooltip/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>_info_tooltip__WEBPACK_IMPORTED_MODULE_0__.Z});var _info_tooltip__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./ui/components/ui/info-tooltip/info-tooltip.js")},"./ui/components/ui/info-tooltip/info-tooltip-icon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>InfoTooltipIcon});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);function InfoTooltipIcon({fillColor="var(--color-icon-default)"}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{viewBox:"0 0 10 10",xmlns:"http://www.w3.org/2000/svg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M5 0C2.2 0 0 2.2 0 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 2c.4 0 .7.3.7.7s-.3.7-.7.7-.7-.2-.7-.6.3-.8.7-.8zm.7 6H4.3V4.3h1.5V8z",fill:fillColor}))}InfoTooltipIcon.propTypes={fillColor:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string},InfoTooltipIcon.__docgenInfo={description:"",methods:[],displayName:"InfoTooltipIcon",props:{fillColor:{defaultValue:{value:"'var(--color-icon-default)'",computed:!1},description:"",type:{name:"string"},required:!1}}}},"./ui/components/ui/info-tooltip/info-tooltip.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>InfoTooltip});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_tooltip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/components/ui/tooltip/index.js"),_info_tooltip_icon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/components/ui/info-tooltip/info-tooltip-icon.js");const positionArrowClassMap={top:"info-tooltip__top-tooltip-arrow",bottom:"info-tooltip__bottom-tooltip-arrow",left:"info-tooltip__left-tooltip-arrow",right:"info-tooltip__right-tooltip-arrow"};function InfoTooltip({contentText="",position="",containerClassName,wrapperClassName,iconFillColor="var(--color-icon-alternative)"}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"info-tooltip","data-testid":"info-tooltip"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tooltip__WEBPACK_IMPORTED_MODULE_2__.Z,{interactive:!0,position,containerClassName:classnames__WEBPACK_IMPORTED_MODULE_1___default()("info-tooltip__tooltip-container",containerClassName),wrapperClassName,tooltipInnerClassName:"info-tooltip__tooltip-content",tooltipArrowClassName:positionArrowClassMap[position],html:contentText,theme:"tippy-tooltip-info"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_info_tooltip_icon__WEBPACK_IMPORTED_MODULE_3__.Z,{fillColor:iconFillColor})))}InfoTooltip.propTypes={contentText:prop_types__WEBPACK_IMPORTED_MODULE_4___default().node,position:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(["top","left","bottom","right"]),containerClassName:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,wrapperClassName:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,iconFillColor:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string},InfoTooltip.__docgenInfo={description:"",methods:[],displayName:"InfoTooltip",props:{contentText:{defaultValue:{value:"''",computed:!1},description:"Text label that shows up after hover",type:{name:"node"},required:!1},position:{defaultValue:{value:"''",computed:!1},description:"Shows position of the tooltip",type:{name:"enum",value:[{value:"'top'",computed:!1},{value:"'left'",computed:!1},{value:"'bottom'",computed:!1},{value:"'right'",computed:!1}]},required:!1},iconFillColor:{defaultValue:{value:"'var(--color-icon-alternative)'",computed:!1},description:"Add color for the icon",type:{name:"string"},required:!1},containerClassName:{description:"Add custom CSS class for container",type:{name:"string"},required:!1},wrapperClassName:{description:"Add custom CSS class for the wrapper",type:{name:"string"},required:!1}}}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);