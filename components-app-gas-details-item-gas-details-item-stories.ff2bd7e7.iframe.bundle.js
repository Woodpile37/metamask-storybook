"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[7310],{"./ui/components/app/gas-details-item/gas-details-item.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultStory:()=>DefaultStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _DefaultStory$paramet,_DefaultStory$paramet2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/components/app/gas-details-item/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/App/GasDetailsItem"},DefaultStory=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.Z,null);DefaultStory.storyName="Default",DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"() => <GasDetailsItem />",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet2=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet2?void 0:_DefaultStory$paramet2.source}}};const __namedExportsOrder=["DefaultStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"}},"./ui/components/app/edit-gas-fee-icon/edit-gas-fee-icon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>EditGasFeeIcon});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__),_contexts_gasFee__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/contexts/gasFee.js"),_hooks_useTransactionEventFragment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/hooks/useTransactionEventFragment.js"),_contexts_transaction_modal__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/contexts/transaction-modal.js"),_component_library__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/components/component-library/index.ts"),_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/helpers/constants/design-system.ts");function EditGasFeeIcon({userAcknowledgedGasMissing=!1}){const{hasSimulationError,estimateUsed,supportsEIP1559}=(0,_contexts_gasFee__WEBPACK_IMPORTED_MODULE_1__.YJ)(),{updateTransactionEventFragment}=(0,_hooks_useTransactionEventFragment__WEBPACK_IMPORTED_MODULE_2__.s)(),{openModal}=(0,_contexts_transaction_modal__WEBPACK_IMPORTED_MODULE_3__.y8)();if(!supportsEIP1559||!estimateUsed||!(!hasSimulationError||userAcknowledgedGasMissing))return null;return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_library__WEBPACK_IMPORTED_MODULE_4__.zx,{style:{textDecoration:"none"},size:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_5__.$u.SM,variant:_component_library__WEBPACK_IMPORTED_MODULE_4__.RN.LINK,startIconName:_component_library__WEBPACK_IMPORTED_MODULE_4__.uH.Edit,color:_helpers_constants_design_system__WEBPACK_IMPORTED_MODULE_5__.EY.primaryDefault,"data-testid":"edit-gas-fee-icon",onClick:()=>{updateTransactionEventFragment({gas_edit_attempted:"basic"}),openModal("editGasFee")}})}EditGasFeeIcon.propTypes={userAcknowledgedGasMissing:prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool},EditGasFeeIcon.__docgenInfo={description:"",methods:[],displayName:"EditGasFeeIcon",props:{userAcknowledgedGasMissing:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1}}}},"./ui/components/app/gas-details-item/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>gas_details_item});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),es=__webpack_require__("./node_modules/react-redux/es/index.js"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),common=__webpack_require__("./ui/helpers/constants/common.ts"),gas=__webpack_require__("./shared/constants/gas.ts"),selectors=__webpack_require__("./ui/selectors/index.js"),send=__webpack_require__("./ui/ducks/send/index.js"),conversion_utils=__webpack_require__("./shared/modules/conversion.utils.ts"),useDraftTransactionWithTxParams=__webpack_require__("./ui/hooks/useDraftTransactionWithTxParams.js"),gasFee=__webpack_require__("./ui/contexts/gasFee.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),box=__webpack_require__("./ui/components/ui/box/index.js"),loading_heartbeat=__webpack_require__("./ui/components/ui/loading-heartbeat/index.js"),edit_gas_fee_icon=__webpack_require__("./ui/components/app/edit-gas-fee-icon/edit-gas-fee-icon.js"),gas_timing_component=__webpack_require__("./ui/components/app/gas-timing/gas-timing.component.js"),fetchEstimatedL1Fee=__webpack_require__("./ui/helpers/utils/optimism/fetchEstimatedL1Fee.js"),transaction_detail_item_component=__webpack_require__("./ui/components/app/transaction-detail-item/transaction-detail-item.component.js"),user_preferenced_currency_display=__webpack_require__("./ui/components/app/user-preferenced-currency-display/index.js");const GasDetailsItem=({"data-testid":dataTestId,userAcknowledgedGasMissing=!1})=>{var _transactionData$txPa,_transactionData$txPa2;const t=(0,useI18nContext.C)(),isMultiLayerFeeNetwork=(0,es.v9)(selectors.SEh),txData=(0,es.v9)(selectors.LCq),[estimatedL1Fees,setEstimatedL1Fees]=(0,react.useState)(null);(0,react.useEffect)((()=>{isMultiLayerFeeNetwork&&(0,fetchEstimatedL1Fee.Z)(null==txData?void 0:txData.chainId,txData).then((result=>{setEstimatedL1Fees(result)})).catch((_err=>{setEstimatedL1Fees(null)}))}),[isMultiLayerFeeNetwork,txData]);const draftTransaction=(0,es.v9)(send.aP),transactionData=(0,useDraftTransactionWithTxParams.r)(),{hexMinimumTransactionFee:draftHexMinimumTransactionFee,hexMaximumTransactionFee:draftHexMaximumTransactionFee}=(0,es.v9)((state=>(0,selectors.nfL)(state,transactionData))),{estimateUsed,hasSimulationError,maximumCostInHexWei:hexMaximumTransactionFee,maxPriorityFeePerGas,maxFeePerGas}=(0,gasFee.YJ)(),{useNativeCurrencyAsPrimaryCurrency}=(0,es.v9)(selectors.Izy),useCurrencyRateCheck=(0,es.v9)(selectors.nsI),getTransactionFeeTotal=(0,react.useMemo)((()=>isMultiLayerFeeNetwork?(0,conversion_utils.Vb)(hexMaximumTransactionFee,estimatedL1Fees||0):hexMaximumTransactionFee),[isMultiLayerFeeNetwork,hexMaximumTransactionFee,estimatedL1Fees]);if(hasSimulationError&&!userAcknowledgedGasMissing)return null;const maxPriorityFeePerGasToRender=(maxPriorityFeePerGas??(0,conversion_utils.Yg)((null===(_transactionData$txPa=transactionData.txParams)||void 0===_transactionData$txPa?void 0:_transactionData$txPa.maxPriorityFeePerGas)??"0x0")).toString(),maxFeePerGasToRender=(maxFeePerGas??(0,conversion_utils.Yg)((null===(_transactionData$txPa2=transactionData.txParams)||void 0===_transactionData$txPa2?void 0:_transactionData$txPa2.maxFeePerGas)??"0x0")).toString();return react.createElement(transaction_detail_item_component.Z,{key:"gas-details-item","data-testid":dataTestId,detailTitle:react.createElement(component_library.xv,null,t("estimatedFee")),detailTitleColor:design_system.d9.textDefault,detailText:useCurrencyRateCheck&&0===Object.keys(draftTransaction).length&&react.createElement("div",{className:"gas-details-item__currency-container"},react.createElement(loading_heartbeat.Z,{estimateUsed}),react.createElement(edit_gas_fee_icon.Z,{userAcknowledgedGasMissing}),react.createElement(user_preferenced_currency_display.Z,{type:common.Vb,value:getTransactionFeeTotal,hideLabel:Boolean(useNativeCurrencyAsPrimaryCurrency)})),detailTotal:react.createElement("div",{className:"gas-details-item__currency-container"},react.createElement(loading_heartbeat.Z,{estimateUsed}),react.createElement(user_preferenced_currency_display.Z,{type:common._8,value:getTransactionFeeTotal||draftHexMinimumTransactionFee,hideLabel:!useNativeCurrencyAsPrimaryCurrency})),subText:react.createElement(react.Fragment,null,react.createElement(box.ZP,{key:"editGasSubTextFeeLabel",display:"inline-flex",className:classnames_default()("gas-details-item__gasfee-label",{"gas-details-item__gas-fee-warning":estimateUsed===gas.o7.high||estimateUsed===gas.o7.dappSuggestedHigh})},react.createElement(loading_heartbeat.Z,{estimateUsed}),react.createElement(box.ZP,{marginRight:1},react.createElement("strong",null,(estimateUsed===gas.o7.high||estimateUsed===gas.o7.dappSuggestedHigh)&&"âš  ",t("editGasSubTextFeeLabel"))),react.createElement("div",{key:"editGasSubTextFeeValue",className:"gas-details-item__currency-container"},react.createElement(loading_heartbeat.Z,{estimateUsed}),react.createElement(user_preferenced_currency_display.Z,{key:"editGasSubTextFeeAmount",type:common._8,value:getTransactionFeeTotal||draftHexMaximumTransactionFee,hideLabel:!useNativeCurrencyAsPrimaryCurrency})))),subTitle:react.createElement(gas_timing_component.Z,{maxPriorityFeePerGas:maxPriorityFeePerGasToRender,maxFeePerGas:maxFeePerGasToRender})})};GasDetailsItem.propTypes={"data-testid":prop_types_default().string,userAcknowledgedGasMissing:prop_types_default().bool},GasDetailsItem.__docgenInfo={description:"",methods:[],displayName:"GasDetailsItem",props:{userAcknowledgedGasMissing:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},"data-testid":{description:"",type:{name:"string"},required:!1}}};const gas_details_item=GasDetailsItem},"./ui/components/ui/loading-heartbeat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>LoadingHeartBeat});var es=__webpack_require__("./node_modules/react-redux/es/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),gas=__webpack_require__("./ui/helpers/utils/gas.js"),app=__webpack_require__("./ui/ducks/app/app.ts"),lodash=__webpack_require__("./node_modules/lodash/lodash.js"),useGasFeeEstimates=__webpack_require__("./ui/hooks/useGasFeeEstimates.js");var process=__webpack_require__("./node_modules/process/browser.js");const LOADING_CLASS="loading-heartbeat--active";function LoadingHeartBeat({estimateUsed,backgroundColor="var(--color-background-default)"}){!function useShouldAnimateGasEstimations(){const{isGasEstimatesLoading,gasFeeEstimates}=(0,useGasFeeEstimates.a)(),dispatch=(0,es.I0)(),isGasLoadingAnimationActive=(0,es.v9)(app.Jl),lastGasEstimates=(0,react.useRef)(gasFeeEstimates),gasEstimatesChanged=!(0,lodash.isEqual)(lastGasEstimates.current,gasFeeEstimates),gasJustLoaded=(0,lodash.isEqual)(lastGasEstimates.current,{});gasEstimatesChanged&&(lastGasEstimates.current=gasFeeEstimates);const showLoadingAnimation=isGasEstimatesLoading||gasEstimatesChanged&&!gasJustLoaded;(0,react.useEffect)((()=>{!1===isGasLoadingAnimationActive&&!0===showLoadingAnimation&&dispatch((0,app.nh)(!0))}),[dispatch,isGasLoadingAnimationActive,showLoadingAnimation]),(0,react.useEffect)((()=>{let timer;return isGasLoadingAnimationActive&&!showLoadingAnimation&&(timer=setTimeout((()=>{dispatch((0,app.nh)(!1))}),2e3)),()=>{timer&&clearTimeout(timer)}}),[dispatch,isGasLoadingAnimationActive,showLoadingAnimation])}();const active=(0,es.v9)(app.Jl);return process.env.IN_TEST||estimateUsed&&!(0,gas.DW)(estimateUsed)?null:react.createElement("div",{className:classnames_default()("loading-heartbeat",{[LOADING_CLASS]:active}),onClick:e=>{e.preventDefault(),e.stopPropagation()},style:{backgroundColor}})}LoadingHeartBeat.propTypes={backgroundColor:prop_types_default().string,estimateUsed:prop_types_default().string},LoadingHeartBeat.__docgenInfo={description:"",methods:[],displayName:"LoadingHeartBeat",props:{backgroundColor:{defaultValue:{value:"'var(--color-background-default)'",computed:!1},description:"",type:{name:"string"},required:!1},estimateUsed:{description:"",type:{name:"string"},required:!1}}}}}]);