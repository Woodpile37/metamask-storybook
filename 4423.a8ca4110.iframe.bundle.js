"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[4423],{"./ui/components/multichain/account-list-item-menu/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{w:()=>AccountListItemMenu});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),react_router=__webpack_require__("./node_modules/react-router/esm/react-router.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),dist=__webpack_require__("./node_modules/@metamask/etherscan-link/dist/index.js"),institution_background=__webpack_require__("./ui/store/institutional/institution-background.ts"),metametrics=__webpack_require__("./ui/contexts/metametrics.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),selectors=__webpack_require__("./ui/selectors/index.js"),hexstring_utils=__webpack_require__("./shared/modules/hexstring-utils.ts"),metamask=__webpack_require__("./ui/ducks/metamask/metamask.js"),routes=__webpack_require__("./ui/helpers/constants/routes.ts"),menu=__webpack_require__("./ui/components/ui/menu/index.js"),component_library=__webpack_require__("./ui/components/component-library/index.js"),constants_metametrics=__webpack_require__("./shared/constants/metametrics.ts"),util=__webpack_require__("./ui/helpers/utils/util.js"),actions=__webpack_require__("./ui/store/actions.ts"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),metrics=__webpack_require__("./ui/helpers/utils/metrics.js");const AccountListItemMenu=({anchorElement,blockExplorerUrlSubTitle,onClose,closeMenu,isRemovable,identity,isOpen})=>{const t=(0,useI18nContext.C)(),trackEvent=(0,react.useContext)(metametrics.Wd),dispatch=(0,es.I0)(),history=(0,react_router.k6)(),chainId=(0,es.v9)(selectors.BVZ),rpcPrefs=(0,es.v9)(selectors.Kzx),addressLink=(0,dist.getAccountLink)(identity.address,chainId,rpcPrefs),deviceName=(0,es.v9)(selectors.Jos),keyring=(0,es.v9)((state=>(0,metamask.jf)(state,identity.address))),accountType=(0,metrics.V)((0,selectors.tAH)(keyring)),blockExplorerLinkText=(0,es.v9)(selectors.L$2),isCustodial=!(null==keyring||!keyring.type)&&/Custody/u.test(keyring.type),accounts=(0,es.v9)(selectors.EAc),mmiActions=(0,institution_background.I6)(),lastItemRef=(0,react.useRef)(null),accountDetailsItemRef=(0,react.useRef)(null),removeAccountItemRef=(0,react.useRef)(null),removeJWTItemRef=(0,react.useRef)(null);(0,react.useEffect)((()=>{removeJWTItemRef.current?lastItemRef.current=removeJWTItemRef.current:removeAccountItemRef.current?lastItemRef.current=removeAccountItemRef.current:lastItemRef.current=accountDetailsItemRef.current}),[removeJWTItemRef.current,removeAccountItemRef.current,accountDetailsItemRef.current]);const popoverDialogRef=(0,react.useRef)(null),handleClickOutside=event=>{null!=popoverDialogRef&&popoverDialogRef.current&&!popoverDialogRef.current.contains(event.target)&&onClose()};return(0,react.useEffect)((()=>(document.addEventListener("mousedown",handleClickOutside),()=>{document.removeEventListener("mousedown",handleClickOutside)})),[]),react.createElement(component_library.J2,{className:"multichain-account-list-item-menu__popover",referenceElement:anchorElement,role:component_library.RM.Dialog,position:component_library.I2.Bottom,offset:[0,0],padding:0,isOpen,isPortal:!0,preventOverflow:!0},react.createElement(component_library.l6,{restoreFocus:!0,initialFocusRef:anchorElement},react.createElement("div",{onKeyDown:event=>{"Tab"===event.key&&event.target===lastItemRef.current&&onClose()},ref:popoverDialogRef},react.createElement(menu.s,{onClick:()=>{"addBlockExplorer"===blockExplorerLinkText.firstPart?history.push(`${routes.Mx}#blockExplorerUrl`):(trackEvent({event:constants_metametrics.AW.ExternalLinkClicked,category:constants_metametrics.ci.Navigation,properties:{link_type:constants_metametrics.ls.AccountTracker,location:"Account Options",url_domain:(0,util.Cs)(addressLink)}}),__webpack_require__.g.platform.openTab({url:addressLink}),onClose()),trackEvent({event:constants_metametrics.AW.BlockExplorerLinkClicked,category:constants_metametrics.ci.Accounts,properties:{location:"Account Options",chain_id:chainId}})},subtitle:blockExplorerUrlSubTitle||null,iconName:component_library.uH.Export,"data-testid":"account-list-menu-open-explorer"},react.createElement(component_library.xv,{variant:design_system.rK.bodySm},t("viewOnExplorer"))),react.createElement(menu.s,{ref:accountDetailsItemRef,onClick:()=>{dispatch((0,actions.LdK)(identity.address)),trackEvent({event:constants_metametrics.AW.NavAccountDetailsOpened,category:constants_metametrics.ci.Navigation,properties:{location:"Account Options"}}),onClose(),null==closeMenu||closeMenu()},iconName:component_library.uH.ScanBarcode,"data-testid":"account-list-menu-details"},react.createElement(component_library.xv,{variant:design_system.rK.bodySm},t("accountDetails"))),isRemovable?react.createElement(menu.s,{ref:removeAccountItemRef,"data-testid":"account-list-menu-remove",onClick:()=>{dispatch((0,actions.K4b)({name:"CONFIRM_REMOVE_ACCOUNT",identity})),trackEvent({event:constants_metametrics.AW.AccountRemoved,category:constants_metametrics.ci.Accounts,properties:{account_hardware_type:deviceName,chain_id:chainId,account_type:accountType}}),onClose(),null==closeMenu||closeMenu()},iconName:component_library.uH.Trash},react.createElement(component_library.xv,{variant:design_system.rK.bodySm},t("removeAccount"))):null,isCustodial?react.createElement(menu.s,{ref:removeJWTItemRef,"data-testid":"account-options-menu__remove-jwt",onClick:async()=>{const token=await dispatch(mmiActions.getCustodianToken()),custodyAccountDetails=await dispatch(mmiActions.getAllCustodianAccountsWithToken(keyring.type.split(" - ")[1],token));dispatch((0,actions.K4b)({name:"CONFIRM_REMOVE_JWT",token,custodyAccountDetails,accounts,selectedAddress:(0,hexstring_utils.QG)(identity.address)})),onClose(),null==closeMenu||closeMenu()},iconName:component_library.uH.Trash},react.createElement(component_library.xv,{variant:design_system.rK.bodySm},t("removeJWT"))):null)))};AccountListItemMenu.propTypes={anchorElement:prop_types_default().instanceOf(window.Element),onClose:prop_types_default().func.isRequired,isOpen:prop_types_default().bool.isRequired,closeMenu:prop_types_default().func,blockExplorerUrlSubTitle:prop_types_default().string,isRemovable:prop_types_default().bool.isRequired,identity:prop_types_default().shape({name:prop_types_default().string.isRequired,address:prop_types_default().string.isRequired,balance:prop_types_default().string.isRequired}).isRequired},AccountListItemMenu.__docgenInfo={description:"",methods:[],displayName:"AccountListItemMenu",props:{anchorElement:{description:"Element that the menu should display next to",type:{name:"instanceOf",value:"window.Element"},required:!1},onClose:{description:"Function that executes when the menu is closed",type:{name:"func"},required:!0},isOpen:{description:"Represents if the menu is open or not\n\n@type {boolean}",type:{name:"bool"},required:!0},closeMenu:{description:"Function that closes the menu",type:{name:"func"},required:!1},blockExplorerUrlSubTitle:{description:"Domain of the block explorer",type:{name:"string"},required:!1},isRemovable:{description:"Represents if the account should be removable",type:{name:"bool"},required:!0},identity:{description:"Identity of the account",type:{name:"shape",value:{name:{name:"string",required:!0},address:{name:"string",required:!0},balance:{name:"string",required:!0}}},required:!0}}}},"./ui/components/ui/menu/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{v:()=>menu,s:()=>menu_item});var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),usePopper=__webpack_require__("./node_modules/react-popper/lib/esm/usePopper.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const Menu=({anchorElement,children,className,"data-testid":dataTestId,onHide,popperOptions})=>{const[popperElement,setPopperElement]=(0,react.useState)(null),popoverContainerElement=(0,react.useRef)(document.getElementById("popover-content")),{attributes,styles}=(0,usePopper.D)(anchorElement,popperElement,popperOptions);return(0,react_dom.createPortal)(react.createElement(react.Fragment,null,react.createElement("div",{className:"menu__background","data-testid":dataTestId,onClick:onHide}),react.createElement("div",_extends({className:classnames_default()("menu__container",className),"data-testid":className,ref:setPopperElement,style:styles.popper},attributes.popper),children)),popoverContainerElement.current)};Menu.propTypes={anchorElement:prop_types_default().instanceOf(window.Element),children:prop_types_default().node.isRequired,className:prop_types_default().string,onHide:prop_types_default().func.isRequired,popperOptions:prop_types_default().object,dataTestId:prop_types_default().string},Menu.defaultProps={anchorElement:void 0,className:void 0,popperOptions:void 0};const menu=Menu;var component_library=__webpack_require__("./ui/components/component-library/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts");const MenuItem=react.forwardRef((({children,className,"data-testid":dataTestId,iconName,onClick,subtitle,disabled=!1},ref)=>react.createElement("button",{className:classnames_default()("menu-item",className),"data-testid":dataTestId,onClick,ref,disabled},iconName?react.createElement(component_library.JO,{name:iconName,size:component_library.Jh.Sm,marginRight:2}):null,react.createElement("div",null,react.createElement("div",null,children),subtitle?react.createElement(component_library.xv,{variant:design_system.rK.bodyXs},subtitle):null))));MenuItem.propTypes={children:prop_types_default().node.isRequired,className:prop_types_default().string,"data-testid":prop_types_default().string,iconName:prop_types_default().string,onClick:prop_types_default().func,subtitle:prop_types_default().node,disabled:prop_types_default().bool},MenuItem.displayName="MenuItem",MenuItem.__docgenInfo={description:"",methods:[],displayName:"MenuItem",props:{disabled:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},children:{description:"",type:{name:"node"},required:!0},className:{description:"",type:{name:"string"},required:!1},"data-testid":{description:"",type:{name:"string"},required:!1},iconName:{description:"",type:{name:"string"},required:!1},onClick:{description:"",type:{name:"func"},required:!1},subtitle:{description:"",type:{name:"node"},required:!1}}};const menu_item=MenuItem},"./ui/helpers/utils/metrics.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getMethodName(camelCase){return camelCase&&"string"==typeof camelCase?camelCase.replace(/([a-z])([A-Z])/gu,"$1 $2").replace(/([A-Z])([a-z])/gu," $1$2").replace(/ +/gu," "):""}function formatAccountType(accountType){return"default"===accountType?"metamask":accountType}__webpack_require__.d(__webpack_exports__,{V:()=>formatAccountType,a:()=>getMethodName})},"./ui/store/institutional/institution-background.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I6:()=>mmiActionsFactory,Lx:()=>setTypedMessageInProgress,Y0:()=>showInteractiveReplacementTokenBanner});var loglevel__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/loglevel/lib/loglevel.js"),loglevel__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_0__),_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/store/actions.ts"),_action_queue__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/store/action-queue/index.ts"),_shared_modules_error__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./shared/modules/error.ts");function showInteractiveReplacementTokenBanner({url,oldRefreshToken}){return async dispatch=>{try{await(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.lf)("showInteractiveReplacementTokenBanner",[url,oldRefreshToken])}catch(err){if(err)throw dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.eaQ)(err.message)),new Error(err.message)}}}function setTypedMessageInProgress(msgId){return async dispatch=>{dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.Nbs)());try{await(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.lf)("setTypedMessageInProgress",[msgId])}catch(error){loglevel__WEBPACK_IMPORTED_MODULE_0___default().error(error),dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.eaQ)(error.message))}finally{await(0,_actions__WEBPACK_IMPORTED_MODULE_1__.Skm)(dispatch),dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.awJ)())}}}function mmiActionsFactory(){function createAsyncAction(name,params,useForceUpdateMetamaskState,loadingText){return loglevel__WEBPACK_IMPORTED_MODULE_0___default().debug(`background.${name}`),async dispatch=>{let result;loadingText&&dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.Nbs)(loadingText));try{result=await(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.lf)(name,[...params])}catch(error){throw dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.eaQ)(error)),(0,_shared_modules_error__WEBPACK_IMPORTED_MODULE_3__.M)(error)?new Error(error.message):error}return loadingText&&dispatch((0,_actions__WEBPACK_IMPORTED_MODULE_1__.awJ)()),useForceUpdateMetamaskState&&await(0,_actions__WEBPACK_IMPORTED_MODULE_1__.Skm)(dispatch),result}}function createAction(name,payload){return new Promise(((resolve,reject)=>{(0,_action_queue__WEBPACK_IMPORTED_MODULE_2__.BW)(name,[payload],(error=>{error?reject(error):resolve()}))}))}return{connectCustodyAddresses:(custodianType,custodianName,newAccounts)=>createAsyncAction("connectCustodyAddresses",[custodianType,custodianName,newAccounts],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm,"Looking for your custodian account..."),getCustodianAccounts:(token,apiUrl,custody,getNonImportedAccounts)=>createAsyncAction("getCustodianAccounts",[token,apiUrl,custody,getNonImportedAccounts],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm,"Getting custodian accounts..."),getCustodianAccountsByAddress:(jwt,apiUrl,address,custody)=>createAsyncAction("getCustodianAccountsByAddress",[jwt,apiUrl,address,custody],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm,"Getting custodian accounts..."),getCustodianTransactionDeepLink:(address,txId)=>createAsyncAction("getCustodianTransactionDeepLink",[address,txId],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianConfirmDeepLink:txId=>createAsyncAction("getCustodianConfirmDeepLink",[txId],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianSignMessageDeepLink:(from,custodyTxId)=>createAsyncAction("getCustodianSignMessageDeepLink",[from,custodyTxId],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianToken:custody=>createAsyncAction("getCustodianToken",[custody],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),getCustodianJWTList:custody=>createAsyncAction("getCustodianJWTList",[custody],_actions__WEBPACK_IMPORTED_MODULE_1__.Skm),setWaitForConfirmDeepLinkDialog:waitForConfirmDeepLinkDialog=>createAction("setWaitForConfirmDeepLinkDialog",waitForConfirmDeepLinkDialog),setComplianceAuthData:(clientId,projectId)=>createAsyncAction("setComplianceAuthData",[{clientId,projectId}]),deleteComplianceAuthData:()=>createAsyncAction("deleteComplianceAuthData",[]),generateComplianceReport:address=>createAction("generateComplianceReport",address),getComplianceHistoricalReportsByAddress:(address,projectId)=>createAsyncAction("getComplianceHistoricalReportsByAddress",[address,projectId]),syncReportsInProgress:(address,historicalReports)=>createAction("syncReportsInProgress",{address,historicalReports}),removeConnectInstitutionalFeature:(origin,projectId)=>createAction("removeConnectInstitutionalFeature",{origin,projectId}),removeAddTokenConnectRequest:({origin,apiUrl,token})=>createAction("removeAddTokenConnectRequest",{origin,apiUrl,token}),setCustodianConnectRequest:({token,apiUrl,custodianType,custodianName})=>createAsyncAction("setCustodianConnectRequest",[{token,apiUrl,custodianType,custodianName}]),getCustodianConnectRequest:()=>createAsyncAction("getCustodianConnectRequest",[]),getMmiConfiguration:()=>createAsyncAction("getMmiConfiguration",[]),getAllCustodianAccountsWithToken:(custodyType,token)=>createAsyncAction("getAllCustodianAccountsWithToken",[custodyType,token]),setCustodianNewRefreshToken:(address,oldAuthDetails,oldApiUrl,newAuthDetails,newApiUrl)=>createAsyncAction("setCustodianNewRefreshToken",[address,oldAuthDetails,oldApiUrl,newAuthDetails,newApiUrl])}}}}]);