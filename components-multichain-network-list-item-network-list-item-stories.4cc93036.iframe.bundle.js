"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[3842],{"./ui/components/multichain/network-list-item/network-list-item.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChaosStory:()=>ChaosStory,DefaultStory:()=>DefaultStory,IconStory:()=>IconStory,SelectedStory:()=>SelectedStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _DefaultStory$paramet,_DefaultStory$paramet2,_DefaultStory$paramet3,_IconStory$parameters,_IconStory$parameters2,_IconStory$parameters3,_SelectedStory$parame,_SelectedStory$parame2,_SelectedStory$parame3,_ChaosStory$parameter,_ChaosStory$parameter2,_ChaosStory$parameter3,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/components/multichain/network-list-item/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Multichain/NetworkListItem",component:___WEBPACK_IMPORTED_MODULE_1__.h,argTypes:{name:{control:"text"},selected:{control:"boolean"},onClick:{action:"onClick"},onDeleteClick:{action:"onDeleteClick"},iconSrc:{action:"text"}},args:{name:"Ethereum",iconSrc:"",selected:!1}},DefaultStory=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"328px",border:"1px solid var(--color-border-muted)"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.h,args)),IconStory=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"328px",border:"1px solid var(--color-border-muted)"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.h,args));IconStory.args={iconSrc:"./images/matic-token.png",name:"Polygon"};const SelectedStory=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"328px",border:"1px solid var(--color-border-muted)"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.h,args));SelectedStory.args={selected:!0};const ChaosStory=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"328px",border:"1px solid var(--color-border-muted)"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.h,args));ChaosStory.args={name:"This is a super long network name that should be ellipsized",selected:!0},DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => <div style={{\n  width: '328px',\n  border: '1px solid var(--color-border-muted)'\n}}>\n    <NetworkListItem {...args} />\n  </div>",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet3=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet3?void 0:_DefaultStory$paramet3.source}}},IconStory.parameters={...IconStory.parameters,docs:{...null===(_IconStory$parameters=IconStory.parameters)||void 0===_IconStory$parameters?void 0:_IconStory$parameters.docs,source:{originalSource:"args => <div style={{\n  width: '328px',\n  border: '1px solid var(--color-border-muted)'\n}}>\n    <NetworkListItem {...args} />\n  </div>",...null===(_IconStory$parameters2=IconStory.parameters)||void 0===_IconStory$parameters2||null===(_IconStory$parameters3=_IconStory$parameters2.docs)||void 0===_IconStory$parameters3?void 0:_IconStory$parameters3.source}}},SelectedStory.parameters={...SelectedStory.parameters,docs:{...null===(_SelectedStory$parame=SelectedStory.parameters)||void 0===_SelectedStory$parame?void 0:_SelectedStory$parame.docs,source:{originalSource:"args => <div style={{\n  width: '328px',\n  border: '1px solid var(--color-border-muted)'\n}}>\n    <NetworkListItem {...args} />\n  </div>",...null===(_SelectedStory$parame2=SelectedStory.parameters)||void 0===_SelectedStory$parame2||null===(_SelectedStory$parame3=_SelectedStory$parame2.docs)||void 0===_SelectedStory$parame3?void 0:_SelectedStory$parame3.source}}},ChaosStory.parameters={...ChaosStory.parameters,docs:{...null===(_ChaosStory$parameter=ChaosStory.parameters)||void 0===_ChaosStory$parameter?void 0:_ChaosStory$parameter.docs,source:{originalSource:"args => <div style={{\n  width: '328px',\n  border: '1px solid var(--color-border-muted)'\n}}>\n    <NetworkListItem {...args} />\n  </div>",...null===(_ChaosStory$parameter2=ChaosStory.parameters)||void 0===_ChaosStory$parameter2||null===(_ChaosStory$parameter3=_ChaosStory$parameter2.docs)||void 0===_ChaosStory$parameter3?void 0:_ChaosStory$parameter3.source}}};const __namedExportsOrder=["DefaultStory","IconStory","SelectedStory","ChaosStory"];DefaultStory.__docgenInfo={description:"",methods:[],displayName:"DefaultStory"},IconStory.__docgenInfo={description:"",methods:[],displayName:"IconStory"},SelectedStory.__docgenInfo={description:"",methods:[],displayName:"SelectedStory"},ChaosStory.__docgenInfo={description:"",methods:[],displayName:"ChaosStory"}},"./ui/components/multichain/network-list-item/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>NetworkListItem});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),box=__webpack_require__("./ui/components/ui/box/box.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.js"),useI18nContext=__webpack_require__("./ui/hooks/useI18nContext.js"),tooltip=__webpack_require__("./ui/components/ui/tooltip/tooltip.js"),network=__webpack_require__("./shared/constants/network.ts");function getAvatarNetworkColor(name){switch(name){case network.cm:return design_system.lP.goerli;case network.Pf:return design_system.lP.lineaGoerli;case network.xs:return design_system.lP.sepolia;default:return}}const NetworkListItem=({name,iconSrc,selected=!1,onClick,onDeleteClick})=>{const t=(0,useI18nContext.C)(),networkRef=(0,react.useRef)();return(0,react.useEffect)((()=>{networkRef.current&&selected&&networkRef.current.querySelector(".mm-button-link").focus()}),[networkRef,selected]),react.createElement(box.ZP,{onClick,padding:4,gap:2,backgroundColor:selected?design_system.Il.primaryMuted:design_system.Il.transparent,className:classnames_default()("multichain-network-list-item",{"multichain-network-list-item--selected":selected}),alignItems:design_system.g1.center,justifyContent:design_system.E0.spaceBetween,width:design_system.Sw.Full,ref:networkRef},selected&&react.createElement(box.ZP,{className:"multichain-network-list-item__selected-indicator",borderRadius:design_system.cM.pill,backgroundColor:design_system.Il.primaryDefault}),react.createElement(component_library.OQ,{backgroundColor:getAvatarNetworkColor(name),name,src:iconSrc}),react.createElement(box.ZP,{className:"multichain-network-list-item__network-name"},react.createElement(component_library.ZP,{onClick:e=>{e.stopPropagation(),onClick()},color:design_system.d9.textDefault,ellipsis:!0},name.length>17?react.createElement(tooltip.Z,{title:name,position:"bottom",wrapperClassName:"multichain-network-list-item__tooltip"},name):name)),onDeleteClick?react.createElement(component_library.Ei,{className:"multichain-network-list-item__delete",color:design_system.EY.errorDefault,iconName:component_library.uH.Trash,ariaLabel:t("deleteNetwork"),size:design_system.$u.SM,onClick:e=>{e.stopPropagation(),onDeleteClick()}}):null)};NetworkListItem.propTypes={name:prop_types_default().string.isRequired,iconSrc:prop_types_default().string,selected:prop_types_default().bool,onClick:prop_types_default().func.isRequired,onDeleteClick:prop_types_default().func},NetworkListItem.__docgenInfo={description:"",methods:[],displayName:"NetworkListItem",props:{selected:{defaultValue:{value:"false",computed:!1},description:"Represents if the network item is selected",type:{name:"bool"},required:!1},name:{description:"The name of the network",type:{name:"string"},required:!0},iconSrc:{description:"Path to the Icon image",type:{name:"string"},required:!1},onClick:{description:"Executes when the item is clicked",type:{name:"func"},required:!0},onDeleteClick:{description:"Executes when the delete icon is clicked",type:{name:"func"},required:!1}}}}}]);