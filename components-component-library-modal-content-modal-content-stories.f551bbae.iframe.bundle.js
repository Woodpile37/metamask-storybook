/*! For license information please see components-component-library-modal-content-modal-content-stories.f551bbae.iframe.bundle.js.LICENSE.txt */
"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[3358],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./ui/components/component-library/modal-content/modal-content.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Children:()=>Children,DefaultStory:()=>DefaultStory,Size:()=>Size,__namedExportsOrder:()=>__namedExportsOrder,default:()=>modal_content_stories});var react=__webpack_require__("./node_modules/react/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),modal_content=__webpack_require__("./ui/components/component-library/modal-content/modal-content.tsx"),modal_content_types=__webpack_require__("./ui/components/component-library/modal-content/modal-content.types.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h2:"h2",h3:"h3",pre:"pre",ul:"ul",li:"li"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h1,{id:"modalcontent",children:"ModalContent"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalContent"})," is the container for the modal dialog's content. It uses context supplied by the ",(0,jsx_runtime.jsx)(_components.code,{children:"Modal"})," component and cannot be used without it."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.a,{href:"https://www.notion.so/MetaMask-Design-System-Guides-Design-f86ecc914d6b4eb6873a122b83c12940",target:"_blank",rel:"nofollow noopener noreferrer",children:"MetaMask Design System Guides"})}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalcontent--default-story"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:modal_content.h}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"children",children:"Children"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"children"})," prop to render the content of ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalContent"}),". The ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalContent"})," should generally be used with the ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalHeader"})," component."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalcontent--children"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nimport { Modal, ModalContent, ModalHeader, ModalBody, Text, Button, ButtonVariant } from '../../component-library';\n\nconst [show, setShow] = useState(false);\nconst handleOnClick = () => {\n  setShow(!show);\n};\n\n<Button variant={ButtonVariant.Primary} onClick={handleOnClick}>\n  Open\n</Button>\n<Modal isOpen={show} onClose={handleOnClick}>\n  <ModalContent {...args}>\n    <ModalHeader marginBottom={4}>Modal Header</ModalHeader>\n    <ModalBody>\n      <Text marginBottom={4}>Modal Content</Text>\n      <Button variant={ButtonVariant.Primary} onClick={handleOnClick}>\n        Close\n      </Button>\n      <LoremIpsum />\n      <LoremIpsum />\n      <LoremIpsum />\n      <LoremIpsum />\n      <LoremIpsum />\n    </ModalBody>\n  </ModalContent>\n</Modal>\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"size",children:"Size"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the ",(0,jsx_runtime.jsx)(_components.code,{children:"size"})," prop to set the size of the ",(0,jsx_runtime.jsx)(_components.code,{children:"ModalContent"})]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalContentSize.Sm"})," (360px)"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalContentSize.Md"})," (480px)"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"ModalContentSize.Lg"})," (720px)"]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set a custom size, use the ",(0,jsx_runtime.jsx)(_components.code,{children:"modalDialogProps"})," prop and pass in a ",(0,jsx_runtime.jsx)(_components.code,{children:"className"})," with a max width."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{id:"components-componentlibrary-modalcontent--size"})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import {\n  ModalContent,\n  ModalContentSize,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from '../../component-library';\n\n<ModalContent size={ModalContentSize.Sm}>\n  <ModalHeader marginBottom={4}>\n    This ModalContent is using size: sm\n  </ModalHeader>\n  <ModalBody>\n    <Text marginBottom={4}>This ModalContent is using size: sm</Text>\n  </ModalBody>\n  <ModalFooter onSubmit={handleOnClose}>\n</ModalContent>;\n\n<ModalContent size={ModalContentSize.Md}>\n  <ModalHeader marginBottom={4}>\n    This ModalContent is using size: md\n  </ModalHeader>\n  <Text marginBottom={4}>This ModalContent is using size: md</Text>\n</ModalContent>;\n\n<ModalContent size={ModalContentSize.Lg}>\n  <ModalHeader marginBottom={4}>\n    This ModalContent is using size: lg\n  </ModalHeader>\n  <Text marginBottom={4}>This ModalContent is using size: lg</Text>\n  <ModalFooter onSubmit={handleOnClose}>\n</ModalContent>;\n\n/* Using a className\n  .max-width-800 {\n    max-width: 800px;\n  }\n*/\n<ModalContent modalDialogProps={{ className: 'max-width-800' }}>\n  <ModalHeader marginBottom={4}>\n    This ModalContent is using size: className\n  </ModalHeader>\n  <Text marginBottom={4}>\n    This ModalContent has size set using modalDialogProps and adding a className\n    setting a max width (max-width: 800px)\n  </Text>\n  <ModalFooter onSubmit={handleOnClose}>\n</ModalContent>;\n"})})]})}const README=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};var _DefaultStory$paramet,_DefaultStory$paramet2,_Children$parameters,_Children$parameters2,_Size$parameters,_Size$parameters2;function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const modal_content_stories={title:"Components/ComponentLibrary/ModalContent",component:modal_content.h,parameters:{docs:{page:README}},argTypes:{children:{control:"text"},size:{control:"select",options:Object.values(modal_content_types.p)},modalDialogProps:{control:"object"}}},LoremIpsum=()=>react.createElement(component_library.xv,{marginBottom:4},"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam euismod tortor vitae nisi blandit, eu aliquam nisl ultricies. Donec euismod scelerisque nisl, sit amet aliquet nunc. Donec euismod, nisl vitae consectetur aliquam, nunc nunc ultricies nunc, eget aliquam nisl nisl vitae nunc. Donec euismod, nisl vitae consectetur aliquam, nunc nunc ultricies nunc, eget aliquam nisl nisl vitae nunc. Donec euismod, nisl vitae consectetur aliquam, nunc nunc ultricies nunc, eget aliquam nisl nisl vitae nunc. Donec euismod, nisl vitae consectetur aliquam, nunc"),DefaultStory=args=>{const[show,setShow]=(0,react.useState)(!1),handleOnClick=()=>{setShow(!show)};return react.createElement(react.Fragment,null,react.createElement(component_library.zx,{variant:component_library.Wu.Primary,onClick:handleOnClick},"Open"),react.createElement(component_library.u_,{isOpen:show,onClose:handleOnClick},react.createElement(modal_content.h,args,react.createElement(component_library.xB,null,"Modal Header"),react.createElement(component_library.fe,null,react.createElement(component_library.xv,null,"Modal Content")),react.createElement(component_library.mz,{onSubmit:handleOnClick,submitButtonProps:{children:"Close"}}))))};DefaultStory.storyName="Default";const Children=args=>{const[show,setShow]=(0,react.useState)(!1),handleOnClick=()=>{setShow(!show)};return react.createElement(react.Fragment,null,react.createElement(component_library.zx,{variant:component_library.Wu.Primary,onClick:handleOnClick},"Open"),react.createElement(component_library.u_,{isOpen:show,onClose:handleOnClick},react.createElement(modal_content.h,args,react.createElement(component_library.xB,{marginBottom:4},"Modal Header"),react.createElement(component_library.fe,null,react.createElement(component_library.xv,{marginBottom:4},"The ModalContent with ModalHeader, ModalBody, ModalFooter as children"),react.createElement(LoremIpsum,null),react.createElement(LoremIpsum,null),react.createElement(LoremIpsum,null),react.createElement(LoremIpsum,null),react.createElement(LoremIpsum,null)),react.createElement(component_library.mz,{onSubmit:handleOnClick,submitButtonProps:{children:"Close"}}))))};var ModalContentSizeStoryOption=function(ModalContentSizeStoryOption){return ModalContentSizeStoryOption.Sm="sm",ModalContentSizeStoryOption.Md="md",ModalContentSizeStoryOption.Lg="lg",ModalContentSizeStoryOption.ClassName="className",ModalContentSizeStoryOption}(ModalContentSizeStoryOption||{});const Size=args=>{const[currentSize,setCurrentSize]=(0,react.useState)(null);return react.createElement(react.Fragment,null,react.createElement(component_library.xu,{display:design_system.sS.Flex,flexWrap:design_system.gP.Wrap,gap:4},Object.values(ModalContentSizeStoryOption).map((size=>react.createElement(component_library.zx,{key:size,variant:component_library.Wu.Secondary,onClick:()=>(size=>{setCurrentSize(currentSize===size?null:size)})(size)},`Show ${size} size`)))),currentSize&&react.createElement(component_library.u_,{isOpen:!0,onClose:()=>setCurrentSize(null)},react.createElement(modal_content.h,_extends({},args,{size:(size=>{switch(size){case ModalContentSizeStoryOption.Sm:return modal_content_types.p.Sm;case ModalContentSizeStoryOption.Md:return modal_content_types.p.Md;case ModalContentSizeStoryOption.Lg:return modal_content_types.p.Lg;default:return modal_content_types.p.Sm}})(currentSize),modalDialogProps:currentSize===ModalContentSizeStoryOption.ClassName?{className:"max-width-800"}:{}}),react.createElement(component_library.xB,{marginBottom:4,onClose:()=>setCurrentSize(null)},`ModalContent size: ${currentSize}`),react.createElement(component_library.fe,null,react.createElement(component_library.xv,{marginBottom:4},currentSize===ModalContentSizeStoryOption.ClassName?react.createElement(react.Fragment,null,"This ModalContent has size set using modalDialogProps and adding a className setting a max width (max-width: 800px)"," "):react.createElement(react.Fragment,null,"This ModalContent is using size: ",currentSize))),react.createElement(component_library.mz,{onSubmit:()=>setCurrentSize(null),submitButtonProps:{children:"Close"}}))))};DefaultStory.parameters={...DefaultStory.parameters,docs:{...null===(_DefaultStory$paramet=DefaultStory.parameters)||void 0===_DefaultStory$paramet?void 0:_DefaultStory$paramet.docs,source:{originalSource:"args => {\n  const [show, setShow] = useState(false);\n  const handleOnClick = () => {\n    setShow(!show);\n  };\n  return <>\n      <Button variant={ButtonVariant.Primary} onClick={handleOnClick}>\n        Open\n      </Button>\n      <Modal isOpen={show} onClose={handleOnClick}>\n        <ModalContent {...args}>\n          <ModalHeader>Modal Header</ModalHeader>\n          <ModalBody>\n            <Text>Modal Content</Text>\n          </ModalBody>\n          <ModalFooter onSubmit={handleOnClick} submitButtonProps={{\n          children: 'Close'\n        }} />\n        </ModalContent>\n      </Modal>\n    </>;\n}",...null===(_DefaultStory$paramet2=DefaultStory.parameters)||void 0===_DefaultStory$paramet2||null===(_DefaultStory$paramet2=_DefaultStory$paramet2.docs)||void 0===_DefaultStory$paramet2?void 0:_DefaultStory$paramet2.source}}},Children.parameters={...Children.parameters,docs:{...null===(_Children$parameters=Children.parameters)||void 0===_Children$parameters?void 0:_Children$parameters.docs,source:{originalSource:"args => {\n  const [show, setShow] = useState(false);\n  const handleOnClick = () => {\n    setShow(!show);\n  };\n  return <>\n      <Button variant={ButtonVariant.Primary} onClick={handleOnClick}>\n        Open\n      </Button>\n      <Modal isOpen={show} onClose={handleOnClick}>\n        <ModalContent {...args}>\n          <ModalHeader marginBottom={4}>Modal Header</ModalHeader>\n          <ModalBody>\n            <Text marginBottom={4}>\n              The ModalContent with ModalHeader, ModalBody, ModalFooter as\n              children\n            </Text>\n            <LoremIpsum />\n            <LoremIpsum />\n            <LoremIpsum />\n            <LoremIpsum />\n            <LoremIpsum />\n          </ModalBody>\n          <ModalFooter onSubmit={handleOnClick} submitButtonProps={{\n          children: 'Close'\n        }} />\n        </ModalContent>\n      </Modal>\n    </>;\n}",...null===(_Children$parameters2=Children.parameters)||void 0===_Children$parameters2||null===(_Children$parameters2=_Children$parameters2.docs)||void 0===_Children$parameters2?void 0:_Children$parameters2.source}}},Size.parameters={...Size.parameters,docs:{...null===(_Size$parameters=Size.parameters)||void 0===_Size$parameters?void 0:_Size$parameters.docs,source:{originalSource:"args => {\n  const [currentSize, setCurrentSize] = useState<ModalContentSizeStoryOption | null>(null);\n  const handleOnClick = (size: ModalContentSizeStoryOption) => {\n    setCurrentSize(currentSize === size ? null : size);\n  };\n  const getSize = (size: ModalContentSizeStoryOption) => {\n    switch (size) {\n      case ModalContentSizeStoryOption.Sm:\n        return ModalContentSize.Sm;\n      case ModalContentSizeStoryOption.Md:\n        return ModalContentSize.Md;\n      case ModalContentSizeStoryOption.Lg:\n        return ModalContentSize.Lg;\n      default:\n        return ModalContentSize.Sm;\n    }\n  };\n  return <>\n      <Box display={Display.Flex} flexWrap={FlexWrap.Wrap} gap={4}>\n        {Object.values(ModalContentSizeStoryOption).map(size => <Button key={size} variant={ButtonVariant.Secondary} onClick={() => handleOnClick(size)}>\n            {`Show ${size} size`}\n          </Button>)}\n      </Box>\n      {currentSize && <Modal isOpen={true} onClose={() => setCurrentSize(null)}>\n          <ModalContent {...args} size={getSize(currentSize)} modalDialogProps={currentSize === ModalContentSizeStoryOption.ClassName ? {\n        className: 'max-width-800'\n      } : {}}>\n            <ModalHeader marginBottom={4} onClose={() => setCurrentSize(null)}>\n              {`ModalContent size: ${currentSize}`}\n            </ModalHeader>\n            <ModalBody>\n              <Text marginBottom={4}>\n                {currentSize === ModalContentSizeStoryOption.ClassName ? <>\n                    This ModalContent has size set using modalDialogProps and\n                    adding a className setting a max width (max-width: 800px){' '}\n                  </> : <>This ModalContent is using size: {currentSize}</>}\n              </Text>\n            </ModalBody>\n            <ModalFooter onSubmit={() => setCurrentSize(null)} submitButtonProps={{\n          children: 'Close'\n        }} />\n          </ModalContent>\n        </Modal>}\n    </>;\n}",...null===(_Size$parameters2=Size.parameters)||void 0===_Size$parameters2||null===(_Size$parameters2=_Size$parameters2.docs)||void 0===_Size$parameters2?void 0:_Size$parameters2.source}}};const __namedExportsOrder=["DefaultStory","Children","Size"]},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);