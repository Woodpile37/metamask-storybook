"use strict";(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[7806],{"./ui/components/app/advanced-gas-controls/advanced-gas-controls.component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>AdvancedGasControls});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_contexts_i18n__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/contexts/i18n.js"),_ui_form_field__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./ui/components/ui/form-field/index.js"),_helpers_constants_gas__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./ui/helpers/constants/gas.js");function AdvancedGasControls({onManualChange,gasLimit,setGasLimit,gasPrice,setGasPrice,gasErrors,minimumGasLimit}){const t=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_contexts_i18n__WEBPACK_IMPORTED_MODULE_1__.OO);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"advanced-gas-controls"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_form_field__WEBPACK_IMPORTED_MODULE_2__.Z,{titleText:t("gasLimit"),error:null!=gasErrors&&gasErrors.gasLimit?(0,_helpers_constants_gas__WEBPACK_IMPORTED_MODULE_3__.V3)(gasErrors.gasLimit,t,{minimumGasLimit}):null,onChange:value=>{null==onManualChange||onManualChange(),setGasLimit(value)},tooltipText:t("editGasLimitTooltip"),value:gasLimit,allowDecimals:!1,numeric:!0}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ui_form_field__WEBPACK_IMPORTED_MODULE_2__.Z,{titleText:t("advancedGasPriceTitle"),titleUnit:"(GWEI)",onChange:value=>{null==onManualChange||onManualChange(),setGasPrice(value)},tooltipText:t("editGasPriceTooltip"),value:gasPrice,numeric:!0,allowDecimals:!0,error:null!=gasErrors&&gasErrors.gasPrice?(0,_helpers_constants_gas__WEBPACK_IMPORTED_MODULE_3__.V3)(gasErrors.gasPrice,t):null})))}AdvancedGasControls.propTypes={onManualChange:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,gasLimit:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number,setGasLimit:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,gasPrice:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,setGasPrice:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,minimumGasLimit:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,gasErrors:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object},AdvancedGasControls.__docgenInfo={description:"",methods:[],displayName:"AdvancedGasControls",props:{onManualChange:{description:"",type:{name:"func"},required:!1},gasLimit:{description:"",type:{name:"number"},required:!1},setGasLimit:{description:"",type:{name:"func"},required:!1},gasPrice:{description:"",type:{name:"string"},required:!1},setGasPrice:{description:"",type:{name:"func"},required:!1},minimumGasLimit:{description:"",type:{name:"string"},required:!1},gasErrors:{description:"",type:{name:"object"},required:!1}}}},"./ui/components/app/edit-gas-display/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>EditGasDisplay});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),bignumber=__webpack_require__("./node_modules/bignumber.js/bignumber.js"),bignumber_default=__webpack_require__.n(bignumber),gas=__webpack_require__("./shared/constants/gas.ts"),ui_button=__webpack_require__("./ui/components/ui/button/index.js"),design_system=__webpack_require__("./ui/helpers/constants/design-system.ts"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),confirm_tx_util=__webpack_require__("./ui/helpers/utils/confirm-tx.util.ts"),info_tooltip=__webpack_require__("./ui/components/ui/info-tooltip/index.js"),advanced_gas_controls_component=__webpack_require__("./ui/components/app/advanced-gas-controls/advanced-gas-controls.component.js"),i18n=__webpack_require__("./ui/contexts/i18n.js");function EditGasDisplay({mode=gas.G_.modifyInPlace,estimatedMinimumNative,transaction,gasPrice,setGasPrice,gasLimit,setGasLimit,properGasLimit,dappSuggestedGasFeeAcknowledged,setDappSuggestedGasFeeAcknowledged,onManualChange,minimumGasLimit,balanceError,gasErrors,txParamsHaveBeenCustomized}){const t=(0,react.useContext)(i18n.OO),scrollRef=(0,react.useRef)(null),dappSuggestedAndTxParamGasFeesAreTheSame=(0,confirm_tx_util.n$)(transaction),requireDappAcknowledgement=Boolean((null==transaction?void 0:transaction.dappSuggestedGasFees)&&!dappSuggestedGasFeeAcknowledged&&dappSuggestedAndTxParamGasFeesAreTheSame);let warningMessage;void 0!==gasLimit&&void 0!==properGasLimit&&new(bignumber_default())(gasLimit).lessThan(new(bignumber_default())(properGasLimit))&&(warningMessage=t("gasLimitRecommended",[properGasLimit]));const showTopError=balanceError&&txParamsHaveBeenCustomized;return react.createElement("div",{className:"edit-gas-display"},react.createElement("div",{className:"edit-gas-display__content"},showTopError&&react.createElement(component_library.wB,{severity:design_system.zb.Danger,description:t("insufficientFunds"),marginBottom:6}),warningMessage&&react.createElement(component_library.wB,{severity:design_system.zb.Warning,description:warningMessage,marginBottom:6}),requireDappAcknowledgement&&react.createElement(component_library.wB,{severity:design_system.zb.Warning,className:"banner-alert--warning",description:t("gasDisplayDappWarning",[transaction.origin]),marginBottom:6}),mode===gas.G_.speedUp&&react.createElement("div",{className:"edit-gas-display__top-tooltip"},react.createElement(component_library.xv,{color:design_system.d9.textDefault,variant:design_system.rK.bodySm,as:"h6",fontWeight:design_system.U9.Bold},t("speedUpTooltipText")," ",react.createElement(info_tooltip.Z,{position:"top",contentText:t("speedUpExplanation")}))),react.createElement(component_library.xv,{color:design_system.d9.textDefault,variant:design_system.rK.headingLg,as:"h1",textAlign:design_system.PH.Center},estimatedMinimumNative),requireDappAcknowledgement&&react.createElement(ui_button.Z,{className:"edit-gas-display__dapp-acknowledgement-button",onClick:()=>setDappSuggestedGasFeeAcknowledged(!0)},t("gasDisplayAcknowledgeDappButtonText")),!requireDappAcknowledgement&&react.createElement(advanced_gas_controls_component.Z,{gasLimit,setGasLimit,gasPrice,setGasPrice,onManualChange,minimumGasLimit,gasErrors})),react.createElement("div",{ref:scrollRef,className:"edit-gas-display__scroll-bottom"}))}EditGasDisplay.propTypes={mode:prop_types_default().oneOf(Object.values(gas.G_)),estimatedMinimumNative:prop_types_default().string,gasPrice:prop_types_default().string,setGasPrice:prop_types_default().func,gasLimit:prop_types_default().number,setGasLimit:prop_types_default().func,properGasLimit:prop_types_default().number,dappSuggestedGasFeeAcknowledged:prop_types_default().bool,setDappSuggestedGasFeeAcknowledged:prop_types_default().func,transaction:prop_types_default().object,onManualChange:prop_types_default().func,minimumGasLimit:prop_types_default().string,balanceError:prop_types_default().bool,gasErrors:prop_types_default().object,txParamsHaveBeenCustomized:prop_types_default().bool},EditGasDisplay.__docgenInfo={description:"",methods:[],displayName:"EditGasDisplay",props:{mode:{defaultValue:{value:"EditGasModes.modifyInPlace",computed:!0},description:"",type:{name:"enum",computed:!0,value:"Object.values(EditGasModes)"},required:!1},estimatedMinimumNative:{description:"",type:{name:"string"},required:!1},gasPrice:{description:"",type:{name:"string"},required:!1},setGasPrice:{description:"",type:{name:"func"},required:!1},gasLimit:{description:"",type:{name:"number"},required:!1},setGasLimit:{description:"",type:{name:"func"},required:!1},properGasLimit:{description:"",type:{name:"number"},required:!1},dappSuggestedGasFeeAcknowledged:{description:"",type:{name:"bool"},required:!1},setDappSuggestedGasFeeAcknowledged:{description:"",type:{name:"func"},required:!1},transaction:{description:"",type:{name:"object"},required:!1},onManualChange:{description:"",type:{name:"func"},required:!1},minimumGasLimit:{description:"",type:{name:"string"},required:!1},balanceError:{description:"",type:{name:"bool"},required:!1},gasErrors:{description:"",type:{name:"object"},required:!1},txParamsHaveBeenCustomized:{description:"",type:{name:"bool"},required:!1}}}},"./ui/components/app/edit-gas-popover/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>EditGasPopover});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),es=__webpack_require__("./node_modules/react-redux/es/index.js"),useGasFeeInputs=__webpack_require__("./ui/hooks/gasFeeInput/useGasFeeInputs.js"),transaction_utils=__webpack_require__("./shared/modules/transaction.utils.js"),gas=__webpack_require__("./shared/constants/gas.ts"),component_library=__webpack_require__("./ui/components/component-library/index.ts"),deprecated=__webpack_require__("./ui/components/component-library/modal-content/deprecated/index.ts"),modal_header_deprecated=__webpack_require__("./ui/components/component-library/modal-header/deprecated/index.ts"),edit_gas_display=__webpack_require__("./ui/components/app/edit-gas-display/index.js"),i18n=__webpack_require__("./ui/contexts/i18n.js"),actions=__webpack_require__("./ui/store/actions.ts"),loading_heartbeat=__webpack_require__("./ui/components/ui/loading-heartbeat/index.js"),useIncrementedGasFees=__webpack_require__("./ui/hooks/useIncrementedGasFees.js"),conversion_utils=__webpack_require__("./shared/modules/conversion.utils.ts"),process=__webpack_require__("./node_modules/process/browser.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function EditGasPopover({popoverTitle="",confirmButtonText="",editGasDisplayProps={},transaction,mode,onClose,minimumGasLimit=gas.Kw.SIMPLE}){const t=(0,react.useContext)(i18n.OO),dispatch=(0,es.I0)(),[dappSuggestedGasFeeAcknowledged,setDappSuggestedGasFeeAcknowledged]=(0,react.useState)(!1),minimumGasLimitDec=(0,conversion_utils.Z8)(minimumGasLimit),updatedCustomGasSettings=(0,useIncrementedGasFees.N)(transaction);let updatedTransaction=transaction;mode!==gas.G_.speedUp&&mode!==gas.G_.cancel||(updatedTransaction={...transaction,userFeeLevel:gas.d_,txParams:{...transaction.txParams,...updatedCustomGasSettings}});const{estimatedMinimumNative,gasPrice,setGasPrice,gasLimit,setGasLimit,properGasLimit,estimateToUse,hasGasErrors,gasErrors,onManualChange,balanceError}=(0,useGasFeeInputs.a)(gas.RQ.medium,updatedTransaction,minimumGasLimit,mode),txParamsHaveBeenCustomized=estimateToUse===gas.d_||(0,transaction_utils.EN)(updatedTransaction),closePopover=(0,react.useCallback)((()=>{onClose?onClose():dispatch((0,actions.VGc)())}),[onClose,dispatch]),onSubmit=(0,react.useCallback)((async()=>{updatedTransaction&&mode||closePopover();const newGasSettings={gas:(0,conversion_utils.X0)(gasLimit),gasLimit:(0,conversion_utils.X0)(gasLimit),estimateUsed:estimateToUse,gasPrice:(0,conversion_utils.Kn)(gasPrice)},cleanTransactionParams={...updatedTransaction.txParams},updatedTxMeta={...updatedTransaction,userEditedGasLimit:gasLimit!==Number(transaction.originalGasEstimate),userFeeLevel:estimateToUse||gas.d_,txParams:{...cleanTransactionParams,...newGasSettings}};switch(mode){case gas.G_.cancel:dispatch((0,actions.vGx)(updatedTransaction.id,newGasSettings));break;case gas.G_.speedUp:dispatch((0,actions.$eK)(updatedTransaction.id,newGasSettings));break;case gas.G_.modifyInPlace:newGasSettings.userEditedGasLimit=updatedTxMeta.userEditedGasLimit,newGasSettings.userFeeLevel=updatedTxMeta.userFeeLevel,dispatch((0,actions.Nbs)()),await dispatch((0,actions.ol_)(updatedTxMeta.id,newGasSettings)),dispatch((0,actions.awJ)())}closePopover()}),[updatedTransaction,mode,dispatch,closePopover,gasLimit,gasPrice,transaction.originalGasEstimate,estimateToUse]);let title=t("editGasTitle");popoverTitle?title=popoverTitle:mode===gas.G_.speedUp?title=t("speedUpPopoverTitle"):mode===gas.G_.cancel&&(title=t("cancelPopoverTitle"));const footerButtonText=confirmButtonText||t("save");return react.createElement(component_library.u_,{isOpen:!0,onClose:closePopover},react.createElement(component_library.ZA,null),react.createElement(deprecated.h,{autoFocus:!1,className:"edit-gas-popover"},react.createElement(modal_header_deprecated.x,{onClose:closePopover,marginBottom:4},title),react.createElement("div",{className:"edit-gas-popover__edit-gas-display"},process.env.IN_TEST?null:react.createElement(loading_heartbeat.Z,null),react.createElement(edit_gas_display.Z,_extends({dappSuggestedGasFeeAcknowledged,setDappSuggestedGasFeeAcknowledged,estimatedMinimumNative,gasPrice,setGasPrice,gasLimit,setGasLimit,properGasLimit,mode,transaction:updatedTransaction,onManualChange,minimumGasLimit:minimumGasLimitDec,balanceError,txParamsHaveBeenCustomized,gasErrors},editGasDisplayProps))),react.createElement(component_library.zx,{block:!0,variant:component_library.Wu.Primary,size:component_library.qE.LG,marginTop:4,onClick:onSubmit,disabled:hasGasErrors||balanceError||!txParamsHaveBeenCustomized},footerButtonText)))}EditGasPopover.propTypes={popoverTitle:prop_types_default().string,editGasDisplayProps:prop_types_default().object,confirmButtonText:prop_types_default().string,onClose:prop_types_default().func,transaction:prop_types_default().object,mode:prop_types_default().oneOf(Object.values(gas.G_)),minimumGasLimit:prop_types_default().string},EditGasPopover.__docgenInfo={description:"",methods:[],displayName:"EditGasPopover",props:{popoverTitle:{defaultValue:{value:"''",computed:!1},description:"",type:{name:"string"},required:!1},confirmButtonText:{defaultValue:{value:"''",computed:!1},description:"",type:{name:"string"},required:!1},editGasDisplayProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},minimumGasLimit:{defaultValue:{value:"GAS_LIMITS.SIMPLE",computed:!0},description:"",type:{name:"string"},required:!1},onClose:{description:"",type:{name:"func"},required:!1},transaction:{description:"",type:{name:"object"},required:!1},mode:{description:"",type:{name:"enum",computed:!0,value:"Object.values(EditGasModes)"},required:!1}}}},"./ui/components/ui/loading-heartbeat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>LoadingHeartBeat});var es=__webpack_require__("./node_modules/react-redux/es/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),gas=__webpack_require__("./ui/helpers/utils/gas.js"),app=__webpack_require__("./ui/ducks/app/app.ts"),lodash=__webpack_require__("./node_modules/lodash/lodash.js"),useGasFeeEstimates=__webpack_require__("./ui/hooks/useGasFeeEstimates.js");var process=__webpack_require__("./node_modules/process/browser.js");const LOADING_CLASS="loading-heartbeat--active";function LoadingHeartBeat({estimateUsed,backgroundColor="var(--color-background-default)"}){!function useShouldAnimateGasEstimations(){const{isGasEstimatesLoading,gasFeeEstimates}=(0,useGasFeeEstimates.a)(),dispatch=(0,es.I0)(),isGasLoadingAnimationActive=(0,es.v9)(app.Jl),lastGasEstimates=(0,react.useRef)(gasFeeEstimates),gasEstimatesChanged=!(0,lodash.isEqual)(lastGasEstimates.current,gasFeeEstimates),gasJustLoaded=(0,lodash.isEqual)(lastGasEstimates.current,{});gasEstimatesChanged&&(lastGasEstimates.current=gasFeeEstimates);const showLoadingAnimation=isGasEstimatesLoading||gasEstimatesChanged&&!gasJustLoaded;(0,react.useEffect)((()=>{!1===isGasLoadingAnimationActive&&!0===showLoadingAnimation&&dispatch((0,app.nh)(!0))}),[dispatch,isGasLoadingAnimationActive,showLoadingAnimation]),(0,react.useEffect)((()=>{let timer;return isGasLoadingAnimationActive&&!showLoadingAnimation&&(timer=setTimeout((()=>{dispatch((0,app.nh)(!1))}),2e3)),()=>{timer&&clearTimeout(timer)}}),[dispatch,isGasLoadingAnimationActive,showLoadingAnimation])}();const active=(0,es.v9)(app.Jl);return process.env.IN_TEST||estimateUsed&&!(0,gas.DW)(estimateUsed)?null:react.createElement("div",{className:classnames_default()("loading-heartbeat",{[LOADING_CLASS]:active}),onClick:e=>{e.preventDefault(),e.stopPropagation()},style:{backgroundColor}})}LoadingHeartBeat.propTypes={backgroundColor:prop_types_default().string,estimateUsed:prop_types_default().string},LoadingHeartBeat.__docgenInfo={description:"",methods:[],displayName:"LoadingHeartBeat",props:{backgroundColor:{defaultValue:{value:"'var(--color-background-default)'",computed:!1},description:"",type:{name:"string"},required:!1},estimateUsed:{description:"",type:{name:"string"},required:!1}}}},"./ui/hooks/useIncrementedGasFees.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>useIncrementedGasFees});var bignumber_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/bignumber.js/bignumber.js"),bignumber_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_shared_modules_conversion_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./shared/modules/conversion.utils.ts"),_shared_modules_transaction_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./shared/modules/transaction.utils.js"),_helpers_utils_gas__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./ui/helpers/utils/gas.js"),_useGasFeeEstimates__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./ui/hooks/useGasFeeEstimates.js");function getHighestIncrementedFee(originalFee,currentEstimate){const buffedOriginalHexWei=(0,_helpers_utils_gas__WEBPACK_IMPORTED_MODULE_4__.Vc)(originalFee),currentEstimateHexWei=(0,_shared_modules_conversion_utils__WEBPACK_IMPORTED_MODULE_2__.Kn)(currentEstimate);return new(bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(buffedOriginalHexWei,16).greaterThan(new(bignumber_js__WEBPACK_IMPORTED_MODULE_0___default())(currentEstimateHexWei,16))?buffedOriginalHexWei:currentEstimateHexWei}function useIncrementedGasFees(transaction){const{gasFeeEstimates={}}=(0,_useGasFeeEstimates__WEBPACK_IMPORTED_MODULE_5__.a)();return(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{var _transaction$txParams,_transaction$txParams2,_gasFeeEstimates$medi,_gasFeeEstimates$medi2;const temporaryGasSettings={gasLimit:null===(_transaction$txParams=transaction.txParams)||void 0===_transaction$txParams?void 0:_transaction$txParams.gas,gas:null===(_transaction$txParams2=transaction.txParams)||void 0===_transaction$txParams2?void 0:_transaction$txParams2.gas},suggestedMaxFeePerGas=(null==gasFeeEstimates||null===(_gasFeeEstimates$medi=gasFeeEstimates.medium)||void 0===_gasFeeEstimates$medi?void 0:_gasFeeEstimates$medi.suggestedMaxFeePerGas)??"0",suggestedMaxPriorityFeePerGas=(null==gasFeeEstimates||null===(_gasFeeEstimates$medi2=gasFeeEstimates.medium)||void 0===_gasFeeEstimates$medi2?void 0:_gasFeeEstimates$medi2.suggestedMaxPriorityFeePerGas)??"0";if((0,_shared_modules_transaction_utils__WEBPACK_IMPORTED_MODULE_3__.K3)(transaction)){var _transaction$txParams3,_transaction$txParams4;const transactionMaxFeePerGas=null===(_transaction$txParams3=transaction.txParams)||void 0===_transaction$txParams3?void 0:_transaction$txParams3.maxFeePerGas,transactionMaxPriorityFeePerGas=null===(_transaction$txParams4=transaction.txParams)||void 0===_transaction$txParams4?void 0:_transaction$txParams4.maxPriorityFeePerGas;temporaryGasSettings.maxFeePerGas=void 0===transactionMaxFeePerGas||transactionMaxFeePerGas.startsWith("-")?"0x0":getHighestIncrementedFee(transactionMaxFeePerGas,suggestedMaxFeePerGas),temporaryGasSettings.maxPriorityFeePerGas=void 0===transactionMaxPriorityFeePerGas||transactionMaxPriorityFeePerGas.startsWith("-")?"0x0":getHighestIncrementedFee(transactionMaxPriorityFeePerGas,suggestedMaxPriorityFeePerGas)}else{var _transaction$txParams5;const transactionGasPrice=null===(_transaction$txParams5=transaction.txParams)||void 0===_transaction$txParams5?void 0:_transaction$txParams5.gasPrice;temporaryGasSettings.gasPrice=void 0===transactionGasPrice||transactionGasPrice.startsWith("-")?"0x0":getHighestIncrementedFee(transactionGasPrice,suggestedMaxFeePerGas)}return temporaryGasSettings}),[transaction,gasFeeEstimates])}}}]);